<?xml version="1.0" encoding="utf-8"?>
<pex id="{c7e0004c-e371-408a-856a-e925c0939296}" creationTime="2013-03-05 20:55:30Z" configuration="*\*\*" created="2013-03-05 20:55:30Z" pexVersion="0.94.51023.0" xml="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Library\bin\Debug\reports\130306.022530.11164.pex\report.per" html="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Library\bin\Debug\reports\130306.022530.11164.pex\report.html"><environment commandLine="&quot;C:\Program Files (x86)\Microsoft Pex\bin\Microsoft.Pex.x86.exe&quot; &quot;F:\Ajay\Test Projects\GameOfLife\GameOfLife.Library\bin\Debug\GameOfLife.Core.dll&quot; /assemblyresolutiondirectories:&quot;C:\Program Files (x86)\Microsoft Visual Studio 10.0\Common7\IDE\PublicAssemblies&quot; /explorationreflectionmode:LazyWizard /instrumentedassemblies:DataAccess.Specification;GameOfLife.Contracts;GameOfLife.Data;GameOfLife.Models /targetx86 /x64failsilently /clrversion:v4.0.30319 /donotopenreport /reportlevel:Xml /reportrootpath:&quot;F:\Ajay\Test Projects\GameOfLife\GameOfLife.Library\bin\Debug\reports&quot; /testassemblyname:GameOfLife.Core.Tests /testframework:VisualStudioUnitTest /testlanguage:cs /testprojectfile:&quot;F:\Ajay\Test Projects\GameOfLife\GameOfLife.Library\GameOfLife.Core.csproj&quot; /testprojectnotupdate /testprojectskip" machineName="ASINGH-LAP" osVersion="Microsoft Windows NT 6.1.7601 Service Pack 1" processorCount="4" clrVersion="4.0.30319.18034" bitness="x86" user="asingh"><envVars><envVar name="CLRMONITOR_PROTECT_ALL_CCTORS" value="1"/>
<envVar name="PYTHONHOME" value="C:\csvn\Python25\"/>
<envVar name="COMPUTERNAME" value="ASINGH-LAP"/>
<envVar name="CLRMONITOR_INJECT_TYPES" value=""/>
<envVar name="CommonProgramFiles(x86)" value="C:\Program Files (x86)\Common Files"/>
<envVar name="PROCESSOR_IDENTIFIER" value="Intel64 Family 6 Model 37 Stepping 2, GenuineIntel"/>
<envVar name="APR_ICONV1_PATH" value="C:\csvn\bin\iconv\"/>
<envVar name="TMP" value="C:\Users\ASINGH~1.CON\AppData\Local\Temp"/>
<envVar name="GTK_BASEPATH" value="C:\Program Files (x86)\GtkSharp\2.12\"/>
<envVar name="HOMEPATH" value="\Users\asingh.CONTATAN"/>
<envVar name="QTJAVA" value="C:\Program Files (x86)\Java\jre7\lib\ext\QTJava.zip"/>
<envVar name="POSTSHARP20" value="C:\Program Files (x86)\PostSharp 2.1\"/>
<envVar name="CLASSPATH" value=".;C:\Program Files (x86)\Java\jre7\lib\ext\QTJava.zip"/>
<envVar name="PROCESSOR_REVISION" value="2502"/>
<envVar name="CLRMONITOR_INSTRUMENT_TYPES_EXCLUSIONS" value=""/>
<envVar name="Path" value="C:\csvn\bin\;C:\csvn\Python25\;C:\Oracle11g\product\11.2.0\client_1;C:\Oracle11g\product\11.2.0\client_1\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Program Files\Lenovo\Bluetooth Software\;C:\Program Files\Lenovo\Bluetooth Software\syswow64;C:\Program Files (x86)\EgisTec BioExcess\;C:\Program Files (x86)\EgisTec BioExcess\x64;C:\Program Files\TortoiseSVN\bin;C:\Program Files (x86)\Microsoft SQL Server\100\Tools\Binn\;C:\Program Files\Microsoft SQL Server\100\Tools\Binn\;C:\Program Files\Microsoft SQL Server\100\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\100\Tools\Binn\VSShell\Common7\IDE\;C:\Program Files (x86)\Microsoft Visual Studio 9.0\Common7\IDE\PrivateAssemblies\;C:\Program Files (x86)\Microsoft SQL Server\100\DTS\Binn\;C:\Program Files (x86)\Microsoft ASP.NET\ASP.NET Web Pages\v1.0\;c:\oracle;c:\oracle\bin;C:\Program Files\Microsoft Windows Performance Toolkit\;C:\Program Files\TortoiseHg\;C:\Program Files\TortoiseGit\bin;C:\Program Files (x86)\GtkSharp\2.12\bin;C:\Program Files (x86)\QuickTime\QTSystem\;C:\Program Files\Microsoft SQL Server\110\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\110\Tools\Binn\;C:\Program Files\Microsoft SQL Server\110\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\110\Tools\Binn\ManagementStudio\;C:\Program Files (x86)\Microsoft Visual Studio 10.0\Common7\IDE\PrivateAssemblies\;C:\Program Files (x86)\Microsoft SQL Server\110\DTS\Binn\;C:\Program Files (x86)\Microsoft SDKs\TypeScript\0.8.0.0\;C:\Program Files (x86)\Windows Kits\8.0\Windows Performance Toolkit\;C:\Users\asingh.CONTATAN\AppData\Roaming\npm;C:\Program Files (x86)\nodejs\;C:\Program Files\Windows Fabric\bin\Fabric\Fabric.Code.1.0;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Microsoft\Web Platform Installer\;F:\Ruby\bin;C:\Chocolatey\bin"/>
<envVar name="VS100COMNTOOLS" value="C:\Program Files (x86)\Microsoft Visual Studio 10.0\Common7\Tools\"/>
<envVar name="COMPLUS_DEFAULTVERSION" value="v4.0.30319"/>
<envVar name="CLRMONITOR_CLSID" value="{fa6276ae-c2b7-443f-9cac-ea13fd3b342a}"/>
<envVar name="PROCESSOR_LEVEL" value="6"/>
<envVar name="TEMP" value="C:\Users\ASINGH~1.CON\AppData\Local\Temp"/>
<envVar name="LOCALAPPDATA" value="C:\Users\asingh.CONTATAN\AppData\Local"/>
<envVar name="PUBLIC" value="C:\Users\Public"/>
<envVar name="VBOX_INSTALL_PATH" value="C:\Program Files\Oracle\VirtualBox\"/>
<envVar name="CLRMONITOR_PROTECT_TYPES" value="Microsoft.FSharp.Text.Printf,Microsoft.FSharp.Text.PrintfImpl"/>
<envVar name="ERLANG_HOME" value="C:\Program Files (x86)\erl5.9"/>
<envVar name="ProgramW6432" value="C:\Program Files"/>
<envVar name="CLRMONITOR_INITIALIZED" value="0xe"/>
<envVar name="FabricDataRoot" value="C:\ProgramData\Windows Fabric\"/>
<envVar name="StockTraderInstall" value="F:\Ajay\New Docs to Copy\StockTrader\stocktrader5.5\"/>
<envVar name="ComSpec" value="C:\Windows\system32\cmd.exe"/>
<envVar name="CLRMONITOR_ERASE_FINALIZER_TYPES" value=""/>
<envVar name="USERDNSDOMAIN" value="CONTATAN.LOCAL"/>
<envVar name="CLRMONITOR_INJECT_NAMESPACES" value=""/>
<envVar name="NUMBER_OF_PROCESSORS" value="4"/>
<envVar name="windows_tracing_flags" value="3"/>
<envVar name="CommonProgramFiles" value="C:\Program Files (x86)\Common Files"/>
<envVar name="USERDOMAIN" value="CONTATAN"/>
<envVar name="ProgramFiles(x86)" value="C:\Program Files (x86)"/>
<envVar name="CLRMONITOR_INSTRUMENT_NAMESPACES_EXCLUSIONS" value=""/>
<envVar name="CLRMONITOR_FLAGS" value=""/>
<envVar name="DEVPATH" value="F:\Ajay\Test Projects\SingalR\signalRoverflow\overflow\bin"/>
<envVar name="VisualStudioDir" value="C:\Users\asingh.CONTATAN\Documents\Visual Studio 2010"/>
<envVar name="pex_instrumentation" value="1"/>
<envVar name="DEP" value="C:\Program Files (x86)\Microsoft Dependency Checker\"/>
<envVar name="VSSDK100Install" value="C:\Program Files (x86)\Microsoft Visual Studio 2010 SDK\"/>
<envVar name="CLRMONITOR_INSTRUMENT_TYPES" value="System.Array,System.Array+ArrayEnumerator,System.Array+FunctorComparer`1,System.Array+SZArrayEnumerator,System.Array+SorterGenericArray,System.Array+SorterObjectArray,System.Boolean,System.Byte,System.Char,System.CharEnumerator,System.ComponentModel.Component,System.ComponentModel.Container,System.ComponentModel.Container+Site,System.Convert,System.Currency,System.DateTime,System.Decimal,System.Diagnostics.Assert,System.Double,System.Globalization.CharUnicodeInfo,System.Globalization.CultureTableRecord,System.Globalization.TextInfo,System.Guid,System.IO.MemoryStream,System.IO.Stream,System.IO.StreamReader,System.IO.StreamWriter,System.IO.StringReader,System.IO.StringWriter,System.Int16,System.Int32,System.Int64,System.Lazy`1,System.Lazy`1+Boxed,System.Lazy`1+LazyInternalExceptionHolder,System.Math,System.Nullable,System.Nullable`1,System.OrdinalComparer,System.SByte,System.SZArrayHelper,System.SZArrayHelper+SZGenericArrayEnumerator`1,System.Single,System.String,System.StringComparer,System.Text.ASCIIEncoding,System.Text.DecoderNLS,System.Text.Encoding,System.Text.UTF8Encoding,System.TimeSpan,System.Tuple,System.Tuple`1,System.Tuple`2,System.Tuple`3,System.Tuple`4,System.Tuple`5,System.Tuple`6,System.Tuple`7,System.Tuple`8,System.UInt16,System.UInt32,System.UInt64,System.Xml.XmlTextWriter,System.Xml.XmlTextWriter+Namespace,System.Xml.XmlTextWriter+NamespaceState,System.Xml.XmlTextWriter+SpecialAttr,System.Xml.XmlTextWriter+State,System.Xml.XmlTextWriter+TagInfo,System.Xml.XmlTextWriter+Token,System.Xml.XmlWriter,System.Xml.XmlWriter+&lt;WriteAttributeStringAsyncHelper&gt;d__0,System.Xml.XmlWriter+&lt;WriteAttributesAsync&gt;d__7,System.Xml.XmlWriter+&lt;WriteElementStringAsync&gt;d__20,System.Xml.XmlWriter+&lt;WriteLocalNamespacesAsync&gt;d__23,System.Xml.XmlWriter+&lt;WriteNodeAsync&gt;d__19,System.Xml.XmlWriter+&lt;WriteNodeAsync_CallAsyncReader&gt;d__10,System.Xml.XmlWriter+&lt;WriteNodeAsync_CallSyncReader&gt;d__a,System.Xml.XmlWriter+&lt;WriteQualifiedNameAsync&gt;d__3,__Box`1,__SzArrayHelper`1"/>
<envVar name="ProgramFiles" value="C:\Program Files (x86)"/>
<envVar name="ProgramData" value="C:\ProgramData"/>
<envVar name="FabricRoot" value="C:\Program Files\Windows Fabric\"/>
<envVar name="ChocolateyInstall" value="C:\Chocolatey"/>
<envVar name="CLRMONITOR_ERASE_CCTOR_TYPES" value=""/>
<envVar name="FP_NO_HOST_CHECK" value="NO"/>
<envVar name="COR_PROFILER" value="{fa6276ae-c2b7-443f-9cac-ea13fd3b342a}"/>
<envVar name="pex_clientid" value="pex10960_1"/>
<envVar name="CodedUITestCurrentBrowser" value="IE"/>
<envVar name="windir" value="C:\Windows"/>
<envVar name="PATHEXT" value=".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.RB;.RBW"/>
<envVar name="CLRMONITOR_INSTRUMENT_ATTRIBUTE" value="Microsoft.Moles.Framework.Moles.MolesInstrumentAttribute"/>
<envVar name="PSModulePath" value="C:\Windows\system32\WindowsPowerShell\v1.0\Modules\;C:\Program Files (x86)\Microsoft SQL Server\110\Tools\PowerShell\Modules\;C:\Program Files\Service Bus\1.0\;C:\Program Files\Workflow Manager\1.0\;C:\Program Files\Microsoft Baseline Configuration Analyzer 2\Modules\"/>
<envVar name="COMPLUS_ProfAPI_ProfilerCompatibilitySetting" value="EnableV2Profiler"/>
<envVar name="pex_server_channel" value="pex10960"/>
<envVar name="SystemRoot" value="C:\Windows"/>
<envVar name="CommonProgramW6432" value="C:\Program Files\Common Files"/>
<envVar name="PROCESSOR_ARCHITEW6432" value="AMD64"/>
<envVar name="CLRMONITOR_INJECT_ASSEMBLIES" value=""/>
<envVar name="USERPROFILE" value="C:\Users\asingh.CONTATAN"/>
<envVar name="CLRMONITOR_SUBSTITUTIONS" value="C:\Windows\assembly\GAC_MSIL\Microsoft.ExtendedReflection\0.94.0.0__31bf3856ad364e35\Microsoft.ExtendedReflection.dll"/>
<envVar name="VS90COMNTOOLS" value="C:\Program Files (x86)\Microsoft Visual Studio 9.0\Common7\Tools\"/>
<envVar name="JAVA_HOME" value="C:\Program Files\Java\jre6"/>
<envVar name="APPDATA" value="C:\Users\asingh.CONTATAN\AppData\Roaming"/>
<envVar name="HOMEDRIVE" value="C:"/>
<envVar name="LOGONSERVER" value="\\ADSDC"/>
<envVar name="windows_tracing_logfile" value="C:\BVTBin\Tests\installpackage\csilogfile.log"/>
<envVar name="CodeContractsInstallDir" value="C:\Program Files (x86)\Microsoft\Contracts\"/>
<envVar name="VS110COMNTOOLS" value="C:\Program Files (x86)\Microsoft Visual Studio 11.0\Common7\Tools\"/>
<envVar name="USERNAME" value="asingh"/>
<envVar name="FabricCodePath" value="C:\Program Files\Windows Fabric\bin\Fabric\Fabric.Code.1.0"/>
<envVar name="PROCESSOR_ARCHITECTURE" value="x86"/>
<envVar name="CLRMONITOR_INSTRUMENT_ASSEMBLIES_EXCLUSIONS" value=""/>
<envVar name="OS" value="Windows_NT"/>
<envVar name="CLRMONITOR_INSTRUMENT_NAMESPACES" value="System.Collections,System.Collections.Generic,System.Collections.ObjectModel,System.Collections.Specialized,System.Diagnostics.Contracts"/>
<envVar name="SystemDrive" value="C:"/>
<envVar name="CLRMONITOR_INSTRUMENT_ASSEMBLIES" value="DataAccess.Specification,FSharp.Core,FSharp.PowerPack,GameOfLife.Contracts,GameOfLife.Core,GameOfLife.Core.Tests,GameOfLife.Data,GameOfLife.Models,Microsoft.Contracts,Microsoft.VisualBasic,Microsoft.VisualStudio.QualityTools.UnitTestFramework,System,System.Core,System.Web"/>
<envVar name="FabricBinRoot" value="C:\Program Files\Windows Fabric\bin"/>
<envVar name="ALLUSERSPROFILE" value="C:\ProgramData"/>
</envVars>
</environment>
<settings/>
<reflection/>
<assembly name="GameOfLife.Core" version="1.0.0.0" fileVersion="1.0.0.0" fullName="GameOfLife.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" location="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Library\bin\Debug\GameOfLife.Core.dll" fileName="GameOfLife.Core.dll"><settings testFramework="VisualStudioUnitTest" testLanguage="cs"/>
<dump category="Tests" title="Build default assembly set for new project"><dtTree><dtTreeNode text="Build default assembly set for new project"><dtTextNode><rstring contentMode="memory"><![CDATA[visibility: exported and assembly(GameOfLife.Core)
Processing 8 types
Processing GameOfLife.Core
Scanning assembly references in GameOfLife.Core
Applying template AssemblyInfo to GameOfLife.Core
generating method bodies
flushing generated code
updating assembly references
]]></rstring>
</dtTextNode>
</dtTreeNode>
</dtTree>
</dump>
<fixture name="GameRulesTest" type="GameOfLife.Core.GameRulesTest" typeName="GameRulesTest" token="2000007" href="fix\GameOfLife.Core.Tests.535.html"><type spec="Class"><definition assemblyName="GameOfLife.Core.Tests" name="GameRulesTest" token="2000007" namespace="GameOfLife.Core"/>
</type>
<settings typeUnderTest="GameOfLife.Core.GameRules"/>
<exploration shortName="IsOverCrowded(GameRules, IGrid, ICell)" fullName="GameOfLife.Core.GameRulesTest.IsOverCrowded(GameRules, IGrid, ICell)" isDynamicCode="true"><method><definition assemblyName="GameOfLife.Core.Tests" name="IsOverCrowded" token="6000014"><declaringType assemblyName="GameOfLife.Core.Tests" name="GameRulesTest" token="2000007" namespace="GameOfLife.Core"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Core.Tests" name="GameRulesTest" token="2000007" namespace="GameOfLife.Core"/>
</type>
</parameter>
<parameter name="target" position="1"><type spec="Class"><definition assemblyName="GameOfLife.Core" name="GameRules" token="2000007" namespace="GameOfLife.Core"/>
</type>
</parameter>
<parameter name="grid" position="2"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IGrid" token="2000008" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
<parameter name="cell" position="3"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="ICell" token="2000002" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
<resultType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009e" namespace="System"/>
</resultType>
</definition>
</method>
<target><methodDefinition assemblyName="GameOfLife.Core" name="IsOverCrowded" token="600001c"><declaringType assemblyName="GameOfLife.Core" name="GameRules" token="2000007" namespace="GameOfLife.Core"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Core" name="GameRules" token="2000007" namespace="GameOfLife.Core"/>
</type>
</parameter>
<parameter name="grid" position="1"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IGrid" token="2000008" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
<parameter name="cell" position="2"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="ICell" token="2000002" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
<resultType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009e" namespace="System"/>
</resultType>
</methodDefinition>
</target>
<memberUnderTest assemblyName="GameOfLife.Core" name="IsOverCrowded" token="600001c"><declaringType assemblyName="GameOfLife.Core" name="GameRules" token="2000007" namespace="GameOfLife.Core"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Core" name="GameRules" token="2000007" namespace="GameOfLife.Core"/>
</type>
</parameter>
<parameter name="grid" position="1"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IGrid" token="2000008" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
<parameter name="cell" position="2"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="ICell" token="2000002" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
<resultType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009e" namespace="System"/>
</resultType>
</memberUnderTest>
<log level="warning" time="2013-03-05 20:55:36Z" wikiTopic="Pex Needs Help To Find Types" category="domains" message="do not know any type assignable to GameOfLife.Contracts.IGrid; Pex needs help to find types"/>
<log level="warning" time="2013-03-05 20:55:36Z" wikiTopic="Pex Needs Help To Find Types" category="domains" message="do not know any type assignable to GameOfLife.Contracts.ICell; Pex needs help to find types"/>
<log level="error" time="2013-03-05 20:55:38Z" wikiTopic="Missing Wiki Topic" category="execution" message="runtime context Microsoft.Pex.Engine.Libraries.MicrosoftVisualBasicLibrary+ProjectErrorRuntimeContextAttribute+Context failed to open"><exceptionChain><exception typeDisplayName="InvalidProgramException" source="Microsoft.VisualBasic"><message><![CDATA[Common Language Runtime detected an invalid program.]]></message>
<type spec="Class"><definition assemblyName="mscorlib" name="InvalidProgramException" token="20000f9" namespace="System"/>
</type>
<log level="message" time="2013-03-05 20:55:38Z" category="symbols" message="could not load symbols for C:\Windows\Microsoft.Net\assembly\GAC_MSIL\Microsoft.VisualBasic\v4.0_10.0.0.0__b03f5f7f11d50a3a\Microsoft.VisualBasic.dll"/>
<log level="message" time="2013-03-05 20:55:38Z" category="symbols" message="search path: ;"/>
<stackTrace><frame value="  at ProjectData..ctor()" method="ProjectData..ctor()" offset="-1"><method assemblyName="Microsoft.VisualBasic" name=".ctor" token="600053a"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at ProjectData.GetProjectData()" method="ProjectData.GetProjectData()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="GetProjectData" static="true" token="600053c"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</resultType>
</method>
</frame>
<frame value="  at Information.Err()" method="Information.Err()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="Err" static="true" token="60005ee"><declaringType assemblyName="Microsoft.VisualBasic" name="Information" token="2000087" namespace="Microsoft.VisualBasic"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ErrObject" token="200002f" namespace="Microsoft.VisualBasic"/>
</resultType>
</method>
</frame>
<frame value="  at ProjectData.ClearProjectError()" method="ProjectData.ClearProjectError()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="ClearProjectError" static="true" token="6000538"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</method>
</frame>
</stackTrace>
</exception>
</exceptionChain>
</log>
<log level="error" time="2013-03-05 20:55:39Z" wikiTopic="Missing Wiki Topic" category="execution" message="runtime context Microsoft.Pex.Engine.Libraries.MicrosoftVisualBasicLibrary+ProjectErrorRuntimeContextAttribute+Context failed to rollback"><exceptionChain><exception typeDisplayName="InvalidProgramException" source="Microsoft.VisualBasic"><message><![CDATA[Common Language Runtime detected an invalid program.]]></message>
<type spec="Class"><definition assemblyName="mscorlib" name="InvalidProgramException" token="20000f9" namespace="System"/>
</type>
<stackTrace><frame value="  at ProjectData..ctor()" method="ProjectData..ctor()" offset="-1"><method assemblyName="Microsoft.VisualBasic" name=".ctor" token="600053a"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at ProjectData.GetProjectData()" method="ProjectData.GetProjectData()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="GetProjectData" static="true" token="600053c"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</resultType>
</method>
</frame>
<frame value="  at Information.Err()" method="Information.Err()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="Err" static="true" token="60005ee"><declaringType assemblyName="Microsoft.VisualBasic" name="Information" token="2000087" namespace="Microsoft.VisualBasic"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ErrObject" token="200002f" namespace="Microsoft.VisualBasic"/>
</resultType>
</method>
</frame>
<frame value="  at ProjectData.ClearProjectError()" method="ProjectData.ClearProjectError()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="ClearProjectError" static="true" token="6000538"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</method>
</frame>
</stackTrace>
</exception>
</exceptionChain>
</log>
<test name="IsOverCrowded" state="success" duration="1.01956463257892"/>
<generatedTest id="639bee92-bb47-4bc9-8411-63bfb5e33154" index="1" run="1" status="normaltermination" explorationIsDynamicCode="true" generated="true" new="true" assemblyName="GameOfLife.Core.Tests" name="IsOverCrowded5"><declaringType assemblyName="GameOfLife.Core.Tests" name="GameRulesTest" token="ffffffff" namespace="GameOfLife.Core"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Core.Tests" name="GameRulesTest" token="ffffffff" namespace="GameOfLife.Core"/>
</type>
</parameter>
<rcov name="Block" dcov="3" dtot="3" acov="3" atot="3"/>
<rcov name="asserts" dcov="0" dtot="0" acov="0" atot="0"/>
<value name="target">new GameRules{}</value>
<value name="grid">null</value>
<value name="cell">null</value>
<value name="result(target)">new GameRules{}</value>
<value name="result">false</value>
<code><![CDATA[bool b;
GameRules s0 = new GameRules();
b = this.IsOverCrowded(s0, (IGrid)null, (ICell)null);
Assert.AreEqual<bool>(false, b);
Assert.IsNotNull((object)s0);
]]></code>
<methodCode imports="GameOfLife.Contracts;Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(GameRulesTest))]
public void IsOverCrowded5()
{
    bool b;
    GameRules s0 = new GameRules();
    b = this.IsOverCrowded(s0, (IGrid)null, (ICell)null);
    Assert.AreEqual<bool>(false, b);
    Assert.IsNotNull((object)s0);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="GameOfLife.Core.Tests"/>
<reference name="GameOfLife.Core" location="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Library\bin\Debug\GameOfLife.Core.dll"/>
<reference name="GameOfLife.Contracts" location="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Library\bin\Debug\GameOfLife.Contracts.dll"/>
<pathCondition><![CDATA[return target != (GameRules)null && methodof(target.IsOverCrowded) == methodof(GameRules.IsOverCrowded) && cell == (ICell)null;
]]></pathCondition>
</generatedTest>
<log level="message" time="2013-03-05 20:55:39Z" category="coverage" message="coverage increased from 0 to 3 blocks (+3) after flipping GameOfLife.Core.GameRulesTest.IsOverCrowded at 0x0003"/>
<coverage domain="usercodeundertest" unit="block" covered="3" total="3" coveredRatio="1"/>
<sourceCoverage xml="cov\e293\cov.xml" html="cov\e293\cov.html"/>
<result name="IsOverCrowded(GameRules, IGrid, ICell)" state="failed" duration="6.87570072633698"/>
<duration start="2013-03-05 20:55:34Z" end="2013-03-05 20:55:41Z" seconds="6.9163956"/>
</exploration>
<exploration shortName="IsReproduciable(GameRules, IGrid, ICell)" fullName="GameOfLife.Core.GameRulesTest.IsReproduciable(GameRules, IGrid, ICell)" isDynamicCode="true"><method><definition assemblyName="GameOfLife.Core.Tests" name="IsReproduciable" token="6000015"><declaringType assemblyName="GameOfLife.Core.Tests" name="GameRulesTest" token="2000007" namespace="GameOfLife.Core"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Core.Tests" name="GameRulesTest" token="2000007" namespace="GameOfLife.Core"/>
</type>
</parameter>
<parameter name="target" position="1"><type spec="Class"><definition assemblyName="GameOfLife.Core" name="GameRules" token="2000007" namespace="GameOfLife.Core"/>
</type>
</parameter>
<parameter name="grid" position="2"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IGrid" token="2000008" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
<parameter name="cell" position="3"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="ICell" token="2000002" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
<resultType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009e" namespace="System"/>
</resultType>
</definition>
</method>
<target><methodDefinition assemblyName="GameOfLife.Core" name="IsReproduciable" token="6000019"><declaringType assemblyName="GameOfLife.Core" name="GameRules" token="2000007" namespace="GameOfLife.Core"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Core" name="GameRules" token="2000007" namespace="GameOfLife.Core"/>
</type>
</parameter>
<parameter name="grid" position="1"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IGrid" token="2000008" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
<parameter name="cell" position="2"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="ICell" token="2000002" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
<resultType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009e" namespace="System"/>
</resultType>
</methodDefinition>
</target>
<memberUnderTest assemblyName="GameOfLife.Core" name="IsReproduciable" token="6000019"><declaringType assemblyName="GameOfLife.Core" name="GameRules" token="2000007" namespace="GameOfLife.Core"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Core" name="GameRules" token="2000007" namespace="GameOfLife.Core"/>
</type>
</parameter>
<parameter name="grid" position="1"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IGrid" token="2000008" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
<parameter name="cell" position="2"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="ICell" token="2000002" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
<resultType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009e" namespace="System"/>
</resultType>
</memberUnderTest>
<log level="error" time="2013-03-05 20:55:41Z" wikiTopic="Missing Wiki Topic" category="execution" message="runtime context Microsoft.Pex.Engine.Libraries.MicrosoftVisualBasicLibrary+ProjectErrorRuntimeContextAttribute+Context failed to open"><exceptionChain><exception typeDisplayName="InvalidProgramException" source="Microsoft.VisualBasic"><message><![CDATA[Common Language Runtime detected an invalid program.]]></message>
<type spec="Class"><definition assemblyName="mscorlib" name="InvalidProgramException" token="20000f9" namespace="System"/>
</type>
<stackTrace><frame value="  at ProjectData..ctor()" method="ProjectData..ctor()" offset="-1"><method assemblyName="Microsoft.VisualBasic" name=".ctor" token="600053a"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at ProjectData.GetProjectData()" method="ProjectData.GetProjectData()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="GetProjectData" static="true" token="600053c"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</resultType>
</method>
</frame>
<frame value="  at Information.Err()" method="Information.Err()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="Err" static="true" token="60005ee"><declaringType assemblyName="Microsoft.VisualBasic" name="Information" token="2000087" namespace="Microsoft.VisualBasic"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ErrObject" token="200002f" namespace="Microsoft.VisualBasic"/>
</resultType>
</method>
</frame>
<frame value="  at ProjectData.ClearProjectError()" method="ProjectData.ClearProjectError()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="ClearProjectError" static="true" token="6000538"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</method>
</frame>
</stackTrace>
</exception>
</exceptionChain>
</log>
<log level="error" time="2013-03-05 20:55:41Z" wikiTopic="Missing Wiki Topic" category="execution" message="runtime context Microsoft.Pex.Engine.Libraries.MicrosoftVisualBasicLibrary+ProjectErrorRuntimeContextAttribute+Context failed to rollback"><exceptionChain><exception typeDisplayName="InvalidProgramException" source="Microsoft.VisualBasic"><message><![CDATA[Common Language Runtime detected an invalid program.]]></message>
<type spec="Class"><definition assemblyName="mscorlib" name="InvalidProgramException" token="20000f9" namespace="System"/>
</type>
<stackTrace><frame value="  at ProjectData..ctor()" method="ProjectData..ctor()" offset="-1"><method assemblyName="Microsoft.VisualBasic" name=".ctor" token="600053a"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at ProjectData.GetProjectData()" method="ProjectData.GetProjectData()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="GetProjectData" static="true" token="600053c"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</resultType>
</method>
</frame>
<frame value="  at Information.Err()" method="Information.Err()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="Err" static="true" token="60005ee"><declaringType assemblyName="Microsoft.VisualBasic" name="Information" token="2000087" namespace="Microsoft.VisualBasic"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ErrObject" token="200002f" namespace="Microsoft.VisualBasic"/>
</resultType>
</method>
</frame>
<frame value="  at ProjectData.ClearProjectError()" method="ProjectData.ClearProjectError()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="ClearProjectError" static="true" token="6000538"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</method>
</frame>
</stackTrace>
</exception>
</exceptionChain>
</log>
<test name="IsReproduciable" state="success" duration="0.03"/>
<generatedTest id="c7960286-1e27-4c23-8049-a9b468ab67ee" index="1" run="1" status="normaltermination" explorationIsDynamicCode="true" generated="true" new="true" assemblyName="GameOfLife.Core.Tests" name="IsReproduciable5"><declaringType assemblyName="GameOfLife.Core.Tests" name="GameRulesTest" token="ffffffff" namespace="GameOfLife.Core"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Core.Tests" name="GameRulesTest" token="ffffffff" namespace="GameOfLife.Core"/>
</type>
</parameter>
<rcov name="Block" dcov="3" dtot="3" acov="3" atot="3"/>
<rcov name="asserts" dcov="0" dtot="0" acov="0" atot="0"/>
<value name="target">new GameRules{}</value>
<value name="grid">null</value>
<value name="cell">null</value>
<value name="result(target)">new GameRules{}</value>
<value name="result">false</value>
<code><![CDATA[bool b;
GameRules s0 = new GameRules();
b = this.IsReproduciable(s0, (IGrid)null, (ICell)null);
Assert.AreEqual<bool>(false, b);
Assert.IsNotNull((object)s0);
]]></code>
<methodCode imports="GameOfLife.Contracts;Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(GameRulesTest))]
public void IsReproduciable5()
{
    bool b;
    GameRules s0 = new GameRules();
    b = this.IsReproduciable(s0, (IGrid)null, (ICell)null);
    Assert.AreEqual<bool>(false, b);
    Assert.IsNotNull((object)s0);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="GameOfLife.Core.Tests"/>
<reference name="GameOfLife.Core" location="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Library\bin\Debug\GameOfLife.Core.dll"/>
<reference name="GameOfLife.Contracts" location="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Library\bin\Debug\GameOfLife.Contracts.dll"/>
<pathCondition><![CDATA[return target != (GameRules)null && methodof(target.IsReproduciable) == methodof(GameRules.IsReproduciable) && cell == (ICell)null;
]]></pathCondition>
</generatedTest>
<log level="message" time="2013-03-05 20:55:41Z" category="coverage" message="coverage increased from 0 to 3 blocks (+3) after flipping GameOfLife.Core.GameRulesTest.IsReproduciable at 0x0003"/>
<coverage domain="usercodeundertest" unit="block" covered="3" total="3" coveredRatio="1"/>
<sourceCoverage xml="cov\e314\cov.xml" html="cov\e314\cov.html"/>
<result name="IsReproduciable(GameRules, IGrid, ICell)" state="failed" duration="0.26"/>
<duration start="2013-03-05 20:55:41Z" end="2013-03-05 20:55:41Z" seconds="0.27"/>
</exploration>
<exploration shortName="IsSurvivable(GameRules, IGrid, ICell)" fullName="GameOfLife.Core.GameRulesTest.IsSurvivable(GameRules, IGrid, ICell)" isDynamicCode="true"><method><definition assemblyName="GameOfLife.Core.Tests" name="IsSurvivable" token="6000016"><declaringType assemblyName="GameOfLife.Core.Tests" name="GameRulesTest" token="2000007" namespace="GameOfLife.Core"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Core.Tests" name="GameRulesTest" token="2000007" namespace="GameOfLife.Core"/>
</type>
</parameter>
<parameter name="target" position="1"><type spec="Class"><definition assemblyName="GameOfLife.Core" name="GameRules" token="2000007" namespace="GameOfLife.Core"/>
</type>
</parameter>
<parameter name="grid" position="2"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IGrid" token="2000008" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
<parameter name="cell" position="3"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="ICell" token="2000002" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
<resultType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009e" namespace="System"/>
</resultType>
</definition>
</method>
<target><methodDefinition assemblyName="GameOfLife.Core" name="IsSurvivable" token="600001b"><declaringType assemblyName="GameOfLife.Core" name="GameRules" token="2000007" namespace="GameOfLife.Core"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Core" name="GameRules" token="2000007" namespace="GameOfLife.Core"/>
</type>
</parameter>
<parameter name="grid" position="1"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IGrid" token="2000008" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
<parameter name="cell" position="2"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="ICell" token="2000002" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
<resultType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009e" namespace="System"/>
</resultType>
</methodDefinition>
</target>
<memberUnderTest assemblyName="GameOfLife.Core" name="IsSurvivable" token="600001b"><declaringType assemblyName="GameOfLife.Core" name="GameRules" token="2000007" namespace="GameOfLife.Core"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Core" name="GameRules" token="2000007" namespace="GameOfLife.Core"/>
</type>
</parameter>
<parameter name="grid" position="1"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IGrid" token="2000008" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
<parameter name="cell" position="2"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="ICell" token="2000002" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
<resultType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009e" namespace="System"/>
</resultType>
</memberUnderTest>
<log level="error" time="2013-03-05 20:55:41Z" wikiTopic="Missing Wiki Topic" category="execution" message="runtime context Microsoft.Pex.Engine.Libraries.MicrosoftVisualBasicLibrary+ProjectErrorRuntimeContextAttribute+Context failed to open"><exceptionChain><exception typeDisplayName="InvalidProgramException" source="Microsoft.VisualBasic"><message><![CDATA[Common Language Runtime detected an invalid program.]]></message>
<type spec="Class"><definition assemblyName="mscorlib" name="InvalidProgramException" token="20000f9" namespace="System"/>
</type>
<stackTrace><frame value="  at ProjectData..ctor()" method="ProjectData..ctor()" offset="-1"><method assemblyName="Microsoft.VisualBasic" name=".ctor" token="600053a"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at ProjectData.GetProjectData()" method="ProjectData.GetProjectData()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="GetProjectData" static="true" token="600053c"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</resultType>
</method>
</frame>
<frame value="  at Information.Err()" method="Information.Err()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="Err" static="true" token="60005ee"><declaringType assemblyName="Microsoft.VisualBasic" name="Information" token="2000087" namespace="Microsoft.VisualBasic"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ErrObject" token="200002f" namespace="Microsoft.VisualBasic"/>
</resultType>
</method>
</frame>
<frame value="  at ProjectData.ClearProjectError()" method="ProjectData.ClearProjectError()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="ClearProjectError" static="true" token="6000538"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</method>
</frame>
</stackTrace>
</exception>
</exceptionChain>
</log>
<log level="error" time="2013-03-05 20:55:42Z" wikiTopic="Missing Wiki Topic" category="execution" message="runtime context Microsoft.Pex.Engine.Libraries.MicrosoftVisualBasicLibrary+ProjectErrorRuntimeContextAttribute+Context failed to rollback"><exceptionChain><exception typeDisplayName="InvalidProgramException" source="Microsoft.VisualBasic"><message><![CDATA[Common Language Runtime detected an invalid program.]]></message>
<type spec="Class"><definition assemblyName="mscorlib" name="InvalidProgramException" token="20000f9" namespace="System"/>
</type>
<stackTrace><frame value="  at ProjectData..ctor()" method="ProjectData..ctor()" offset="-1"><method assemblyName="Microsoft.VisualBasic" name=".ctor" token="600053a"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at ProjectData.GetProjectData()" method="ProjectData.GetProjectData()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="GetProjectData" static="true" token="600053c"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</resultType>
</method>
</frame>
<frame value="  at Information.Err()" method="Information.Err()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="Err" static="true" token="60005ee"><declaringType assemblyName="Microsoft.VisualBasic" name="Information" token="2000087" namespace="Microsoft.VisualBasic"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ErrObject" token="200002f" namespace="Microsoft.VisualBasic"/>
</resultType>
</method>
</frame>
<frame value="  at ProjectData.ClearProjectError()" method="ProjectData.ClearProjectError()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="ClearProjectError" static="true" token="6000538"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</method>
</frame>
</stackTrace>
</exception>
</exceptionChain>
</log>
<test name="IsSurvivable" state="success" duration="0.02"/>
<generatedTest id="c56682af-aa0a-44fb-8cec-8fe97035da8f" index="1" run="1" status="normaltermination" explorationIsDynamicCode="true" generated="true" new="true" assemblyName="GameOfLife.Core.Tests" name="IsSurvivable5"><declaringType assemblyName="GameOfLife.Core.Tests" name="GameRulesTest" token="ffffffff" namespace="GameOfLife.Core"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Core.Tests" name="GameRulesTest" token="ffffffff" namespace="GameOfLife.Core"/>
</type>
</parameter>
<rcov name="Block" dcov="3" dtot="3" acov="3" atot="3"/>
<rcov name="asserts" dcov="0" dtot="0" acov="0" atot="0"/>
<value name="target">new GameRules{}</value>
<value name="grid">null</value>
<value name="cell">null</value>
<value name="result(target)">new GameRules{}</value>
<value name="result">false</value>
<code><![CDATA[bool b;
GameRules s0 = new GameRules();
b = this.IsSurvivable(s0, (IGrid)null, (ICell)null);
Assert.AreEqual<bool>(false, b);
Assert.IsNotNull((object)s0);
]]></code>
<methodCode imports="GameOfLife.Contracts;Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(GameRulesTest))]
public void IsSurvivable5()
{
    bool b;
    GameRules s0 = new GameRules();
    b = this.IsSurvivable(s0, (IGrid)null, (ICell)null);
    Assert.AreEqual<bool>(false, b);
    Assert.IsNotNull((object)s0);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="GameOfLife.Core.Tests"/>
<reference name="GameOfLife.Core" location="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Library\bin\Debug\GameOfLife.Core.dll"/>
<reference name="GameOfLife.Contracts" location="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Library\bin\Debug\GameOfLife.Contracts.dll"/>
<pathCondition><![CDATA[return target != (GameRules)null && methodof(target.IsSurvivable) == methodof(GameRules.IsSurvivable) && cell == (ICell)null;
]]></pathCondition>
</generatedTest>
<log level="message" time="2013-03-05 20:55:42Z" category="coverage" message="coverage increased from 0 to 3 blocks (+3) after flipping GameOfLife.Core.GameRulesTest.IsSurvivable at 0x0003"/>
<coverage domain="usercodeundertest" unit="block" covered="3" total="3" coveredRatio="1"/>
<sourceCoverage xml="cov\e318\cov.xml" html="cov\e318\cov.html"/>
<result name="IsSurvivable(GameRules, IGrid, ICell)" state="failed" duration="0.49"/>
<duration start="2013-03-05 20:55:41Z" end="2013-03-05 20:55:42Z" seconds="0.49"/>
</exploration>
<exploration shortName="IsUnderPopulated(GameRules, IGrid, ICell)" fullName="GameOfLife.Core.GameRulesTest.IsUnderPopulated(GameRules, IGrid, ICell)" isDynamicCode="true"><method><definition assemblyName="GameOfLife.Core.Tests" name="IsUnderPopulated" token="6000017"><declaringType assemblyName="GameOfLife.Core.Tests" name="GameRulesTest" token="2000007" namespace="GameOfLife.Core"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Core.Tests" name="GameRulesTest" token="2000007" namespace="GameOfLife.Core"/>
</type>
</parameter>
<parameter name="target" position="1"><type spec="Class"><definition assemblyName="GameOfLife.Core" name="GameRules" token="2000007" namespace="GameOfLife.Core"/>
</type>
</parameter>
<parameter name="grid" position="2"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IGrid" token="2000008" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
<parameter name="cell" position="3"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="ICell" token="2000002" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
<resultType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009e" namespace="System"/>
</resultType>
</definition>
</method>
<target><methodDefinition assemblyName="GameOfLife.Core" name="IsUnderPopulated" token="600001a"><declaringType assemblyName="GameOfLife.Core" name="GameRules" token="2000007" namespace="GameOfLife.Core"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Core" name="GameRules" token="2000007" namespace="GameOfLife.Core"/>
</type>
</parameter>
<parameter name="grid" position="1"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IGrid" token="2000008" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
<parameter name="cell" position="2"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="ICell" token="2000002" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
<resultType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009e" namespace="System"/>
</resultType>
</methodDefinition>
</target>
<memberUnderTest assemblyName="GameOfLife.Core" name="IsUnderPopulated" token="600001a"><declaringType assemblyName="GameOfLife.Core" name="GameRules" token="2000007" namespace="GameOfLife.Core"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Core" name="GameRules" token="2000007" namespace="GameOfLife.Core"/>
</type>
</parameter>
<parameter name="grid" position="1"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IGrid" token="2000008" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
<parameter name="cell" position="2"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="ICell" token="2000002" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
<resultType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009e" namespace="System"/>
</resultType>
</memberUnderTest>
<log level="error" time="2013-03-05 20:55:42Z" wikiTopic="Missing Wiki Topic" category="execution" message="runtime context Microsoft.Pex.Engine.Libraries.MicrosoftVisualBasicLibrary+ProjectErrorRuntimeContextAttribute+Context failed to open"><exceptionChain><exception typeDisplayName="InvalidProgramException" source="Microsoft.VisualBasic"><message><![CDATA[Common Language Runtime detected an invalid program.]]></message>
<type spec="Class"><definition assemblyName="mscorlib" name="InvalidProgramException" token="20000f9" namespace="System"/>
</type>
<stackTrace><frame value="  at ProjectData..ctor()" method="ProjectData..ctor()" offset="-1"><method assemblyName="Microsoft.VisualBasic" name=".ctor" token="600053a"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at ProjectData.GetProjectData()" method="ProjectData.GetProjectData()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="GetProjectData" static="true" token="600053c"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</resultType>
</method>
</frame>
<frame value="  at Information.Err()" method="Information.Err()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="Err" static="true" token="60005ee"><declaringType assemblyName="Microsoft.VisualBasic" name="Information" token="2000087" namespace="Microsoft.VisualBasic"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ErrObject" token="200002f" namespace="Microsoft.VisualBasic"/>
</resultType>
</method>
</frame>
<frame value="  at ProjectData.ClearProjectError()" method="ProjectData.ClearProjectError()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="ClearProjectError" static="true" token="6000538"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</method>
</frame>
</stackTrace>
</exception>
</exceptionChain>
</log>
<log level="error" time="2013-03-05 20:55:42Z" wikiTopic="Missing Wiki Topic" category="execution" message="runtime context Microsoft.Pex.Engine.Libraries.MicrosoftVisualBasicLibrary+ProjectErrorRuntimeContextAttribute+Context failed to rollback"><exceptionChain><exception typeDisplayName="InvalidProgramException" source="Microsoft.VisualBasic"><message><![CDATA[Common Language Runtime detected an invalid program.]]></message>
<type spec="Class"><definition assemblyName="mscorlib" name="InvalidProgramException" token="20000f9" namespace="System"/>
</type>
<stackTrace><frame value="  at ProjectData..ctor()" method="ProjectData..ctor()" offset="-1"><method assemblyName="Microsoft.VisualBasic" name=".ctor" token="600053a"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at ProjectData.GetProjectData()" method="ProjectData.GetProjectData()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="GetProjectData" static="true" token="600053c"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</resultType>
</method>
</frame>
<frame value="  at Information.Err()" method="Information.Err()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="Err" static="true" token="60005ee"><declaringType assemblyName="Microsoft.VisualBasic" name="Information" token="2000087" namespace="Microsoft.VisualBasic"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ErrObject" token="200002f" namespace="Microsoft.VisualBasic"/>
</resultType>
</method>
</frame>
<frame value="  at ProjectData.ClearProjectError()" method="ProjectData.ClearProjectError()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="ClearProjectError" static="true" token="6000538"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</method>
</frame>
</stackTrace>
</exception>
</exceptionChain>
</log>
<test name="IsUnderPopulated" state="success" duration="0.02"/>
<generatedTest id="93bf82d4-5360-4d5c-887b-87b3f597a22e" index="1" run="1" status="normaltermination" explorationIsDynamicCode="true" generated="true" new="true" assemblyName="GameOfLife.Core.Tests" name="IsUnderPopulated5"><declaringType assemblyName="GameOfLife.Core.Tests" name="GameRulesTest" token="ffffffff" namespace="GameOfLife.Core"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Core.Tests" name="GameRulesTest" token="ffffffff" namespace="GameOfLife.Core"/>
</type>
</parameter>
<rcov name="Block" dcov="3" dtot="3" acov="3" atot="3"/>
<rcov name="asserts" dcov="0" dtot="0" acov="0" atot="0"/>
<value name="target">new GameRules{}</value>
<value name="grid">null</value>
<value name="cell">null</value>
<value name="result(target)">new GameRules{}</value>
<value name="result">false</value>
<code><![CDATA[bool b;
GameRules s0 = new GameRules();
b = this.IsUnderPopulated(s0, (IGrid)null, (ICell)null);
Assert.AreEqual<bool>(false, b);
Assert.IsNotNull((object)s0);
]]></code>
<methodCode imports="GameOfLife.Contracts;Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(GameRulesTest))]
public void IsUnderPopulated5()
{
    bool b;
    GameRules s0 = new GameRules();
    b = this.IsUnderPopulated(s0, (IGrid)null, (ICell)null);
    Assert.AreEqual<bool>(false, b);
    Assert.IsNotNull((object)s0);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="GameOfLife.Core.Tests"/>
<reference name="GameOfLife.Core" location="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Library\bin\Debug\GameOfLife.Core.dll"/>
<reference name="GameOfLife.Contracts" location="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Library\bin\Debug\GameOfLife.Contracts.dll"/>
<pathCondition><![CDATA[return target != (GameRules)null && methodof(target.IsUnderPopulated) == methodof(GameRules.IsUnderPopulated) && cell == (ICell)null;
]]></pathCondition>
</generatedTest>
<log level="message" time="2013-03-05 20:55:42Z" category="coverage" message="coverage increased from 0 to 3 blocks (+3) after flipping GameOfLife.Core.GameRulesTest.IsUnderPopulated at 0x0003"/>
<coverage domain="usercodeundertest" unit="block" covered="3" total="3" coveredRatio="1"/>
<sourceCoverage xml="cov\e322\cov.xml" html="cov\e322\cov.html"/>
<result name="IsUnderPopulated(GameRules, IGrid, ICell)" state="failed" duration="0.45"/>
<duration start="2013-03-05 20:55:42Z" end="2013-03-05 20:55:42Z" seconds="0.45"/>
</exploration>
<exploration shortName="WillBeAliveInNextGeneration(GameRules, IGrid, ICell)" fullName="GameOfLife.Core.GameRulesTest.WillBeAliveInNextGeneration(GameRules, IGrid, ICell)" isDynamicCode="true"><method><definition assemblyName="GameOfLife.Core.Tests" name="WillBeAliveInNextGeneration" token="6000018"><declaringType assemblyName="GameOfLife.Core.Tests" name="GameRulesTest" token="2000007" namespace="GameOfLife.Core"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Core.Tests" name="GameRulesTest" token="2000007" namespace="GameOfLife.Core"/>
</type>
</parameter>
<parameter name="target" position="1"><type spec="Class"><definition assemblyName="GameOfLife.Core" name="GameRules" token="2000007" namespace="GameOfLife.Core"/>
</type>
</parameter>
<parameter name="grid" position="2"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IGrid" token="2000008" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
<parameter name="cell" position="3"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="ICell" token="2000002" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
<resultType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009e" namespace="System"/>
</resultType>
</definition>
</method>
<target><methodDefinition assemblyName="GameOfLife.Core" name="WillBeAliveInNextGeneration" token="6000018"><declaringType assemblyName="GameOfLife.Core" name="GameRules" token="2000007" namespace="GameOfLife.Core"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Core" name="GameRules" token="2000007" namespace="GameOfLife.Core"/>
</type>
</parameter>
<parameter name="grid" position="1"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IGrid" token="2000008" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
<parameter name="cell" position="2"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="ICell" token="2000002" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
<resultType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009e" namespace="System"/>
</resultType>
</methodDefinition>
</target>
<memberUnderTest assemblyName="GameOfLife.Core" name="WillBeAliveInNextGeneration" token="6000018"><declaringType assemblyName="GameOfLife.Core" name="GameRules" token="2000007" namespace="GameOfLife.Core"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Core" name="GameRules" token="2000007" namespace="GameOfLife.Core"/>
</type>
</parameter>
<parameter name="grid" position="1"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IGrid" token="2000008" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
<parameter name="cell" position="2"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="ICell" token="2000002" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
<resultType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009e" namespace="System"/>
</resultType>
</memberUnderTest>
<log level="error" time="2013-03-05 20:55:42Z" wikiTopic="Missing Wiki Topic" category="execution" message="runtime context Microsoft.Pex.Engine.Libraries.MicrosoftVisualBasicLibrary+ProjectErrorRuntimeContextAttribute+Context failed to open"><exceptionChain><exception typeDisplayName="InvalidProgramException" source="Microsoft.VisualBasic"><message><![CDATA[Common Language Runtime detected an invalid program.]]></message>
<type spec="Class"><definition assemblyName="mscorlib" name="InvalidProgramException" token="20000f9" namespace="System"/>
</type>
<stackTrace><frame value="  at ProjectData..ctor()" method="ProjectData..ctor()" offset="-1"><method assemblyName="Microsoft.VisualBasic" name=".ctor" token="600053a"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at ProjectData.GetProjectData()" method="ProjectData.GetProjectData()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="GetProjectData" static="true" token="600053c"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</resultType>
</method>
</frame>
<frame value="  at Information.Err()" method="Information.Err()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="Err" static="true" token="60005ee"><declaringType assemblyName="Microsoft.VisualBasic" name="Information" token="2000087" namespace="Microsoft.VisualBasic"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ErrObject" token="200002f" namespace="Microsoft.VisualBasic"/>
</resultType>
</method>
</frame>
<frame value="  at ProjectData.ClearProjectError()" method="ProjectData.ClearProjectError()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="ClearProjectError" static="true" token="6000538"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</method>
</frame>
</stackTrace>
</exception>
</exceptionChain>
</log>
<log level="message" time="2013-03-05 20:55:42Z" category="symbols" message="could not load symbols for C:\Windows\assembly\GAC_MSIL\Microsoft.Pex\0.94.0.0__31bf3856ad364e35\Microsoft.Pex.exe"/>
<log level="error" time="2013-03-05 20:55:42Z" wikiTopic="Missing Wiki Topic" category="execution" message="runtime context Microsoft.Pex.Engine.Libraries.MicrosoftVisualBasicLibrary+ProjectErrorRuntimeContextAttribute+Context failed to rollback"><exceptionChain><exception typeDisplayName="InvalidProgramException" source="Microsoft.VisualBasic"><message><![CDATA[Common Language Runtime detected an invalid program.]]></message>
<type spec="Class"><definition assemblyName="mscorlib" name="InvalidProgramException" token="20000f9" namespace="System"/>
</type>
<stackTrace><frame value="  at ProjectData..ctor()" method="ProjectData..ctor()" offset="-1"><method assemblyName="Microsoft.VisualBasic" name=".ctor" token="600053a"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at ProjectData.GetProjectData()" method="ProjectData.GetProjectData()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="GetProjectData" static="true" token="600053c"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</resultType>
</method>
</frame>
<frame value="  at Information.Err()" method="Information.Err()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="Err" static="true" token="60005ee"><declaringType assemblyName="Microsoft.VisualBasic" name="Information" token="2000087" namespace="Microsoft.VisualBasic"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ErrObject" token="200002f" namespace="Microsoft.VisualBasic"/>
</resultType>
</method>
</frame>
<frame value="  at ProjectData.ClearProjectError()" method="ProjectData.ClearProjectError()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="ClearProjectError" static="true" token="6000538"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</method>
</frame>
</stackTrace>
</exception>
</exceptionChain>
</log>
<test name="WillBeAliveInNextGeneration" state="success" duration="0.07"/>
<generatedTest id="8c041bc9-c43d-4cc8-a1e2-b1db7a22f3e3" index="1" run="1" exceptionState="expected" status="expectedexception" explorationIsDynamicCode="true" generated="true" new="true" assemblyName="GameOfLife.Core.Tests" name="WillBeAliveInNextGenerationThrowsArgumentNullException60"><declaringType assemblyName="GameOfLife.Core.Tests" name="GameRulesTest" token="ffffffff" namespace="GameOfLife.Core"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Core.Tests" name="GameRulesTest" token="ffffffff" namespace="GameOfLife.Core"/>
</type>
</parameter>
<rcov name="Block" dcov="3" dtot="16" acov="3" atot="16"/>
<rcov name="asserts" dcov="0" dtot="0" acov="0" atot="0"/>
<value name="target">new GameRules{}</value>
<value name="grid">null</value>
<value name="cell">null</value>
<code><![CDATA[bool b;
GameRules s0 = new GameRules();
b = this.WillBeAliveInNextGeneration(s0, (IGrid)null, (ICell)null);
]]></code>
<methodCode imports="GameOfLife.Contracts;Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated;System"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(GameRulesTest))]
[ExpectedException(typeof(ArgumentNullException))]
public void WillBeAliveInNextGenerationThrowsArgumentNullException60()
{
    bool b;
    GameRules s0 = new GameRules();
    b = this.WillBeAliveInNextGeneration(s0, (IGrid)null, (ICell)null);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="GameOfLife.Core.Tests"/>
<reference name="GameOfLife.Core" location="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Library\bin\Debug\GameOfLife.Core.dll"/>
<reference name="GameOfLife.Contracts" location="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Library\bin\Debug\GameOfLife.Contracts.dll"/>
<exceptionChain><exception typeDisplayName="ArgumentNullException" source="GameOfLife.Core"><message><![CDATA[Value cannot be null.
Parameter name: cell]]></message>
<type spec="Class"><definition assemblyName="mscorlib" name="ArgumentNullException" token="2000094" namespace="System"/>
</type>
<value name="paramName">cell</value>
<stackTrace><frame value="  at GameRules.WillBeAliveInNextGeneration(IGrid, ICell) in F:\Ajay\Test Projects\GameOfLife\GameOfLife.Library\GameRules.cs(19)" method="GameRules.WillBeAliveInNextGeneration(IGrid, ICell)" offset="22" file="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Library\GameRules.cs" line="19"><method assemblyName="GameOfLife.Core" name="WillBeAliveInNextGeneration" token="6000018"><declaringType assemblyName="GameOfLife.Core" name="GameRules" token="2000007" namespace="GameOfLife.Core"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Core" name="GameRules" token="2000007" namespace="GameOfLife.Core"/>
</type>
</parameter>
<parameter name="grid" position="1"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IGrid" token="2000008" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
<parameter name="cell" position="2"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="ICell" token="2000002" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
<resultType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009e" namespace="System"/>
</resultType>
</method>
<beforeSource><![CDATA[
        public bool WillBeAliveInNextGeneration(IGrid grid, ICell cell)
        {]]></beforeSource>
<source><![CDATA[            if (cell == null) throw new ArgumentNullException("cell");]]></source>
<afterSource><![CDATA[            if (IsOverCrowded(grid,cell))
            {
                //Any live cell with more than three live neighbours dies, as if by overcrowding.]]></afterSource>
</frame>
<frame value="  at GameRulesTest.WillBeAliveInNextGeneration(GameRules, IGrid, ICell)" method="GameRulesTest.WillBeAliveInNextGeneration(GameRules, IGrid, ICell)" offset="3"><method assemblyName="GameOfLife.Core.Tests" name="WillBeAliveInNextGeneration" token="6000018"><declaringType assemblyName="GameOfLife.Core.Tests" name="GameRulesTest" token="2000007" namespace="GameOfLife.Core"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Core.Tests" name="GameRulesTest" token="2000007" namespace="GameOfLife.Core"/>
</type>
</parameter>
<parameter name="target" position="1"><type spec="Class"><definition assemblyName="GameOfLife.Core" name="GameRules" token="2000007" namespace="GameOfLife.Core"/>
</type>
</parameter>
<parameter name="grid" position="2"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IGrid" token="2000008" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
<parameter name="cell" position="3"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="ICell" token="2000002" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
<resultType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009e" namespace="System"/>
</resultType>
</method>
</frame>
</stackTrace>
</exception>
</exceptionChain>
<pathCondition><![CDATA[return target != (GameRules)null && methodof(target.WillBeAliveInNextGeneration) == methodof(GameRules.WillBeAliveInNextGeneration) && cell == (ICell)null;
]]></pathCondition>
</generatedTest>
<log level="message" time="2013-03-05 20:55:42Z" category="coverage" message="coverage increased from 0 to 3 blocks (+3) after flipping GameOfLife.Core.GameRulesTest.WillBeAliveInNextGeneration at 0x0003"/>
<coverage domain="usercodeundertest" unit="block" covered="3" total="16" coveredRatio="0.1875"/>
<sourceCoverage xml="cov\e326\cov.xml" html="cov\e326\cov.html"/>
<result name="WillBeAliveInNextGeneration(GameRules, IGrid, ICell)" state="failed" duration="0.43"/>
<duration start="2013-03-05 20:55:42Z" end="2013-03-05 20:55:43Z" seconds="0.43"/>
</exploration>
<coverage domain="usercodeundertest" unit="block" covered="15" total="28" coveredRatio="0.5357142857142857"/>
<sourceCoverage xml="cov\t535\cov.xml" html="cov\t535\cov.html"/>
<duration start="2013-03-05 20:55:34Z" end="2013-03-05 20:55:43Z" seconds="8.7815023"/>
</fixture>
<fixture name="GenerationTest" type="GameOfLife.Core.GenerationTest" typeName="GenerationTest" token="2000002" href="fix\GameOfLife.Core.Tests.891.html"><type spec="Class"><definition assemblyName="GameOfLife.Core.Tests" name="GenerationTest" token="2000002" namespace="GameOfLife.Core"/>
</type>
<settings typeUnderTest="GameOfLife.Core.Generation"/>
<exploration shortName="GetNextGeneration(Generation, IGrid, IGameRules)" fullName="GameOfLife.Core.GenerationTest.GetNextGeneration(Generation, IGrid, IGameRules)" isDynamicCode="true"><method><definition assemblyName="GameOfLife.Core.Tests" name="GetNextGeneration" token="6000001"><declaringType assemblyName="GameOfLife.Core.Tests" name="GenerationTest" token="2000002" namespace="GameOfLife.Core"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Core.Tests" name="GenerationTest" token="2000002" namespace="GameOfLife.Core"/>
</type>
</parameter>
<parameter name="target" position="1"><type spec="Class"><definition assemblyName="GameOfLife.Core" name="Generation" token="2000002" namespace="GameOfLife.Core"/>
</type>
</parameter>
<parameter name="currentGrid" position="2"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IGrid" token="2000008" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
<parameter name="gameRules" position="3"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IGameRules" token="2000004" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IGrid" token="2000008" namespace="GameOfLife.Contracts"/>
</resultType>
</definition>
</method>
<target><methodDefinition assemblyName="GameOfLife.Core" name="GetNextGeneration" token="6000001"><declaringType assemblyName="GameOfLife.Core" name="Generation" token="2000002" namespace="GameOfLife.Core"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Core" name="Generation" token="2000002" namespace="GameOfLife.Core"/>
</type>
</parameter>
<parameter name="currentGrid" position="1"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IGrid" token="2000008" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
<parameter name="gameRules" position="2"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IGameRules" token="2000004" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IGrid" token="2000008" namespace="GameOfLife.Contracts"/>
</resultType>
</methodDefinition>
</target>
<memberUnderTest assemblyName="GameOfLife.Core" name="GetNextGeneration" token="6000001"><declaringType assemblyName="GameOfLife.Core" name="Generation" token="2000002" namespace="GameOfLife.Core"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Core" name="Generation" token="2000002" namespace="GameOfLife.Core"/>
</type>
</parameter>
<parameter name="currentGrid" position="1"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IGrid" token="2000008" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
<parameter name="gameRules" position="2"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IGameRules" token="2000004" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IGrid" token="2000008" namespace="GameOfLife.Contracts"/>
</resultType>
</memberUnderTest>
<log level="warning" time="2013-03-05 20:55:43Z" wikiTopic="Pex Needs Help To Find Types" category="domains" message="do not know any type assignable to GameOfLife.Contracts.IGameRules; Pex needs help to find types"/>
<log level="error" time="2013-03-05 20:55:43Z" wikiTopic="Missing Wiki Topic" category="execution" message="runtime context Microsoft.Pex.Engine.Libraries.MicrosoftVisualBasicLibrary+ProjectErrorRuntimeContextAttribute+Context failed to open"><exceptionChain><exception typeDisplayName="InvalidProgramException" source="Microsoft.VisualBasic"><message><![CDATA[Common Language Runtime detected an invalid program.]]></message>
<type spec="Class"><definition assemblyName="mscorlib" name="InvalidProgramException" token="20000f9" namespace="System"/>
</type>
<stackTrace><frame value="  at ProjectData..ctor()" method="ProjectData..ctor()" offset="-1"><method assemblyName="Microsoft.VisualBasic" name=".ctor" token="600053a"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at ProjectData.GetProjectData()" method="ProjectData.GetProjectData()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="GetProjectData" static="true" token="600053c"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</resultType>
</method>
</frame>
<frame value="  at Information.Err()" method="Information.Err()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="Err" static="true" token="60005ee"><declaringType assemblyName="Microsoft.VisualBasic" name="Information" token="2000087" namespace="Microsoft.VisualBasic"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ErrObject" token="200002f" namespace="Microsoft.VisualBasic"/>
</resultType>
</method>
</frame>
<frame value="  at ProjectData.ClearProjectError()" method="ProjectData.ClearProjectError()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="ClearProjectError" static="true" token="6000538"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</method>
</frame>
</stackTrace>
</exception>
</exceptionChain>
</log>
<log level="error" time="2013-03-05 20:55:43Z" wikiTopic="Missing Wiki Topic" category="execution" message="runtime context Microsoft.Pex.Engine.Libraries.MicrosoftVisualBasicLibrary+ProjectErrorRuntimeContextAttribute+Context failed to rollback"><exceptionChain><exception typeDisplayName="InvalidProgramException" source="Microsoft.VisualBasic"><message><![CDATA[Common Language Runtime detected an invalid program.]]></message>
<type spec="Class"><definition assemblyName="mscorlib" name="InvalidProgramException" token="20000f9" namespace="System"/>
</type>
<stackTrace><frame value="  at ProjectData..ctor()" method="ProjectData..ctor()" offset="-1"><method assemblyName="Microsoft.VisualBasic" name=".ctor" token="600053a"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at ProjectData.GetProjectData()" method="ProjectData.GetProjectData()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="GetProjectData" static="true" token="600053c"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</resultType>
</method>
</frame>
<frame value="  at Information.Err()" method="Information.Err()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="Err" static="true" token="60005ee"><declaringType assemblyName="Microsoft.VisualBasic" name="Information" token="2000087" namespace="Microsoft.VisualBasic"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ErrObject" token="200002f" namespace="Microsoft.VisualBasic"/>
</resultType>
</method>
</frame>
<frame value="  at ProjectData.ClearProjectError()" method="ProjectData.ClearProjectError()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="ClearProjectError" static="true" token="6000538"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</method>
</frame>
</stackTrace>
</exception>
</exceptionChain>
</log>
<test name="GetNextGeneration" state="success" duration="0.05"/>
<generatedTest id="497e5297-dd25-47b4-b21e-3d36ea591ad1" index="1" run="1" status="normaltermination" explorationIsDynamicCode="true" generated="true" new="true" assemblyName="GameOfLife.Core.Tests" name="GetNextGeneration314"><declaringType assemblyName="GameOfLife.Core.Tests" name="GenerationTest" token="ffffffff" namespace="GameOfLife.Core"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Core.Tests" name="GenerationTest" token="ffffffff" namespace="GameOfLife.Core"/>
</type>
</parameter>
<rcov name="Block" dcov="3" dtot="18" acov="3" atot="18"/>
<rcov name="asserts" dcov="0" dtot="0" acov="0" atot="0"/>
<value name="target">new Generation{}</value>
<value name="currentGrid">null</value>
<value name="gameRules">null</value>
<value name="result(target)">new Generation{}</value>
<value name="result">null</value>
<code><![CDATA[IGrid iGrid;
Generation s0 = new Generation();
iGrid = this.GetNextGeneration(s0, (IGrid)null, (IGameRules)null);
Assert.IsNull((object)iGrid);
Assert.IsNotNull((object)s0);
]]></code>
<methodCode imports="GameOfLife.Contracts;Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(GenerationTest))]
public void GetNextGeneration314()
{
    IGrid iGrid;
    Generation s0 = new Generation();
    iGrid = this.GetNextGeneration(s0, (IGrid)null, (IGameRules)null);
    Assert.IsNull((object)iGrid);
    Assert.IsNotNull((object)s0);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="GameOfLife.Core.Tests"/>
<reference name="GameOfLife.Contracts" location="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Library\bin\Debug\GameOfLife.Contracts.dll"/>
<reference name="GameOfLife.Core" location="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Library\bin\Debug\GameOfLife.Core.dll"/>
<pathCondition><![CDATA[return target != (Generation)null && methodof(target.GetNextGeneration) == methodof(Generation.GetNextGeneration) && currentGrid == (IGrid)null;
]]></pathCondition>
</generatedTest>
<log level="message" time="2013-03-05 20:55:43Z" category="coverage" message="coverage increased from 0 to 3 blocks (+3) after flipping GameOfLife.Core.GenerationTest.GetNextGeneration at 0x0003"/>
<coverage domain="usercodeundertest" unit="block" covered="3" total="18" coveredRatio="0.16666666666666666"/>
<sourceCoverage xml="cov\e329\cov.xml" html="cov\e329\cov.html"/>
<result name="GetNextGeneration(Generation, IGrid, IGameRules)" state="failed" duration="0.43"/>
<duration start="2013-03-05 20:55:43Z" end="2013-03-05 20:55:43Z" seconds="0.43"/>
</exploration>
<coverage domain="usercodeundertest" unit="block" covered="3" total="18" coveredRatio="0.16666666666666666"/>
<sourceCoverage xml="cov\t891\cov.xml" html="cov\t891\cov.html"/>
<duration start="2013-03-05 20:55:43Z" end="2013-03-05 20:55:43Z" seconds="0.44"/>
</fixture>
<fixture name="GridTest" type="GameOfLife.Core.GridTest" typeName="GridTest" token="2000006" href="fix\GameOfLife.Core.Tests.893.html"><type spec="Class"><definition assemblyName="GameOfLife.Core.Tests" name="GridTest" token="2000006" namespace="GameOfLife.Core"/>
</type>
<settings typeUnderTest="GameOfLife.Core.Grid"/>
<exploration shortName="Constructor(IGridSize)" fullName="GameOfLife.Core.GridTest.Constructor(IGridSize)" isDynamicCode="true"><method><definition assemblyName="GameOfLife.Core.Tests" name="Constructor" token="600000c"><declaringType assemblyName="GameOfLife.Core.Tests" name="GridTest" token="2000006" namespace="GameOfLife.Core"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Core.Tests" name="GridTest" token="2000006" namespace="GameOfLife.Core"/>
</type>
</parameter>
<parameter name="gridSize" position="1"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IGridSize" token="2000006" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="GameOfLife.Core" name="Grid" token="2000006" namespace="GameOfLife.Core"/>
</resultType>
</definition>
</method>
<target><methodDefinition assemblyName="GameOfLife.Core" name=".ctor" token="600000c"><declaringType assemblyName="GameOfLife.Core" name="Grid" token="2000006" namespace="GameOfLife.Core"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Core" name="Grid" token="2000006" namespace="GameOfLife.Core"/>
</type>
</parameter>
<parameter name="gridSize" position="1"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IGridSize" token="2000006" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
</methodDefinition>
</target>
<memberUnderTest assemblyName="GameOfLife.Core" name=".ctor" token="600000c"><declaringType assemblyName="GameOfLife.Core" name="Grid" token="2000006" namespace="GameOfLife.Core"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Core" name="Grid" token="2000006" namespace="GameOfLife.Core"/>
</type>
</parameter>
<parameter name="gridSize" position="1"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IGridSize" token="2000006" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
</memberUnderTest>
<log level="warning" time="2013-03-05 20:55:43Z" wikiTopic="Pex Needs Help To Find Types" category="domains" message="do not know any type assignable to GameOfLife.Contracts.IGridSize; Pex needs help to find types"/>
<log level="error" time="2013-03-05 20:55:43Z" wikiTopic="Missing Wiki Topic" category="execution" message="runtime context Microsoft.Pex.Engine.Libraries.MicrosoftVisualBasicLibrary+ProjectErrorRuntimeContextAttribute+Context failed to open"><exceptionChain><exception typeDisplayName="InvalidProgramException" source="Microsoft.VisualBasic"><message><![CDATA[Common Language Runtime detected an invalid program.]]></message>
<type spec="Class"><definition assemblyName="mscorlib" name="InvalidProgramException" token="20000f9" namespace="System"/>
</type>
<stackTrace><frame value="  at ProjectData..ctor()" method="ProjectData..ctor()" offset="-1"><method assemblyName="Microsoft.VisualBasic" name=".ctor" token="600053a"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at ProjectData.GetProjectData()" method="ProjectData.GetProjectData()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="GetProjectData" static="true" token="600053c"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</resultType>
</method>
</frame>
<frame value="  at Information.Err()" method="Information.Err()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="Err" static="true" token="60005ee"><declaringType assemblyName="Microsoft.VisualBasic" name="Information" token="2000087" namespace="Microsoft.VisualBasic"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ErrObject" token="200002f" namespace="Microsoft.VisualBasic"/>
</resultType>
</method>
</frame>
<frame value="  at ProjectData.ClearProjectError()" method="ProjectData.ClearProjectError()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="ClearProjectError" static="true" token="6000538"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</method>
</frame>
</stackTrace>
</exception>
</exceptionChain>
</log>
<log level="error" time="2013-03-05 20:55:43Z" wikiTopic="Missing Wiki Topic" category="execution" message="runtime context Microsoft.Pex.Engine.Libraries.MicrosoftVisualBasicLibrary+ProjectErrorRuntimeContextAttribute+Context failed to rollback"><exceptionChain><exception typeDisplayName="InvalidProgramException" source="Microsoft.VisualBasic"><message><![CDATA[Common Language Runtime detected an invalid program.]]></message>
<type spec="Class"><definition assemblyName="mscorlib" name="InvalidProgramException" token="20000f9" namespace="System"/>
</type>
<stackTrace><frame value="  at ProjectData..ctor()" method="ProjectData..ctor()" offset="-1"><method assemblyName="Microsoft.VisualBasic" name=".ctor" token="600053a"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at ProjectData.GetProjectData()" method="ProjectData.GetProjectData()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="GetProjectData" static="true" token="600053c"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</resultType>
</method>
</frame>
<frame value="  at Information.Err()" method="Information.Err()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="Err" static="true" token="60005ee"><declaringType assemblyName="Microsoft.VisualBasic" name="Information" token="2000087" namespace="Microsoft.VisualBasic"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ErrObject" token="200002f" namespace="Microsoft.VisualBasic"/>
</resultType>
</method>
</frame>
<frame value="  at ProjectData.ClearProjectError()" method="ProjectData.ClearProjectError()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="ClearProjectError" static="true" token="6000538"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</method>
</frame>
</stackTrace>
</exception>
</exceptionChain>
</log>
<test name="Constructor" state="success" duration="0.01"/>
<generatedTest id="dc6013bb-28dc-4240-8fc5-db55914c1f6a" index="1" run="1" exceptionState="expected" status="expectedexception" explorationIsDynamicCode="true" generated="true" new="true" assemblyName="GameOfLife.Core.Tests" name="ConstructorThrowsArgumentNullException216"><declaringType assemblyName="GameOfLife.Core.Tests" name="GridTest" token="ffffffff" namespace="GameOfLife.Core"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Core.Tests" name="GridTest" token="ffffffff" namespace="GameOfLife.Core"/>
</type>
</parameter>
<rcov name="Block" dcov="4" dtot="7" acov="4" atot="7"/>
<rcov name="asserts" dcov="0" dtot="0" acov="0" atot="0"/>
<value name="gridSize">null</value>
<code><![CDATA[Grid grid;
grid = this.Constructor((IGridSize)null);
]]></code>
<methodCode imports="GameOfLife.Contracts;Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated;System"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(GridTest))]
[ExpectedException(typeof(ArgumentNullException))]
public void ConstructorThrowsArgumentNullException216()
{
    Grid grid;
    grid = this.Constructor((IGridSize)null);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="GameOfLife.Core.Tests"/>
<reference name="GameOfLife.Core" location="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Library\bin\Debug\GameOfLife.Core.dll"/>
<reference name="GameOfLife.Contracts" location="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Library\bin\Debug\GameOfLife.Contracts.dll"/>
<exceptionChain><exception typeDisplayName="ArgumentNullException" source="GameOfLife.Core"><message><![CDATA[Value cannot be null.
Parameter name: gridSize]]></message>
<type spec="Class"><definition assemblyName="mscorlib" name="ArgumentNullException" token="2000094" namespace="System"/>
</type>
<value name="paramName">gridSize</value>
<stackTrace><frame value="  at Grid..ctor(IGridSize) in F:\Ajay\Test Projects\GameOfLife\GameOfLife.Library\Grid.cs(24)" method="Grid..ctor(IGridSize)" offset="29" file="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Library\Grid.cs" line="24"><method assemblyName="GameOfLife.Core" name=".ctor" token="600000c"><declaringType assemblyName="GameOfLife.Core" name="Grid" token="2000006" namespace="GameOfLife.Core"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Core" name="Grid" token="2000006" namespace="GameOfLife.Core"/>
</type>
</parameter>
<parameter name="gridSize" position="1"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IGridSize" token="2000006" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
</method>
<beforeSource><![CDATA[
        public Grid(IGridSize gridSize)
        {]]></beforeSource>
<source><![CDATA[            if (gridSize == null) throw new ArgumentNullException("gridSize");]]></source>
<afterSource><![CDATA[            GridSize = gridSize;
            _gridStorage = new GridStorage(gridSize);
        }]]></afterSource>
</frame>
<frame value="  at GridTest.Constructor(IGridSize)" method="GridTest.Constructor(IGridSize)" offset="1"><method assemblyName="GameOfLife.Core.Tests" name="Constructor" token="600000c"><declaringType assemblyName="GameOfLife.Core.Tests" name="GridTest" token="2000006" namespace="GameOfLife.Core"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Core.Tests" name="GridTest" token="2000006" namespace="GameOfLife.Core"/>
</type>
</parameter>
<parameter name="gridSize" position="1"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IGridSize" token="2000006" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="GameOfLife.Core" name="Grid" token="2000006" namespace="GameOfLife.Core"/>
</resultType>
</method>
</frame>
</stackTrace>
</exception>
</exceptionChain>
<pathCondition><![CDATA[return gridSize == (IGridSize)null;
]]></pathCondition>
</generatedTest>
<log level="message" time="2013-03-05 20:55:43Z" category="coverage" message="coverage increased from 0 to 4 blocks (+4) after flipping GameOfLife.Core.Grid..ctor at 0x0011"/>
<coverage domain="usercodeundertest" unit="block" covered="4" total="7" coveredRatio="0.5714285714285714"/>
<sourceCoverage xml="cov\e335\cov.xml" html="cov\e335\cov.html"/>
<result name="Constructor(IGridSize)" state="failed" duration="0.32"/>
<duration start="2013-03-05 20:55:43Z" end="2013-03-05 20:55:43Z" seconds="0.32"/>
</exploration>
<exploration shortName="Copy(Grid, IGrid)" fullName="GameOfLife.Core.GridTest.Copy(Grid, IGrid)" isDynamicCode="true"><method><definition assemblyName="GameOfLife.Core.Tests" name="Copy" token="600000d"><declaringType assemblyName="GameOfLife.Core.Tests" name="GridTest" token="2000006" namespace="GameOfLife.Core"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Core.Tests" name="GridTest" token="2000006" namespace="GameOfLife.Core"/>
</type>
</parameter>
<parameter name="target" position="1"><type spec="Class"><definition assemblyName="GameOfLife.Core" name="Grid" token="2000006" namespace="GameOfLife.Core"/>
</type>
</parameter>
<parameter name="currentGrid" position="2"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IGrid" token="2000008" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IGrid" token="2000008" namespace="GameOfLife.Contracts"/>
</resultType>
</definition>
</method>
<target><methodDefinition assemblyName="GameOfLife.Core" name="Copy" token="6000011"><declaringType assemblyName="GameOfLife.Core" name="Grid" token="2000006" namespace="GameOfLife.Core"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Core" name="Grid" token="2000006" namespace="GameOfLife.Core"/>
</type>
</parameter>
<parameter name="currentGrid" position="1"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IGrid" token="2000008" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IGrid" token="2000008" namespace="GameOfLife.Contracts"/>
</resultType>
</methodDefinition>
</target>
<memberUnderTest assemblyName="GameOfLife.Core" name="Copy" token="6000011"><declaringType assemblyName="GameOfLife.Core" name="Grid" token="2000006" namespace="GameOfLife.Core"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Core" name="Grid" token="2000006" namespace="GameOfLife.Core"/>
</type>
</parameter>
<parameter name="currentGrid" position="1"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IGrid" token="2000008" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IGrid" token="2000008" namespace="GameOfLife.Contracts"/>
</resultType>
</memberUnderTest>
<log level="error" time="2013-03-05 20:55:44Z" wikiTopic="Missing Wiki Topic" category="execution" message="runtime context Microsoft.Pex.Engine.Libraries.MicrosoftVisualBasicLibrary+ProjectErrorRuntimeContextAttribute+Context failed to open"><exceptionChain><exception typeDisplayName="InvalidProgramException" source="Microsoft.VisualBasic"><message><![CDATA[Common Language Runtime detected an invalid program.]]></message>
<type spec="Class"><definition assemblyName="mscorlib" name="InvalidProgramException" token="20000f9" namespace="System"/>
</type>
<stackTrace><frame value="  at ProjectData..ctor()" method="ProjectData..ctor()" offset="-1"><method assemblyName="Microsoft.VisualBasic" name=".ctor" token="600053a"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at ProjectData.GetProjectData()" method="ProjectData.GetProjectData()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="GetProjectData" static="true" token="600053c"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</resultType>
</method>
</frame>
<frame value="  at Information.Err()" method="Information.Err()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="Err" static="true" token="60005ee"><declaringType assemblyName="Microsoft.VisualBasic" name="Information" token="2000087" namespace="Microsoft.VisualBasic"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ErrObject" token="200002f" namespace="Microsoft.VisualBasic"/>
</resultType>
</method>
</frame>
<frame value="  at ProjectData.ClearProjectError()" method="ProjectData.ClearProjectError()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="ClearProjectError" static="true" token="6000538"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</method>
</frame>
</stackTrace>
</exception>
</exceptionChain>
</log>
<explorable title="guessed how to create GameOfLife.Core.Grid" kind="guessedclass" isExplorableTypeExported="true"><explorableType spec="Class"><definition assemblyName="GameOfLife.Core" name="Grid" token="2000006" namespace="GameOfLife.Core"/>
</explorableType>
<testAssemblyName name="GameOfLife.Core.Tests"/>
<update kind="CollectionCodeUpdate" name="Accept/Edit Factory"><codeUpdate kind="AddTypeCodeUpdate" name="Add type" fileNameHint="Factories\GridFactory" abstract="true" sealed="true" visibility="Public"><doc><![CDATA[<summary>A factory for GameOfLife.Core.Grid instances</summary>
]]></doc>
<reference name="mscorlib"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="GameOfLife.Core" location="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Library\bin\Debug\GameOfLife.Core.dll"/>
<reference name="GameOfLife.Contracts" location="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Library\bin\Debug\GameOfLife.Contracts.dll"/>
<typeDefinition assemblyName="GameOfLife.Core.Tests" name="GridFactory" token="ffffffff" namespace="GameOfLife.Core"/>
<baseType spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</baseType>
<target><assembly name="GameOfLife.Core.Tests"/>
</target>
</codeUpdate>
<codeUpdate kind="AddMethodCodeUpdate" name="Add method" visibility="Public"><attribute><ctor><definition assemblyName="Microsoft.Pex.Framework" name=".ctor" token="6000e50"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexFactoryMethodAttribute" token="200027d" namespace="Microsoft.Pex.Framework"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.Pex.Framework" name="PexFactoryMethodAttribute" token="200027d" namespace="Microsoft.Pex.Framework"/>
</type>
</parameter>
<parameter name="factoredType" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000128" namespace="System"/>
</type>
</parameter>
</definition>
</ctor>
<ctorArgument><value kind="TypeOfExpression"><type spec="Class"><definition assemblyName="GameOfLife.Core" name="Grid" token="2000006" namespace="GameOfLife.Core"/>
</type>
</value>
</ctorArgument>
</attribute>
<doc><![CDATA[<summary>A factory for GameOfLife.Core.Grid instances</summary>
]]></doc>
<reference name="GameOfLife.Core" location="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Library\bin\Debug\GameOfLife.Core.dll"/>
<reference name="mscorlib"/>
<reference name="GameOfLife.Contracts" location="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Library\bin\Debug\GameOfLife.Contracts.dll"/>
<methodDefinition assemblyName="GameOfLife.Core.Tests" name="Create" static="true"><declaringType assemblyName="GameOfLife.Core.Tests" name="GridFactory" token="ffffffff" namespace="GameOfLife.Core"/>
<parameter name="gridSize_iGridSize" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IGridSize" token="2000006" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="GameOfLife.Core" name="Grid" token="2000006" namespace="GameOfLife.Core"/>
</resultType>
</methodDefinition>
<target><typeDefinition assemblyName="GameOfLife.Core.Tests" name="GridFactory" token="ffffffff" namespace="GameOfLife.Core"/>
</target>
</codeUpdate>
<codeUpdate kind="SelectCodeUpdate" name="Select" selectKind="Body"><target><methodDefinition assemblyName="GameOfLife.Core.Tests" name="Create" static="true"><declaringType assemblyName="GameOfLife.Core.Tests" name="GridFactory" token="ffffffff" namespace="GameOfLife.Core"/>
<parameter name="gridSize_iGridSize" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IGridSize" token="2000006" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="GameOfLife.Core" name="Grid" token="2000006" namespace="GameOfLife.Core"/>
</resultType>
</methodDefinition>
</target>
</codeUpdate>
</update>
</explorable>
<log level="error" time="2013-03-05 20:55:44Z" wikiTopic="Missing Wiki Topic" category="execution" message="runtime context Microsoft.Pex.Engine.Libraries.MicrosoftVisualBasicLibrary+ProjectErrorRuntimeContextAttribute+Context failed to rollback"><exceptionChain><exception typeDisplayName="InvalidProgramException" source="Microsoft.VisualBasic"><message><![CDATA[Common Language Runtime detected an invalid program.]]></message>
<type spec="Class"><definition assemblyName="mscorlib" name="InvalidProgramException" token="20000f9" namespace="System"/>
</type>
<stackTrace><frame value="  at ProjectData..ctor()" method="ProjectData..ctor()" offset="-1"><method assemblyName="Microsoft.VisualBasic" name=".ctor" token="600053a"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at ProjectData.GetProjectData()" method="ProjectData.GetProjectData()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="GetProjectData" static="true" token="600053c"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</resultType>
</method>
</frame>
<frame value="  at Information.Err()" method="Information.Err()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="Err" static="true" token="60005ee"><declaringType assemblyName="Microsoft.VisualBasic" name="Information" token="2000087" namespace="Microsoft.VisualBasic"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ErrObject" token="200002f" namespace="Microsoft.VisualBasic"/>
</resultType>
</method>
</frame>
<frame value="  at ProjectData.ClearProjectError()" method="ProjectData.ClearProjectError()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="ClearProjectError" static="true" token="6000538"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</method>
</frame>
</stackTrace>
</exception>
</exceptionChain>
</log>
<test name="Copy" state="success" duration="0.09"/>
<log level="error" time="2013-03-05 20:55:44Z" wikiTopic="Missing Wiki Topic" category="execution" message="runtime context Microsoft.Pex.Engine.Libraries.MicrosoftVisualBasicLibrary+ProjectErrorRuntimeContextAttribute+Context failed to open"><exceptionChain><exception typeDisplayName="InvalidProgramException" source="Microsoft.VisualBasic"><message><![CDATA[Common Language Runtime detected an invalid program.]]></message>
<type spec="Class"><definition assemblyName="mscorlib" name="InvalidProgramException" token="20000f9" namespace="System"/>
</type>
<stackTrace><frame value="  at ProjectData..ctor()" method="ProjectData..ctor()" offset="-1"><method assemblyName="Microsoft.VisualBasic" name=".ctor" token="600053a"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at ProjectData.GetProjectData()" method="ProjectData.GetProjectData()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="GetProjectData" static="true" token="600053c"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</resultType>
</method>
</frame>
<frame value="  at Information.Err()" method="Information.Err()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="Err" static="true" token="60005ee"><declaringType assemblyName="Microsoft.VisualBasic" name="Information" token="2000087" namespace="Microsoft.VisualBasic"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ErrObject" token="200002f" namespace="Microsoft.VisualBasic"/>
</resultType>
</method>
</frame>
<frame value="  at ProjectData.ClearProjectError()" method="ProjectData.ClearProjectError()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="ClearProjectError" static="true" token="6000538"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</method>
</frame>
</stackTrace>
</exception>
</exceptionChain>
</log>
<log level="error" time="2013-03-05 20:55:44Z" wikiTopic="Missing Wiki Topic" category="execution" message="runtime context Microsoft.Pex.Engine.Libraries.MicrosoftVisualBasicLibrary+ProjectErrorRuntimeContextAttribute+Context failed to rollback"><exceptionChain><exception typeDisplayName="InvalidProgramException" source="Microsoft.VisualBasic"><message><![CDATA[Common Language Runtime detected an invalid program.]]></message>
<type spec="Class"><definition assemblyName="mscorlib" name="InvalidProgramException" token="20000f9" namespace="System"/>
</type>
<stackTrace><frame value="  at ProjectData..ctor()" method="ProjectData..ctor()" offset="-1"><method assemblyName="Microsoft.VisualBasic" name=".ctor" token="600053a"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at ProjectData.GetProjectData()" method="ProjectData.GetProjectData()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="GetProjectData" static="true" token="600053c"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</resultType>
</method>
</frame>
<frame value="  at Information.Err()" method="Information.Err()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="Err" static="true" token="60005ee"><declaringType assemblyName="Microsoft.VisualBasic" name="Information" token="2000087" namespace="Microsoft.VisualBasic"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ErrObject" token="200002f" namespace="Microsoft.VisualBasic"/>
</resultType>
</method>
</frame>
<frame value="  at ProjectData.ClearProjectError()" method="ProjectData.ClearProjectError()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="ClearProjectError" static="true" token="6000538"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</method>
</frame>
</stackTrace>
</exception>
</exceptionChain>
</log>
<test name="Copy" state="success" duration="0.01"/>
<log level="warning" time="2013-03-05 20:55:44Z" wikiTopic="Missing Wiki Topic" category="execution" message="could not generate any test in 2 runs"/>
<explorable title="could not create an instance of GameOfLife.Core.Grid" kind="unexplorableclass" isExplorableTypeExported="true"><explorableType spec="Class"><definition assemblyName="GameOfLife.Core" name="Grid" token="2000006" namespace="GameOfLife.Core"/>
</explorableType>
<testAssemblyName name="GameOfLife.Core.Tests"/>
</explorable>
<result name="Copy(Grid, IGrid)" state="failed" duration="0.65"/>
<duration start="2013-03-05 20:55:43Z" end="2013-03-05 20:55:44Z" seconds="0.65"/>
</exploration>
<exploration shortName="GetAllCurrentCellInfo(Grid)" fullName="GameOfLife.Core.GridTest.GetAllCurrentCellInfo(Grid)" isDynamicCode="true"><method><definition assemblyName="GameOfLife.Core.Tests" name="GetAllCurrentCellInfo" token="600000e"><declaringType assemblyName="GameOfLife.Core.Tests" name="GridTest" token="2000006" namespace="GameOfLife.Core"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Core.Tests" name="GridTest" token="2000006" namespace="GameOfLife.Core"/>
</type>
</parameter>
<parameter name="target" position="1"><type spec="Class"><definition assemblyName="GameOfLife.Core" name="Grid" token="2000006" namespace="GameOfLife.Core"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="IEnumerable`1" token="2000036" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="Class"><definition assemblyName="GameOfLife.Contracts" name="ICell" token="2000002" namespace="GameOfLife.Contracts"/>
</genericTypeArgument>
</resultType>
</definition>
</method>
<target><methodDefinition assemblyName="GameOfLife.Core" name="GetAllCurrentCellInfo" token="600000e"><declaringType assemblyName="GameOfLife.Core" name="Grid" token="2000006" namespace="GameOfLife.Core"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Core" name="Grid" token="2000006" namespace="GameOfLife.Core"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="IEnumerable`1" token="2000036" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="Class"><definition assemblyName="GameOfLife.Contracts" name="ICell" token="2000002" namespace="GameOfLife.Contracts"/>
</genericTypeArgument>
</resultType>
</methodDefinition>
</target>
<memberUnderTest assemblyName="GameOfLife.Core" name="GetAllCurrentCellInfo" token="600000e"><declaringType assemblyName="GameOfLife.Core" name="Grid" token="2000006" namespace="GameOfLife.Core"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Core" name="Grid" token="2000006" namespace="GameOfLife.Core"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="IEnumerable`1" token="2000036" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="Class"><definition assemblyName="GameOfLife.Contracts" name="ICell" token="2000002" namespace="GameOfLife.Contracts"/>
</genericTypeArgument>
</resultType>
</memberUnderTest>
<log level="error" time="2013-03-05 20:55:44Z" wikiTopic="Missing Wiki Topic" category="execution" message="runtime context Microsoft.Pex.Engine.Libraries.MicrosoftVisualBasicLibrary+ProjectErrorRuntimeContextAttribute+Context failed to open"><exceptionChain><exception typeDisplayName="InvalidProgramException" source="Microsoft.VisualBasic"><message><![CDATA[Common Language Runtime detected an invalid program.]]></message>
<type spec="Class"><definition assemblyName="mscorlib" name="InvalidProgramException" token="20000f9" namespace="System"/>
</type>
<stackTrace><frame value="  at ProjectData..ctor()" method="ProjectData..ctor()" offset="-1"><method assemblyName="Microsoft.VisualBasic" name=".ctor" token="600053a"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at ProjectData.GetProjectData()" method="ProjectData.GetProjectData()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="GetProjectData" static="true" token="600053c"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</resultType>
</method>
</frame>
<frame value="  at Information.Err()" method="Information.Err()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="Err" static="true" token="60005ee"><declaringType assemblyName="Microsoft.VisualBasic" name="Information" token="2000087" namespace="Microsoft.VisualBasic"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ErrObject" token="200002f" namespace="Microsoft.VisualBasic"/>
</resultType>
</method>
</frame>
<frame value="  at ProjectData.ClearProjectError()" method="ProjectData.ClearProjectError()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="ClearProjectError" static="true" token="6000538"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</method>
</frame>
</stackTrace>
</exception>
</exceptionChain>
</log>
<explorable title="guessed how to create GameOfLife.Core.Grid" kind="guessedclass" isExplorableTypeExported="true"><explorableType spec="Class"><definition assemblyName="GameOfLife.Core" name="Grid" token="2000006" namespace="GameOfLife.Core"/>
</explorableType>
<testAssemblyName name="GameOfLife.Core.Tests"/>
<update kind="CollectionCodeUpdate" name="Accept/Edit Factory"><codeUpdate kind="AddTypeCodeUpdate" name="Add type" fileNameHint="Factories\GridFactory" abstract="true" sealed="true" visibility="Public"><doc><![CDATA[<summary>A factory for GameOfLife.Core.Grid instances</summary>
]]></doc>
<reference name="mscorlib"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="GameOfLife.Core" location="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Library\bin\Debug\GameOfLife.Core.dll"/>
<reference name="GameOfLife.Contracts" location="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Library\bin\Debug\GameOfLife.Contracts.dll"/>
<typeDefinition assemblyName="GameOfLife.Core.Tests" name="GridFactory" token="ffffffff" namespace="GameOfLife.Core"/>
<baseType spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</baseType>
<target><assembly name="GameOfLife.Core.Tests"/>
</target>
</codeUpdate>
<codeUpdate kind="AddMethodCodeUpdate" name="Add method" visibility="Public"><attribute><ctor><definition assemblyName="Microsoft.Pex.Framework" name=".ctor" token="6000e50"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexFactoryMethodAttribute" token="200027d" namespace="Microsoft.Pex.Framework"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.Pex.Framework" name="PexFactoryMethodAttribute" token="200027d" namespace="Microsoft.Pex.Framework"/>
</type>
</parameter>
<parameter name="factoredType" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000128" namespace="System"/>
</type>
</parameter>
</definition>
</ctor>
<ctorArgument><value kind="TypeOfExpression"><type spec="Class"><definition assemblyName="GameOfLife.Core" name="Grid" token="2000006" namespace="GameOfLife.Core"/>
</type>
</value>
</ctorArgument>
</attribute>
<doc><![CDATA[<summary>A factory for GameOfLife.Core.Grid instances</summary>
]]></doc>
<reference name="GameOfLife.Core" location="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Library\bin\Debug\GameOfLife.Core.dll"/>
<reference name="mscorlib"/>
<reference name="GameOfLife.Contracts" location="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Library\bin\Debug\GameOfLife.Contracts.dll"/>
<methodDefinition assemblyName="GameOfLife.Core.Tests" name="Create" static="true"><declaringType assemblyName="GameOfLife.Core.Tests" name="GridFactory" token="ffffffff" namespace="GameOfLife.Core"/>
<parameter name="gridSize_iGridSize" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IGridSize" token="2000006" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="GameOfLife.Core" name="Grid" token="2000006" namespace="GameOfLife.Core"/>
</resultType>
</methodDefinition>
<target><typeDefinition assemblyName="GameOfLife.Core.Tests" name="GridFactory" token="ffffffff" namespace="GameOfLife.Core"/>
</target>
</codeUpdate>
<codeUpdate kind="SelectCodeUpdate" name="Select" selectKind="Body"><target><methodDefinition assemblyName="GameOfLife.Core.Tests" name="Create" static="true"><declaringType assemblyName="GameOfLife.Core.Tests" name="GridFactory" token="ffffffff" namespace="GameOfLife.Core"/>
<parameter name="gridSize_iGridSize" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IGridSize" token="2000006" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="GameOfLife.Core" name="Grid" token="2000006" namespace="GameOfLife.Core"/>
</resultType>
</methodDefinition>
</target>
</codeUpdate>
</update>
</explorable>
<log level="error" time="2013-03-05 20:55:44Z" wikiTopic="Missing Wiki Topic" category="execution" message="runtime context Microsoft.Pex.Engine.Libraries.MicrosoftVisualBasicLibrary+ProjectErrorRuntimeContextAttribute+Context failed to rollback"><exceptionChain><exception typeDisplayName="InvalidProgramException" source="Microsoft.VisualBasic"><message><![CDATA[Common Language Runtime detected an invalid program.]]></message>
<type spec="Class"><definition assemblyName="mscorlib" name="InvalidProgramException" token="20000f9" namespace="System"/>
</type>
<stackTrace><frame value="  at ProjectData..ctor()" method="ProjectData..ctor()" offset="-1"><method assemblyName="Microsoft.VisualBasic" name=".ctor" token="600053a"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at ProjectData.GetProjectData()" method="ProjectData.GetProjectData()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="GetProjectData" static="true" token="600053c"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</resultType>
</method>
</frame>
<frame value="  at Information.Err()" method="Information.Err()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="Err" static="true" token="60005ee"><declaringType assemblyName="Microsoft.VisualBasic" name="Information" token="2000087" namespace="Microsoft.VisualBasic"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ErrObject" token="200002f" namespace="Microsoft.VisualBasic"/>
</resultType>
</method>
</frame>
<frame value="  at ProjectData.ClearProjectError()" method="ProjectData.ClearProjectError()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="ClearProjectError" static="true" token="6000538"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</method>
</frame>
</stackTrace>
</exception>
</exceptionChain>
</log>
<test name="GetAllCurrentCellInfo" state="success" duration="0.01"/>
<log level="error" time="2013-03-05 20:55:44Z" wikiTopic="Missing Wiki Topic" category="execution" message="runtime context Microsoft.Pex.Engine.Libraries.MicrosoftVisualBasicLibrary+ProjectErrorRuntimeContextAttribute+Context failed to open"><exceptionChain><exception typeDisplayName="InvalidProgramException" source="Microsoft.VisualBasic"><message><![CDATA[Common Language Runtime detected an invalid program.]]></message>
<type spec="Class"><definition assemblyName="mscorlib" name="InvalidProgramException" token="20000f9" namespace="System"/>
</type>
<stackTrace><frame value="  at ProjectData..ctor()" method="ProjectData..ctor()" offset="-1"><method assemblyName="Microsoft.VisualBasic" name=".ctor" token="600053a"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at ProjectData.GetProjectData()" method="ProjectData.GetProjectData()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="GetProjectData" static="true" token="600053c"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</resultType>
</method>
</frame>
<frame value="  at Information.Err()" method="Information.Err()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="Err" static="true" token="60005ee"><declaringType assemblyName="Microsoft.VisualBasic" name="Information" token="2000087" namespace="Microsoft.VisualBasic"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ErrObject" token="200002f" namespace="Microsoft.VisualBasic"/>
</resultType>
</method>
</frame>
<frame value="  at ProjectData.ClearProjectError()" method="ProjectData.ClearProjectError()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="ClearProjectError" static="true" token="6000538"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</method>
</frame>
</stackTrace>
</exception>
</exceptionChain>
</log>
<log level="error" time="2013-03-05 20:55:44Z" wikiTopic="Missing Wiki Topic" category="execution" message="runtime context Microsoft.Pex.Engine.Libraries.MicrosoftVisualBasicLibrary+ProjectErrorRuntimeContextAttribute+Context failed to rollback"><exceptionChain><exception typeDisplayName="InvalidProgramException" source="Microsoft.VisualBasic"><message><![CDATA[Common Language Runtime detected an invalid program.]]></message>
<type spec="Class"><definition assemblyName="mscorlib" name="InvalidProgramException" token="20000f9" namespace="System"/>
</type>
<stackTrace><frame value="  at ProjectData..ctor()" method="ProjectData..ctor()" offset="-1"><method assemblyName="Microsoft.VisualBasic" name=".ctor" token="600053a"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at ProjectData.GetProjectData()" method="ProjectData.GetProjectData()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="GetProjectData" static="true" token="600053c"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</resultType>
</method>
</frame>
<frame value="  at Information.Err()" method="Information.Err()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="Err" static="true" token="60005ee"><declaringType assemblyName="Microsoft.VisualBasic" name="Information" token="2000087" namespace="Microsoft.VisualBasic"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ErrObject" token="200002f" namespace="Microsoft.VisualBasic"/>
</resultType>
</method>
</frame>
<frame value="  at ProjectData.ClearProjectError()" method="ProjectData.ClearProjectError()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="ClearProjectError" static="true" token="6000538"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</method>
</frame>
</stackTrace>
</exception>
</exceptionChain>
</log>
<test name="GetAllCurrentCellInfo" state="success" duration="0.00"/>
<explorable title="could not create an instance of GameOfLife.Core.Grid" kind="unexplorableclass" isExplorableTypeExported="true"><explorableType spec="Class"><definition assemblyName="GameOfLife.Core" name="Grid" token="2000006" namespace="GameOfLife.Core"/>
</explorableType>
<testAssemblyName name="GameOfLife.Core.Tests"/>
</explorable>
<result name="GetAllCurrentCellInfo(Grid)" state="failed" duration="0.16"/>
<duration start="2013-03-05 20:55:44Z" end="2013-03-05 20:55:44Z" seconds="0.16"/>
</exploration>
<exploration shortName="GetCurrentCellInfo(Grid, IPosition)" fullName="GameOfLife.Core.GridTest.GetCurrentCellInfo(Grid, IPosition)" isDynamicCode="true"><method><definition assemblyName="GameOfLife.Core.Tests" name="GetCurrentCellInfo" token="600000f"><declaringType assemblyName="GameOfLife.Core.Tests" name="GridTest" token="2000006" namespace="GameOfLife.Core"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Core.Tests" name="GridTest" token="2000006" namespace="GameOfLife.Core"/>
</type>
</parameter>
<parameter name="target" position="1"><type spec="Class"><definition assemblyName="GameOfLife.Core" name="Grid" token="2000006" namespace="GameOfLife.Core"/>
</type>
</parameter>
<parameter name="position" position="2"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IPosition" token="2000005" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="GameOfLife.Contracts" name="ICell" token="2000002" namespace="GameOfLife.Contracts"/>
</resultType>
</definition>
</method>
<target><methodDefinition assemblyName="GameOfLife.Core" name="GetCurrentCellInfo" token="600000d"><declaringType assemblyName="GameOfLife.Core" name="Grid" token="2000006" namespace="GameOfLife.Core"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Core" name="Grid" token="2000006" namespace="GameOfLife.Core"/>
</type>
</parameter>
<parameter name="position" position="1"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IPosition" token="2000005" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="GameOfLife.Contracts" name="ICell" token="2000002" namespace="GameOfLife.Contracts"/>
</resultType>
</methodDefinition>
</target>
<memberUnderTest assemblyName="GameOfLife.Core" name="GetCurrentCellInfo" token="600000d"><declaringType assemblyName="GameOfLife.Core" name="Grid" token="2000006" namespace="GameOfLife.Core"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Core" name="Grid" token="2000006" namespace="GameOfLife.Core"/>
</type>
</parameter>
<parameter name="position" position="1"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IPosition" token="2000005" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="GameOfLife.Contracts" name="ICell" token="2000002" namespace="GameOfLife.Contracts"/>
</resultType>
</memberUnderTest>
<log level="warning" time="2013-03-05 20:55:44Z" wikiTopic="Pex Needs Help To Find Types" category="domains" message="do not know any type assignable to GameOfLife.Contracts.IPosition; Pex needs help to find types"/>
<log level="error" time="2013-03-05 20:55:44Z" wikiTopic="Missing Wiki Topic" category="execution" message="runtime context Microsoft.Pex.Engine.Libraries.MicrosoftVisualBasicLibrary+ProjectErrorRuntimeContextAttribute+Context failed to open"><exceptionChain><exception typeDisplayName="InvalidProgramException" source="Microsoft.VisualBasic"><message><![CDATA[Common Language Runtime detected an invalid program.]]></message>
<type spec="Class"><definition assemblyName="mscorlib" name="InvalidProgramException" token="20000f9" namespace="System"/>
</type>
<stackTrace><frame value="  at ProjectData..ctor()" method="ProjectData..ctor()" offset="-1"><method assemblyName="Microsoft.VisualBasic" name=".ctor" token="600053a"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at ProjectData.GetProjectData()" method="ProjectData.GetProjectData()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="GetProjectData" static="true" token="600053c"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</resultType>
</method>
</frame>
<frame value="  at Information.Err()" method="Information.Err()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="Err" static="true" token="60005ee"><declaringType assemblyName="Microsoft.VisualBasic" name="Information" token="2000087" namespace="Microsoft.VisualBasic"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ErrObject" token="200002f" namespace="Microsoft.VisualBasic"/>
</resultType>
</method>
</frame>
<frame value="  at ProjectData.ClearProjectError()" method="ProjectData.ClearProjectError()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="ClearProjectError" static="true" token="6000538"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</method>
</frame>
</stackTrace>
</exception>
</exceptionChain>
</log>
<explorable title="guessed how to create GameOfLife.Core.Grid" kind="guessedclass" isExplorableTypeExported="true"><explorableType spec="Class"><definition assemblyName="GameOfLife.Core" name="Grid" token="2000006" namespace="GameOfLife.Core"/>
</explorableType>
<testAssemblyName name="GameOfLife.Core.Tests"/>
<update kind="CollectionCodeUpdate" name="Accept/Edit Factory"><codeUpdate kind="AddTypeCodeUpdate" name="Add type" fileNameHint="Factories\GridFactory" abstract="true" sealed="true" visibility="Public"><doc><![CDATA[<summary>A factory for GameOfLife.Core.Grid instances</summary>
]]></doc>
<reference name="mscorlib"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="GameOfLife.Core" location="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Library\bin\Debug\GameOfLife.Core.dll"/>
<reference name="GameOfLife.Contracts" location="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Library\bin\Debug\GameOfLife.Contracts.dll"/>
<typeDefinition assemblyName="GameOfLife.Core.Tests" name="GridFactory" token="ffffffff" namespace="GameOfLife.Core"/>
<baseType spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</baseType>
<target><assembly name="GameOfLife.Core.Tests"/>
</target>
</codeUpdate>
<codeUpdate kind="AddMethodCodeUpdate" name="Add method" visibility="Public"><attribute><ctor><definition assemblyName="Microsoft.Pex.Framework" name=".ctor" token="6000e50"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexFactoryMethodAttribute" token="200027d" namespace="Microsoft.Pex.Framework"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.Pex.Framework" name="PexFactoryMethodAttribute" token="200027d" namespace="Microsoft.Pex.Framework"/>
</type>
</parameter>
<parameter name="factoredType" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000128" namespace="System"/>
</type>
</parameter>
</definition>
</ctor>
<ctorArgument><value kind="TypeOfExpression"><type spec="Class"><definition assemblyName="GameOfLife.Core" name="Grid" token="2000006" namespace="GameOfLife.Core"/>
</type>
</value>
</ctorArgument>
</attribute>
<doc><![CDATA[<summary>A factory for GameOfLife.Core.Grid instances</summary>
]]></doc>
<reference name="GameOfLife.Core" location="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Library\bin\Debug\GameOfLife.Core.dll"/>
<reference name="mscorlib"/>
<reference name="GameOfLife.Contracts" location="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Library\bin\Debug\GameOfLife.Contracts.dll"/>
<methodDefinition assemblyName="GameOfLife.Core.Tests" name="Create" static="true"><declaringType assemblyName="GameOfLife.Core.Tests" name="GridFactory" token="ffffffff" namespace="GameOfLife.Core"/>
<parameter name="gridSize_iGridSize" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IGridSize" token="2000006" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="GameOfLife.Core" name="Grid" token="2000006" namespace="GameOfLife.Core"/>
</resultType>
</methodDefinition>
<target><typeDefinition assemblyName="GameOfLife.Core.Tests" name="GridFactory" token="ffffffff" namespace="GameOfLife.Core"/>
</target>
</codeUpdate>
<codeUpdate kind="SelectCodeUpdate" name="Select" selectKind="Body"><target><methodDefinition assemblyName="GameOfLife.Core.Tests" name="Create" static="true"><declaringType assemblyName="GameOfLife.Core.Tests" name="GridFactory" token="ffffffff" namespace="GameOfLife.Core"/>
<parameter name="gridSize_iGridSize" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IGridSize" token="2000006" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="GameOfLife.Core" name="Grid" token="2000006" namespace="GameOfLife.Core"/>
</resultType>
</methodDefinition>
</target>
</codeUpdate>
</update>
</explorable>
<log level="error" time="2013-03-05 20:55:44Z" wikiTopic="Missing Wiki Topic" category="execution" message="runtime context Microsoft.Pex.Engine.Libraries.MicrosoftVisualBasicLibrary+ProjectErrorRuntimeContextAttribute+Context failed to rollback"><exceptionChain><exception typeDisplayName="InvalidProgramException" source="Microsoft.VisualBasic"><message><![CDATA[Common Language Runtime detected an invalid program.]]></message>
<type spec="Class"><definition assemblyName="mscorlib" name="InvalidProgramException" token="20000f9" namespace="System"/>
</type>
<stackTrace><frame value="  at ProjectData..ctor()" method="ProjectData..ctor()" offset="-1"><method assemblyName="Microsoft.VisualBasic" name=".ctor" token="600053a"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at ProjectData.GetProjectData()" method="ProjectData.GetProjectData()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="GetProjectData" static="true" token="600053c"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</resultType>
</method>
</frame>
<frame value="  at Information.Err()" method="Information.Err()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="Err" static="true" token="60005ee"><declaringType assemblyName="Microsoft.VisualBasic" name="Information" token="2000087" namespace="Microsoft.VisualBasic"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ErrObject" token="200002f" namespace="Microsoft.VisualBasic"/>
</resultType>
</method>
</frame>
<frame value="  at ProjectData.ClearProjectError()" method="ProjectData.ClearProjectError()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="ClearProjectError" static="true" token="6000538"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</method>
</frame>
</stackTrace>
</exception>
</exceptionChain>
</log>
<test name="GetCurrentCellInfo" state="success" duration="0.01"/>
<log level="error" time="2013-03-05 20:55:44Z" wikiTopic="Missing Wiki Topic" category="execution" message="runtime context Microsoft.Pex.Engine.Libraries.MicrosoftVisualBasicLibrary+ProjectErrorRuntimeContextAttribute+Context failed to open"><exceptionChain><exception typeDisplayName="InvalidProgramException" source="Microsoft.VisualBasic"><message><![CDATA[Common Language Runtime detected an invalid program.]]></message>
<type spec="Class"><definition assemblyName="mscorlib" name="InvalidProgramException" token="20000f9" namespace="System"/>
</type>
<stackTrace><frame value="  at ProjectData..ctor()" method="ProjectData..ctor()" offset="-1"><method assemblyName="Microsoft.VisualBasic" name=".ctor" token="600053a"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at ProjectData.GetProjectData()" method="ProjectData.GetProjectData()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="GetProjectData" static="true" token="600053c"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</resultType>
</method>
</frame>
<frame value="  at Information.Err()" method="Information.Err()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="Err" static="true" token="60005ee"><declaringType assemblyName="Microsoft.VisualBasic" name="Information" token="2000087" namespace="Microsoft.VisualBasic"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ErrObject" token="200002f" namespace="Microsoft.VisualBasic"/>
</resultType>
</method>
</frame>
<frame value="  at ProjectData.ClearProjectError()" method="ProjectData.ClearProjectError()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="ClearProjectError" static="true" token="6000538"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</method>
</frame>
</stackTrace>
</exception>
</exceptionChain>
</log>
<log level="error" time="2013-03-05 20:55:44Z" wikiTopic="Missing Wiki Topic" category="execution" message="runtime context Microsoft.Pex.Engine.Libraries.MicrosoftVisualBasicLibrary+ProjectErrorRuntimeContextAttribute+Context failed to rollback"><exceptionChain><exception typeDisplayName="InvalidProgramException" source="Microsoft.VisualBasic"><message><![CDATA[Common Language Runtime detected an invalid program.]]></message>
<type spec="Class"><definition assemblyName="mscorlib" name="InvalidProgramException" token="20000f9" namespace="System"/>
</type>
<stackTrace><frame value="  at ProjectData..ctor()" method="ProjectData..ctor()" offset="-1"><method assemblyName="Microsoft.VisualBasic" name=".ctor" token="600053a"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at ProjectData.GetProjectData()" method="ProjectData.GetProjectData()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="GetProjectData" static="true" token="600053c"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</resultType>
</method>
</frame>
<frame value="  at Information.Err()" method="Information.Err()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="Err" static="true" token="60005ee"><declaringType assemblyName="Microsoft.VisualBasic" name="Information" token="2000087" namespace="Microsoft.VisualBasic"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ErrObject" token="200002f" namespace="Microsoft.VisualBasic"/>
</resultType>
</method>
</frame>
<frame value="  at ProjectData.ClearProjectError()" method="ProjectData.ClearProjectError()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="ClearProjectError" static="true" token="6000538"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</method>
</frame>
</stackTrace>
</exception>
</exceptionChain>
</log>
<test name="GetCurrentCellInfo" state="success" duration="0.00"/>
<explorable title="could not create an instance of GameOfLife.Core.Grid" kind="unexplorableclass" isExplorableTypeExported="true"><explorableType spec="Class"><definition assemblyName="GameOfLife.Core" name="Grid" token="2000006" namespace="GameOfLife.Core"/>
</explorableType>
<testAssemblyName name="GameOfLife.Core.Tests"/>
</explorable>
<result name="GetCurrentCellInfo(Grid, IPosition)" state="failed" duration="0.31"/>
<duration start="2013-03-05 20:55:44Z" end="2013-03-05 20:55:44Z" seconds="0.32"/>
</exploration>
<exploration shortName="Initialize(Grid, IEnumerable`1&lt;ICell&gt;)" fullName="GameOfLife.Core.GridTest.Initialize(Grid, IEnumerable`1&lt;ICell&gt;)" isDynamicCode="true"><method><definition assemblyName="GameOfLife.Core.Tests" name="Initialize" token="6000010"><declaringType assemblyName="GameOfLife.Core.Tests" name="GridTest" token="2000006" namespace="GameOfLife.Core"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Core.Tests" name="GridTest" token="2000006" namespace="GameOfLife.Core"/>
</type>
</parameter>
<parameter name="target" position="1"><type spec="Class"><definition assemblyName="GameOfLife.Core" name="Grid" token="2000006" namespace="GameOfLife.Core"/>
</type>
</parameter>
<parameter name="cells" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="IEnumerable`1" token="2000036" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="Class"><definition assemblyName="GameOfLife.Contracts" name="ICell" token="2000002" namespace="GameOfLife.Contracts"/>
</genericTypeArgument>
</type>
</parameter>
</definition>
</method>
<target><methodDefinition assemblyName="GameOfLife.Core" name="Initialize" token="6000014"><declaringType assemblyName="GameOfLife.Core" name="Grid" token="2000006" namespace="GameOfLife.Core"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Core" name="Grid" token="2000006" namespace="GameOfLife.Core"/>
</type>
</parameter>
<parameter name="cells" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="IEnumerable`1" token="2000036" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="Class"><definition assemblyName="GameOfLife.Contracts" name="ICell" token="2000002" namespace="GameOfLife.Contracts"/>
</genericTypeArgument>
</type>
</parameter>
</methodDefinition>
</target>
<memberUnderTest assemblyName="GameOfLife.Core" name="Initialize" token="6000014"><declaringType assemblyName="GameOfLife.Core" name="Grid" token="2000006" namespace="GameOfLife.Core"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Core" name="Grid" token="2000006" namespace="GameOfLife.Core"/>
</type>
</parameter>
<parameter name="cells" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="IEnumerable`1" token="2000036" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="Class"><definition assemblyName="GameOfLife.Contracts" name="ICell" token="2000002" namespace="GameOfLife.Contracts"/>
</genericTypeArgument>
</type>
</parameter>
</memberUnderTest>
<log level="error" time="2013-03-05 20:55:45Z" wikiTopic="Missing Wiki Topic" category="execution" message="runtime context Microsoft.Pex.Engine.Libraries.MicrosoftVisualBasicLibrary+ProjectErrorRuntimeContextAttribute+Context failed to open"><exceptionChain><exception typeDisplayName="InvalidProgramException" source="Microsoft.VisualBasic"><message><![CDATA[Common Language Runtime detected an invalid program.]]></message>
<type spec="Class"><definition assemblyName="mscorlib" name="InvalidProgramException" token="20000f9" namespace="System"/>
</type>
<stackTrace><frame value="  at ProjectData..ctor()" method="ProjectData..ctor()" offset="-1"><method assemblyName="Microsoft.VisualBasic" name=".ctor" token="600053a"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at ProjectData.GetProjectData()" method="ProjectData.GetProjectData()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="GetProjectData" static="true" token="600053c"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</resultType>
</method>
</frame>
<frame value="  at Information.Err()" method="Information.Err()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="Err" static="true" token="60005ee"><declaringType assemblyName="Microsoft.VisualBasic" name="Information" token="2000087" namespace="Microsoft.VisualBasic"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ErrObject" token="200002f" namespace="Microsoft.VisualBasic"/>
</resultType>
</method>
</frame>
<frame value="  at ProjectData.ClearProjectError()" method="ProjectData.ClearProjectError()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="ClearProjectError" static="true" token="6000538"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</method>
</frame>
</stackTrace>
</exception>
</exceptionChain>
</log>
<explorable title="guessed how to create GameOfLife.Core.Grid" kind="guessedclass" isExplorableTypeExported="true"><explorableType spec="Class"><definition assemblyName="GameOfLife.Core" name="Grid" token="2000006" namespace="GameOfLife.Core"/>
</explorableType>
<testAssemblyName name="GameOfLife.Core.Tests"/>
<update kind="CollectionCodeUpdate" name="Accept/Edit Factory"><codeUpdate kind="AddTypeCodeUpdate" name="Add type" fileNameHint="Factories\GridFactory" abstract="true" sealed="true" visibility="Public"><doc><![CDATA[<summary>A factory for GameOfLife.Core.Grid instances</summary>
]]></doc>
<reference name="mscorlib"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="GameOfLife.Core" location="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Library\bin\Debug\GameOfLife.Core.dll"/>
<reference name="GameOfLife.Contracts" location="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Library\bin\Debug\GameOfLife.Contracts.dll"/>
<typeDefinition assemblyName="GameOfLife.Core.Tests" name="GridFactory" token="ffffffff" namespace="GameOfLife.Core"/>
<baseType spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</baseType>
<target><assembly name="GameOfLife.Core.Tests"/>
</target>
</codeUpdate>
<codeUpdate kind="AddMethodCodeUpdate" name="Add method" visibility="Public"><attribute><ctor><definition assemblyName="Microsoft.Pex.Framework" name=".ctor" token="6000e50"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexFactoryMethodAttribute" token="200027d" namespace="Microsoft.Pex.Framework"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.Pex.Framework" name="PexFactoryMethodAttribute" token="200027d" namespace="Microsoft.Pex.Framework"/>
</type>
</parameter>
<parameter name="factoredType" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000128" namespace="System"/>
</type>
</parameter>
</definition>
</ctor>
<ctorArgument><value kind="TypeOfExpression"><type spec="Class"><definition assemblyName="GameOfLife.Core" name="Grid" token="2000006" namespace="GameOfLife.Core"/>
</type>
</value>
</ctorArgument>
</attribute>
<doc><![CDATA[<summary>A factory for GameOfLife.Core.Grid instances</summary>
]]></doc>
<reference name="GameOfLife.Core" location="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Library\bin\Debug\GameOfLife.Core.dll"/>
<reference name="mscorlib"/>
<reference name="GameOfLife.Contracts" location="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Library\bin\Debug\GameOfLife.Contracts.dll"/>
<methodDefinition assemblyName="GameOfLife.Core.Tests" name="Create" static="true"><declaringType assemblyName="GameOfLife.Core.Tests" name="GridFactory" token="ffffffff" namespace="GameOfLife.Core"/>
<parameter name="gridSize_iGridSize" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IGridSize" token="2000006" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="GameOfLife.Core" name="Grid" token="2000006" namespace="GameOfLife.Core"/>
</resultType>
</methodDefinition>
<target><typeDefinition assemblyName="GameOfLife.Core.Tests" name="GridFactory" token="ffffffff" namespace="GameOfLife.Core"/>
</target>
</codeUpdate>
<codeUpdate kind="SelectCodeUpdate" name="Select" selectKind="Body"><target><methodDefinition assemblyName="GameOfLife.Core.Tests" name="Create" static="true"><declaringType assemblyName="GameOfLife.Core.Tests" name="GridFactory" token="ffffffff" namespace="GameOfLife.Core"/>
<parameter name="gridSize_iGridSize" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IGridSize" token="2000006" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="GameOfLife.Core" name="Grid" token="2000006" namespace="GameOfLife.Core"/>
</resultType>
</methodDefinition>
</target>
</codeUpdate>
</update>
</explorable>
<log level="error" time="2013-03-05 20:55:45Z" wikiTopic="Missing Wiki Topic" category="execution" message="runtime context Microsoft.Pex.Engine.Libraries.MicrosoftVisualBasicLibrary+ProjectErrorRuntimeContextAttribute+Context failed to rollback"><exceptionChain><exception typeDisplayName="InvalidProgramException" source="Microsoft.VisualBasic"><message><![CDATA[Common Language Runtime detected an invalid program.]]></message>
<type spec="Class"><definition assemblyName="mscorlib" name="InvalidProgramException" token="20000f9" namespace="System"/>
</type>
<stackTrace><frame value="  at ProjectData..ctor()" method="ProjectData..ctor()" offset="-1"><method assemblyName="Microsoft.VisualBasic" name=".ctor" token="600053a"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at ProjectData.GetProjectData()" method="ProjectData.GetProjectData()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="GetProjectData" static="true" token="600053c"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</resultType>
</method>
</frame>
<frame value="  at Information.Err()" method="Information.Err()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="Err" static="true" token="60005ee"><declaringType assemblyName="Microsoft.VisualBasic" name="Information" token="2000087" namespace="Microsoft.VisualBasic"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ErrObject" token="200002f" namespace="Microsoft.VisualBasic"/>
</resultType>
</method>
</frame>
<frame value="  at ProjectData.ClearProjectError()" method="ProjectData.ClearProjectError()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="ClearProjectError" static="true" token="6000538"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</method>
</frame>
</stackTrace>
</exception>
</exceptionChain>
</log>
<test name="Initialize" state="success" duration="0.01"/>
<log level="error" time="2013-03-05 20:55:45Z" wikiTopic="Missing Wiki Topic" category="execution" message="runtime context Microsoft.Pex.Engine.Libraries.MicrosoftVisualBasicLibrary+ProjectErrorRuntimeContextAttribute+Context failed to open"><exceptionChain><exception typeDisplayName="InvalidProgramException" source="Microsoft.VisualBasic"><message><![CDATA[Common Language Runtime detected an invalid program.]]></message>
<type spec="Class"><definition assemblyName="mscorlib" name="InvalidProgramException" token="20000f9" namespace="System"/>
</type>
<stackTrace><frame value="  at ProjectData..ctor()" method="ProjectData..ctor()" offset="-1"><method assemblyName="Microsoft.VisualBasic" name=".ctor" token="600053a"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at ProjectData.GetProjectData()" method="ProjectData.GetProjectData()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="GetProjectData" static="true" token="600053c"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</resultType>
</method>
</frame>
<frame value="  at Information.Err()" method="Information.Err()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="Err" static="true" token="60005ee"><declaringType assemblyName="Microsoft.VisualBasic" name="Information" token="2000087" namespace="Microsoft.VisualBasic"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ErrObject" token="200002f" namespace="Microsoft.VisualBasic"/>
</resultType>
</method>
</frame>
<frame value="  at ProjectData.ClearProjectError()" method="ProjectData.ClearProjectError()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="ClearProjectError" static="true" token="6000538"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</method>
</frame>
</stackTrace>
</exception>
</exceptionChain>
</log>
<log level="error" time="2013-03-05 20:55:45Z" wikiTopic="Missing Wiki Topic" category="execution" message="runtime context Microsoft.Pex.Engine.Libraries.MicrosoftVisualBasicLibrary+ProjectErrorRuntimeContextAttribute+Context failed to rollback"><exceptionChain><exception typeDisplayName="InvalidProgramException" source="Microsoft.VisualBasic"><message><![CDATA[Common Language Runtime detected an invalid program.]]></message>
<type spec="Class"><definition assemblyName="mscorlib" name="InvalidProgramException" token="20000f9" namespace="System"/>
</type>
<stackTrace><frame value="  at ProjectData..ctor()" method="ProjectData..ctor()" offset="-1"><method assemblyName="Microsoft.VisualBasic" name=".ctor" token="600053a"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at ProjectData.GetProjectData()" method="ProjectData.GetProjectData()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="GetProjectData" static="true" token="600053c"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</resultType>
</method>
</frame>
<frame value="  at Information.Err()" method="Information.Err()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="Err" static="true" token="60005ee"><declaringType assemblyName="Microsoft.VisualBasic" name="Information" token="2000087" namespace="Microsoft.VisualBasic"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ErrObject" token="200002f" namespace="Microsoft.VisualBasic"/>
</resultType>
</method>
</frame>
<frame value="  at ProjectData.ClearProjectError()" method="ProjectData.ClearProjectError()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="ClearProjectError" static="true" token="6000538"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</method>
</frame>
</stackTrace>
</exception>
</exceptionChain>
</log>
<test name="Initialize" state="success" duration="0.00"/>
<explorable title="could not create an instance of GameOfLife.Core.Grid" kind="unexplorableclass" isExplorableTypeExported="true"><explorableType spec="Class"><definition assemblyName="GameOfLife.Core" name="Grid" token="2000006" namespace="GameOfLife.Core"/>
</explorableType>
<testAssemblyName name="GameOfLife.Core.Tests"/>
</explorable>
<result name="Initialize(Grid, IEnumerable`1&lt;ICell&gt;)" state="failed" duration="0.34"/>
<duration start="2013-03-05 20:55:44Z" end="2013-03-05 20:55:45Z" seconds="0.34"/>
</exploration>
<exploration shortName="MakeCell(Grid, IPosition, Boolean)" fullName="GameOfLife.Core.GridTest.MakeCell(Grid, IPosition, Boolean)" isDynamicCode="true"><method><definition assemblyName="GameOfLife.Core.Tests" name="MakeCell" token="6000011"><declaringType assemblyName="GameOfLife.Core.Tests" name="GridTest" token="2000006" namespace="GameOfLife.Core"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Core.Tests" name="GridTest" token="2000006" namespace="GameOfLife.Core"/>
</type>
</parameter>
<parameter name="target" position="1"><type spec="Class"><definition assemblyName="GameOfLife.Core" name="Grid" token="2000006" namespace="GameOfLife.Core"/>
</type>
</parameter>
<parameter name="position" position="2"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IPosition" token="2000005" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
<parameter name="alive" position="3"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009e" namespace="System"/>
</type>
</parameter>
</definition>
</method>
<target><methodDefinition assemblyName="GameOfLife.Core" name="MakeCell" token="600000f"><declaringType assemblyName="GameOfLife.Core" name="Grid" token="2000006" namespace="GameOfLife.Core"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Core" name="Grid" token="2000006" namespace="GameOfLife.Core"/>
</type>
</parameter>
<parameter name="position" position="1"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IPosition" token="2000005" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
<parameter name="alive" position="2"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009e" namespace="System"/>
</type>
</parameter>
</methodDefinition>
</target>
<memberUnderTest assemblyName="GameOfLife.Core" name="MakeCell" token="600000f"><declaringType assemblyName="GameOfLife.Core" name="Grid" token="2000006" namespace="GameOfLife.Core"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Core" name="Grid" token="2000006" namespace="GameOfLife.Core"/>
</type>
</parameter>
<parameter name="position" position="1"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IPosition" token="2000005" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
<parameter name="alive" position="2"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009e" namespace="System"/>
</type>
</parameter>
</memberUnderTest>
<log level="error" time="2013-03-05 20:55:45Z" wikiTopic="Missing Wiki Topic" category="execution" message="runtime context Microsoft.Pex.Engine.Libraries.MicrosoftVisualBasicLibrary+ProjectErrorRuntimeContextAttribute+Context failed to open"><exceptionChain><exception typeDisplayName="InvalidProgramException" source="Microsoft.VisualBasic"><message><![CDATA[Common Language Runtime detected an invalid program.]]></message>
<type spec="Class"><definition assemblyName="mscorlib" name="InvalidProgramException" token="20000f9" namespace="System"/>
</type>
<stackTrace><frame value="  at ProjectData..ctor()" method="ProjectData..ctor()" offset="-1"><method assemblyName="Microsoft.VisualBasic" name=".ctor" token="600053a"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at ProjectData.GetProjectData()" method="ProjectData.GetProjectData()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="GetProjectData" static="true" token="600053c"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</resultType>
</method>
</frame>
<frame value="  at Information.Err()" method="Information.Err()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="Err" static="true" token="60005ee"><declaringType assemblyName="Microsoft.VisualBasic" name="Information" token="2000087" namespace="Microsoft.VisualBasic"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ErrObject" token="200002f" namespace="Microsoft.VisualBasic"/>
</resultType>
</method>
</frame>
<frame value="  at ProjectData.ClearProjectError()" method="ProjectData.ClearProjectError()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="ClearProjectError" static="true" token="6000538"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</method>
</frame>
</stackTrace>
</exception>
</exceptionChain>
</log>
<explorable title="guessed how to create GameOfLife.Core.Grid" kind="guessedclass" isExplorableTypeExported="true"><explorableType spec="Class"><definition assemblyName="GameOfLife.Core" name="Grid" token="2000006" namespace="GameOfLife.Core"/>
</explorableType>
<testAssemblyName name="GameOfLife.Core.Tests"/>
<update kind="CollectionCodeUpdate" name="Accept/Edit Factory"><codeUpdate kind="AddTypeCodeUpdate" name="Add type" fileNameHint="Factories\GridFactory" abstract="true" sealed="true" visibility="Public"><doc><![CDATA[<summary>A factory for GameOfLife.Core.Grid instances</summary>
]]></doc>
<reference name="mscorlib"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="GameOfLife.Core" location="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Library\bin\Debug\GameOfLife.Core.dll"/>
<reference name="GameOfLife.Contracts" location="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Library\bin\Debug\GameOfLife.Contracts.dll"/>
<typeDefinition assemblyName="GameOfLife.Core.Tests" name="GridFactory" token="ffffffff" namespace="GameOfLife.Core"/>
<baseType spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</baseType>
<target><assembly name="GameOfLife.Core.Tests"/>
</target>
</codeUpdate>
<codeUpdate kind="AddMethodCodeUpdate" name="Add method" visibility="Public"><attribute><ctor><definition assemblyName="Microsoft.Pex.Framework" name=".ctor" token="6000e50"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexFactoryMethodAttribute" token="200027d" namespace="Microsoft.Pex.Framework"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.Pex.Framework" name="PexFactoryMethodAttribute" token="200027d" namespace="Microsoft.Pex.Framework"/>
</type>
</parameter>
<parameter name="factoredType" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000128" namespace="System"/>
</type>
</parameter>
</definition>
</ctor>
<ctorArgument><value kind="TypeOfExpression"><type spec="Class"><definition assemblyName="GameOfLife.Core" name="Grid" token="2000006" namespace="GameOfLife.Core"/>
</type>
</value>
</ctorArgument>
</attribute>
<doc><![CDATA[<summary>A factory for GameOfLife.Core.Grid instances</summary>
]]></doc>
<reference name="GameOfLife.Core" location="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Library\bin\Debug\GameOfLife.Core.dll"/>
<reference name="mscorlib"/>
<reference name="GameOfLife.Contracts" location="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Library\bin\Debug\GameOfLife.Contracts.dll"/>
<methodDefinition assemblyName="GameOfLife.Core.Tests" name="Create" static="true"><declaringType assemblyName="GameOfLife.Core.Tests" name="GridFactory" token="ffffffff" namespace="GameOfLife.Core"/>
<parameter name="gridSize_iGridSize" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IGridSize" token="2000006" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="GameOfLife.Core" name="Grid" token="2000006" namespace="GameOfLife.Core"/>
</resultType>
</methodDefinition>
<target><typeDefinition assemblyName="GameOfLife.Core.Tests" name="GridFactory" token="ffffffff" namespace="GameOfLife.Core"/>
</target>
</codeUpdate>
<codeUpdate kind="SelectCodeUpdate" name="Select" selectKind="Body"><target><methodDefinition assemblyName="GameOfLife.Core.Tests" name="Create" static="true"><declaringType assemblyName="GameOfLife.Core.Tests" name="GridFactory" token="ffffffff" namespace="GameOfLife.Core"/>
<parameter name="gridSize_iGridSize" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IGridSize" token="2000006" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="GameOfLife.Core" name="Grid" token="2000006" namespace="GameOfLife.Core"/>
</resultType>
</methodDefinition>
</target>
</codeUpdate>
</update>
</explorable>
<log level="error" time="2013-03-05 20:55:45Z" wikiTopic="Missing Wiki Topic" category="execution" message="runtime context Microsoft.Pex.Engine.Libraries.MicrosoftVisualBasicLibrary+ProjectErrorRuntimeContextAttribute+Context failed to rollback"><exceptionChain><exception typeDisplayName="InvalidProgramException" source="Microsoft.VisualBasic"><message><![CDATA[Common Language Runtime detected an invalid program.]]></message>
<type spec="Class"><definition assemblyName="mscorlib" name="InvalidProgramException" token="20000f9" namespace="System"/>
</type>
<stackTrace><frame value="  at ProjectData..ctor()" method="ProjectData..ctor()" offset="-1"><method assemblyName="Microsoft.VisualBasic" name=".ctor" token="600053a"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at ProjectData.GetProjectData()" method="ProjectData.GetProjectData()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="GetProjectData" static="true" token="600053c"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</resultType>
</method>
</frame>
<frame value="  at Information.Err()" method="Information.Err()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="Err" static="true" token="60005ee"><declaringType assemblyName="Microsoft.VisualBasic" name="Information" token="2000087" namespace="Microsoft.VisualBasic"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ErrObject" token="200002f" namespace="Microsoft.VisualBasic"/>
</resultType>
</method>
</frame>
<frame value="  at ProjectData.ClearProjectError()" method="ProjectData.ClearProjectError()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="ClearProjectError" static="true" token="6000538"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</method>
</frame>
</stackTrace>
</exception>
</exceptionChain>
</log>
<test name="MakeCell" state="success" duration="0.01"/>
<log level="error" time="2013-03-05 20:55:45Z" wikiTopic="Missing Wiki Topic" category="execution" message="runtime context Microsoft.Pex.Engine.Libraries.MicrosoftVisualBasicLibrary+ProjectErrorRuntimeContextAttribute+Context failed to open"><exceptionChain><exception typeDisplayName="InvalidProgramException" source="Microsoft.VisualBasic"><message><![CDATA[Common Language Runtime detected an invalid program.]]></message>
<type spec="Class"><definition assemblyName="mscorlib" name="InvalidProgramException" token="20000f9" namespace="System"/>
</type>
<stackTrace><frame value="  at ProjectData..ctor()" method="ProjectData..ctor()" offset="-1"><method assemblyName="Microsoft.VisualBasic" name=".ctor" token="600053a"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at ProjectData.GetProjectData()" method="ProjectData.GetProjectData()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="GetProjectData" static="true" token="600053c"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</resultType>
</method>
</frame>
<frame value="  at Information.Err()" method="Information.Err()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="Err" static="true" token="60005ee"><declaringType assemblyName="Microsoft.VisualBasic" name="Information" token="2000087" namespace="Microsoft.VisualBasic"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ErrObject" token="200002f" namespace="Microsoft.VisualBasic"/>
</resultType>
</method>
</frame>
<frame value="  at ProjectData.ClearProjectError()" method="ProjectData.ClearProjectError()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="ClearProjectError" static="true" token="6000538"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</method>
</frame>
</stackTrace>
</exception>
</exceptionChain>
</log>
<log level="error" time="2013-03-05 20:55:45Z" wikiTopic="Missing Wiki Topic" category="execution" message="runtime context Microsoft.Pex.Engine.Libraries.MicrosoftVisualBasicLibrary+ProjectErrorRuntimeContextAttribute+Context failed to rollback"><exceptionChain><exception typeDisplayName="InvalidProgramException" source="Microsoft.VisualBasic"><message><![CDATA[Common Language Runtime detected an invalid program.]]></message>
<type spec="Class"><definition assemblyName="mscorlib" name="InvalidProgramException" token="20000f9" namespace="System"/>
</type>
<stackTrace><frame value="  at ProjectData..ctor()" method="ProjectData..ctor()" offset="-1"><method assemblyName="Microsoft.VisualBasic" name=".ctor" token="600053a"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at ProjectData.GetProjectData()" method="ProjectData.GetProjectData()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="GetProjectData" static="true" token="600053c"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</resultType>
</method>
</frame>
<frame value="  at Information.Err()" method="Information.Err()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="Err" static="true" token="60005ee"><declaringType assemblyName="Microsoft.VisualBasic" name="Information" token="2000087" namespace="Microsoft.VisualBasic"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ErrObject" token="200002f" namespace="Microsoft.VisualBasic"/>
</resultType>
</method>
</frame>
<frame value="  at ProjectData.ClearProjectError()" method="ProjectData.ClearProjectError()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="ClearProjectError" static="true" token="6000538"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</method>
</frame>
</stackTrace>
</exception>
</exceptionChain>
</log>
<test name="MakeCell" state="success" duration="0.00"/>
<explorable title="could not create an instance of GameOfLife.Core.Grid" kind="unexplorableclass" isExplorableTypeExported="true"><explorableType spec="Class"><definition assemblyName="GameOfLife.Core" name="Grid" token="2000006" namespace="GameOfLife.Core"/>
</explorableType>
<testAssemblyName name="GameOfLife.Core.Tests"/>
</explorable>
<result name="MakeCell(Grid, IPosition, Boolean)" state="failed" duration="0.32"/>
<duration start="2013-03-05 20:55:45Z" end="2013-03-05 20:55:45Z" seconds="0.32"/>
</exploration>
<exploration shortName="MakeCell01(Grid, ICell)" fullName="GameOfLife.Core.GridTest.MakeCell01(Grid, ICell)" isDynamicCode="true"><method><definition assemblyName="GameOfLife.Core.Tests" name="MakeCell01" token="6000012"><declaringType assemblyName="GameOfLife.Core.Tests" name="GridTest" token="2000006" namespace="GameOfLife.Core"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Core.Tests" name="GridTest" token="2000006" namespace="GameOfLife.Core"/>
</type>
</parameter>
<parameter name="target" position="1"><type spec="Class"><definition assemblyName="GameOfLife.Core" name="Grid" token="2000006" namespace="GameOfLife.Core"/>
</type>
</parameter>
<parameter name="cell" position="2"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="ICell" token="2000002" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
</definition>
</method>
<target><methodDefinition assemblyName="GameOfLife.Core" name="MakeCell" token="6000010"><declaringType assemblyName="GameOfLife.Core" name="Grid" token="2000006" namespace="GameOfLife.Core"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Core" name="Grid" token="2000006" namespace="GameOfLife.Core"/>
</type>
</parameter>
<parameter name="cell" position="1"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="ICell" token="2000002" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
</methodDefinition>
</target>
<memberUnderTest assemblyName="GameOfLife.Core" name="MakeCell" token="6000010"><declaringType assemblyName="GameOfLife.Core" name="Grid" token="2000006" namespace="GameOfLife.Core"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Core" name="Grid" token="2000006" namespace="GameOfLife.Core"/>
</type>
</parameter>
<parameter name="cell" position="1"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="ICell" token="2000002" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
</memberUnderTest>
<log level="error" time="2013-03-05 20:55:45Z" wikiTopic="Missing Wiki Topic" category="execution" message="runtime context Microsoft.Pex.Engine.Libraries.MicrosoftVisualBasicLibrary+ProjectErrorRuntimeContextAttribute+Context failed to open"><exceptionChain><exception typeDisplayName="InvalidProgramException" source="Microsoft.VisualBasic"><message><![CDATA[Common Language Runtime detected an invalid program.]]></message>
<type spec="Class"><definition assemblyName="mscorlib" name="InvalidProgramException" token="20000f9" namespace="System"/>
</type>
<stackTrace><frame value="  at ProjectData..ctor()" method="ProjectData..ctor()" offset="-1"><method assemblyName="Microsoft.VisualBasic" name=".ctor" token="600053a"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at ProjectData.GetProjectData()" method="ProjectData.GetProjectData()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="GetProjectData" static="true" token="600053c"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</resultType>
</method>
</frame>
<frame value="  at Information.Err()" method="Information.Err()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="Err" static="true" token="60005ee"><declaringType assemblyName="Microsoft.VisualBasic" name="Information" token="2000087" namespace="Microsoft.VisualBasic"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ErrObject" token="200002f" namespace="Microsoft.VisualBasic"/>
</resultType>
</method>
</frame>
<frame value="  at ProjectData.ClearProjectError()" method="ProjectData.ClearProjectError()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="ClearProjectError" static="true" token="6000538"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</method>
</frame>
</stackTrace>
</exception>
</exceptionChain>
</log>
<explorable title="guessed how to create GameOfLife.Core.Grid" kind="guessedclass" isExplorableTypeExported="true"><explorableType spec="Class"><definition assemblyName="GameOfLife.Core" name="Grid" token="2000006" namespace="GameOfLife.Core"/>
</explorableType>
<testAssemblyName name="GameOfLife.Core.Tests"/>
<update kind="CollectionCodeUpdate" name="Accept/Edit Factory"><codeUpdate kind="AddTypeCodeUpdate" name="Add type" fileNameHint="Factories\GridFactory" abstract="true" sealed="true" visibility="Public"><doc><![CDATA[<summary>A factory for GameOfLife.Core.Grid instances</summary>
]]></doc>
<reference name="mscorlib"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="GameOfLife.Core" location="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Library\bin\Debug\GameOfLife.Core.dll"/>
<reference name="GameOfLife.Contracts" location="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Library\bin\Debug\GameOfLife.Contracts.dll"/>
<typeDefinition assemblyName="GameOfLife.Core.Tests" name="GridFactory" token="ffffffff" namespace="GameOfLife.Core"/>
<baseType spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</baseType>
<target><assembly name="GameOfLife.Core.Tests"/>
</target>
</codeUpdate>
<codeUpdate kind="AddMethodCodeUpdate" name="Add method" visibility="Public"><attribute><ctor><definition assemblyName="Microsoft.Pex.Framework" name=".ctor" token="6000e50"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexFactoryMethodAttribute" token="200027d" namespace="Microsoft.Pex.Framework"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.Pex.Framework" name="PexFactoryMethodAttribute" token="200027d" namespace="Microsoft.Pex.Framework"/>
</type>
</parameter>
<parameter name="factoredType" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000128" namespace="System"/>
</type>
</parameter>
</definition>
</ctor>
<ctorArgument><value kind="TypeOfExpression"><type spec="Class"><definition assemblyName="GameOfLife.Core" name="Grid" token="2000006" namespace="GameOfLife.Core"/>
</type>
</value>
</ctorArgument>
</attribute>
<doc><![CDATA[<summary>A factory for GameOfLife.Core.Grid instances</summary>
]]></doc>
<reference name="GameOfLife.Core" location="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Library\bin\Debug\GameOfLife.Core.dll"/>
<reference name="mscorlib"/>
<reference name="GameOfLife.Contracts" location="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Library\bin\Debug\GameOfLife.Contracts.dll"/>
<methodDefinition assemblyName="GameOfLife.Core.Tests" name="Create" static="true"><declaringType assemblyName="GameOfLife.Core.Tests" name="GridFactory" token="ffffffff" namespace="GameOfLife.Core"/>
<parameter name="gridSize_iGridSize" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IGridSize" token="2000006" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="GameOfLife.Core" name="Grid" token="2000006" namespace="GameOfLife.Core"/>
</resultType>
</methodDefinition>
<target><typeDefinition assemblyName="GameOfLife.Core.Tests" name="GridFactory" token="ffffffff" namespace="GameOfLife.Core"/>
</target>
</codeUpdate>
<codeUpdate kind="SelectCodeUpdate" name="Select" selectKind="Body"><target><methodDefinition assemblyName="GameOfLife.Core.Tests" name="Create" static="true"><declaringType assemblyName="GameOfLife.Core.Tests" name="GridFactory" token="ffffffff" namespace="GameOfLife.Core"/>
<parameter name="gridSize_iGridSize" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IGridSize" token="2000006" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="GameOfLife.Core" name="Grid" token="2000006" namespace="GameOfLife.Core"/>
</resultType>
</methodDefinition>
</target>
</codeUpdate>
</update>
</explorable>
<log level="error" time="2013-03-05 20:55:45Z" wikiTopic="Missing Wiki Topic" category="execution" message="runtime context Microsoft.Pex.Engine.Libraries.MicrosoftVisualBasicLibrary+ProjectErrorRuntimeContextAttribute+Context failed to rollback"><exceptionChain><exception typeDisplayName="InvalidProgramException" source="Microsoft.VisualBasic"><message><![CDATA[Common Language Runtime detected an invalid program.]]></message>
<type spec="Class"><definition assemblyName="mscorlib" name="InvalidProgramException" token="20000f9" namespace="System"/>
</type>
<stackTrace><frame value="  at ProjectData..ctor()" method="ProjectData..ctor()" offset="-1"><method assemblyName="Microsoft.VisualBasic" name=".ctor" token="600053a"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at ProjectData.GetProjectData()" method="ProjectData.GetProjectData()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="GetProjectData" static="true" token="600053c"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</resultType>
</method>
</frame>
<frame value="  at Information.Err()" method="Information.Err()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="Err" static="true" token="60005ee"><declaringType assemblyName="Microsoft.VisualBasic" name="Information" token="2000087" namespace="Microsoft.VisualBasic"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ErrObject" token="200002f" namespace="Microsoft.VisualBasic"/>
</resultType>
</method>
</frame>
<frame value="  at ProjectData.ClearProjectError()" method="ProjectData.ClearProjectError()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="ClearProjectError" static="true" token="6000538"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</method>
</frame>
</stackTrace>
</exception>
</exceptionChain>
</log>
<test name="MakeCell01" state="success" duration="0.01"/>
<log level="error" time="2013-03-05 20:55:45Z" wikiTopic="Missing Wiki Topic" category="execution" message="runtime context Microsoft.Pex.Engine.Libraries.MicrosoftVisualBasicLibrary+ProjectErrorRuntimeContextAttribute+Context failed to open"><exceptionChain><exception typeDisplayName="InvalidProgramException" source="Microsoft.VisualBasic"><message><![CDATA[Common Language Runtime detected an invalid program.]]></message>
<type spec="Class"><definition assemblyName="mscorlib" name="InvalidProgramException" token="20000f9" namespace="System"/>
</type>
<stackTrace><frame value="  at ProjectData..ctor()" method="ProjectData..ctor()" offset="-1"><method assemblyName="Microsoft.VisualBasic" name=".ctor" token="600053a"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at ProjectData.GetProjectData()" method="ProjectData.GetProjectData()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="GetProjectData" static="true" token="600053c"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</resultType>
</method>
</frame>
<frame value="  at Information.Err()" method="Information.Err()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="Err" static="true" token="60005ee"><declaringType assemblyName="Microsoft.VisualBasic" name="Information" token="2000087" namespace="Microsoft.VisualBasic"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ErrObject" token="200002f" namespace="Microsoft.VisualBasic"/>
</resultType>
</method>
</frame>
<frame value="  at ProjectData.ClearProjectError()" method="ProjectData.ClearProjectError()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="ClearProjectError" static="true" token="6000538"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</method>
</frame>
</stackTrace>
</exception>
</exceptionChain>
</log>
<log level="error" time="2013-03-05 20:55:45Z" wikiTopic="Missing Wiki Topic" category="execution" message="runtime context Microsoft.Pex.Engine.Libraries.MicrosoftVisualBasicLibrary+ProjectErrorRuntimeContextAttribute+Context failed to rollback"><exceptionChain><exception typeDisplayName="InvalidProgramException" source="Microsoft.VisualBasic"><message><![CDATA[Common Language Runtime detected an invalid program.]]></message>
<type spec="Class"><definition assemblyName="mscorlib" name="InvalidProgramException" token="20000f9" namespace="System"/>
</type>
<stackTrace><frame value="  at ProjectData..ctor()" method="ProjectData..ctor()" offset="-1"><method assemblyName="Microsoft.VisualBasic" name=".ctor" token="600053a"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at ProjectData.GetProjectData()" method="ProjectData.GetProjectData()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="GetProjectData" static="true" token="600053c"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</resultType>
</method>
</frame>
<frame value="  at Information.Err()" method="Information.Err()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="Err" static="true" token="60005ee"><declaringType assemblyName="Microsoft.VisualBasic" name="Information" token="2000087" namespace="Microsoft.VisualBasic"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ErrObject" token="200002f" namespace="Microsoft.VisualBasic"/>
</resultType>
</method>
</frame>
<frame value="  at ProjectData.ClearProjectError()" method="ProjectData.ClearProjectError()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="ClearProjectError" static="true" token="6000538"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</method>
</frame>
</stackTrace>
</exception>
</exceptionChain>
</log>
<test name="MakeCell01" state="success" duration="0.00"/>
<explorable title="could not create an instance of GameOfLife.Core.Grid" kind="unexplorableclass" isExplorableTypeExported="true"><explorableType spec="Class"><definition assemblyName="GameOfLife.Core" name="Grid" token="2000006" namespace="GameOfLife.Core"/>
</explorableType>
<testAssemblyName name="GameOfLife.Core.Tests"/>
</explorable>
<result name="MakeCell01(Grid, ICell)" state="failed" duration="0.28"/>
<duration start="2013-03-05 20:55:45Z" end="2013-03-05 20:55:45Z" seconds="0.29"/>
</exploration>
<coverage domain="usercodeundertest" unit="block" covered="4" total="7" coveredRatio="0.5714285714285714"/>
<sourceCoverage xml="cov\t893\cov.xml" html="cov\t893\cov.html"/>
<duration start="2013-03-05 20:55:43Z" end="2013-03-05 20:55:45Z" seconds="2.4181383"/>
</fixture>
<fixture name="NeighboursFinderTest" type="GameOfLife.Core.NeighboursFinderTest" typeName="NeighboursFinderTest" token="2000009" href="fix\GameOfLife.Core.Tests.904.html"><type spec="Class"><definition assemblyName="GameOfLife.Core.Tests" name="NeighboursFinderTest" token="2000009" namespace="GameOfLife.Core"/>
</type>
<settings typeUnderTest="GameOfLife.Core.NeighboursFinder"/>
<exploration shortName="RetrieveNeighbours(NeighboursFinder, ICell, IGrid)" fullName="GameOfLife.Core.NeighboursFinderTest.RetrieveNeighbours(NeighboursFinder, ICell, IGrid)" isDynamicCode="true"><method><definition assemblyName="GameOfLife.Core.Tests" name="RetrieveNeighbours" token="600001d"><declaringType assemblyName="GameOfLife.Core.Tests" name="NeighboursFinderTest" token="2000009" namespace="GameOfLife.Core"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Core.Tests" name="NeighboursFinderTest" token="2000009" namespace="GameOfLife.Core"/>
</type>
</parameter>
<parameter name="target" position="1"><type spec="Class"><definition assemblyName="GameOfLife.Core" name="NeighboursFinder" token="2000009" namespace="GameOfLife.Core"/>
</type>
</parameter>
<parameter name="cell" position="2"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="ICell" token="2000002" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
<parameter name="grid" position="3"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IGrid" token="2000008" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="IEnumerable`1" token="2000036" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="Class"><definition assemblyName="GameOfLife.Contracts" name="ICell" token="2000002" namespace="GameOfLife.Contracts"/>
</genericTypeArgument>
</resultType>
</definition>
</method>
<target><methodDefinition assemblyName="GameOfLife.Core" name="RetrieveNeighbours" token="6000021"><declaringType assemblyName="GameOfLife.Core" name="NeighboursFinder" token="2000009" namespace="GameOfLife.Core"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Core" name="NeighboursFinder" token="2000009" namespace="GameOfLife.Core"/>
</type>
</parameter>
<parameter name="cell" position="1"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="ICell" token="2000002" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
<parameter name="grid" position="2"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IGrid" token="2000008" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="IEnumerable`1" token="2000036" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="Class"><definition assemblyName="GameOfLife.Contracts" name="ICell" token="2000002" namespace="GameOfLife.Contracts"/>
</genericTypeArgument>
</resultType>
</methodDefinition>
</target>
<memberUnderTest assemblyName="GameOfLife.Core" name="RetrieveNeighbours" token="6000021"><declaringType assemblyName="GameOfLife.Core" name="NeighboursFinder" token="2000009" namespace="GameOfLife.Core"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Core" name="NeighboursFinder" token="2000009" namespace="GameOfLife.Core"/>
</type>
</parameter>
<parameter name="cell" position="1"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="ICell" token="2000002" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
<parameter name="grid" position="2"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IGrid" token="2000008" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="IEnumerable`1" token="2000036" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="Class"><definition assemblyName="GameOfLife.Contracts" name="ICell" token="2000002" namespace="GameOfLife.Contracts"/>
</genericTypeArgument>
</resultType>
</memberUnderTest>
<log level="error" time="2013-03-05 20:55:46Z" wikiTopic="Missing Wiki Topic" category="execution" message="runtime context Microsoft.Pex.Engine.Libraries.MicrosoftVisualBasicLibrary+ProjectErrorRuntimeContextAttribute+Context failed to open"><exceptionChain><exception typeDisplayName="InvalidProgramException" source="Microsoft.VisualBasic"><message><![CDATA[Common Language Runtime detected an invalid program.]]></message>
<type spec="Class"><definition assemblyName="mscorlib" name="InvalidProgramException" token="20000f9" namespace="System"/>
</type>
<stackTrace><frame value="  at ProjectData..ctor()" method="ProjectData..ctor()" offset="-1"><method assemblyName="Microsoft.VisualBasic" name=".ctor" token="600053a"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at ProjectData.GetProjectData()" method="ProjectData.GetProjectData()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="GetProjectData" static="true" token="600053c"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</resultType>
</method>
</frame>
<frame value="  at Information.Err()" method="Information.Err()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="Err" static="true" token="60005ee"><declaringType assemblyName="Microsoft.VisualBasic" name="Information" token="2000087" namespace="Microsoft.VisualBasic"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ErrObject" token="200002f" namespace="Microsoft.VisualBasic"/>
</resultType>
</method>
</frame>
<frame value="  at ProjectData.ClearProjectError()" method="ProjectData.ClearProjectError()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="ClearProjectError" static="true" token="6000538"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</method>
</frame>
</stackTrace>
</exception>
</exceptionChain>
</log>
<log level="error" time="2013-03-05 20:55:46Z" wikiTopic="Missing Wiki Topic" category="execution" message="runtime context Microsoft.Pex.Engine.Libraries.MicrosoftVisualBasicLibrary+ProjectErrorRuntimeContextAttribute+Context failed to rollback"><exceptionChain><exception typeDisplayName="InvalidProgramException" source="Microsoft.VisualBasic"><message><![CDATA[Common Language Runtime detected an invalid program.]]></message>
<type spec="Class"><definition assemblyName="mscorlib" name="InvalidProgramException" token="20000f9" namespace="System"/>
</type>
<stackTrace><frame value="  at ProjectData..ctor()" method="ProjectData..ctor()" offset="-1"><method assemblyName="Microsoft.VisualBasic" name=".ctor" token="600053a"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at ProjectData.GetProjectData()" method="ProjectData.GetProjectData()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="GetProjectData" static="true" token="600053c"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</resultType>
</method>
</frame>
<frame value="  at Information.Err()" method="Information.Err()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="Err" static="true" token="60005ee"><declaringType assemblyName="Microsoft.VisualBasic" name="Information" token="2000087" namespace="Microsoft.VisualBasic"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ErrObject" token="200002f" namespace="Microsoft.VisualBasic"/>
</resultType>
</method>
</frame>
<frame value="  at ProjectData.ClearProjectError()" method="ProjectData.ClearProjectError()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="ClearProjectError" static="true" token="6000538"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</method>
</frame>
</stackTrace>
</exception>
</exceptionChain>
</log>
<test name="RetrieveNeighbours" state="success" duration="0.05"/>
<generatedTest id="017c1cf6-4025-4ab4-9515-43c79a881426" index="1" run="1" status="normaltermination" explorationIsDynamicCode="true" generated="true" new="true" assemblyName="GameOfLife.Core.Tests" name="RetrieveNeighbours831"><declaringType assemblyName="GameOfLife.Core.Tests" name="NeighboursFinderTest" token="ffffffff" namespace="GameOfLife.Core"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Core.Tests" name="NeighboursFinderTest" token="ffffffff" namespace="GameOfLife.Core"/>
</type>
</parameter>
<rcov name="Block" dcov="3" dtot="95" acov="3" atot="95"/>
<rcov name="asserts" dcov="0" dtot="0" acov="0" atot="0"/>
<value name="target">new NeighboursFinder{}</value>
<value name="cell">null</value>
<value name="grid">null</value>
<value name="result(target)">new NeighboursFinder{}</value>
<value name="result">null</value>
<code><![CDATA[IEnumerable<ICell> iEnumerable;
NeighboursFinder s0 = new NeighboursFinder();
iEnumerable = this.RetrieveNeighbours(s0, (ICell)null, (IGrid)null);
Assert.IsNull((object)iEnumerable);
Assert.IsNotNull((object)s0);
]]></code>
<methodCode imports="GameOfLife.Contracts;System.Collections.Generic;Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(NeighboursFinderTest))]
public void RetrieveNeighbours831()
{
    IEnumerable<ICell> iEnumerable;
    NeighboursFinder s0 = new NeighboursFinder();
    iEnumerable = this.RetrieveNeighbours(s0, (ICell)null, (IGrid)null);
    Assert.IsNull((object)iEnumerable);
    Assert.IsNotNull((object)s0);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="GameOfLife.Core.Tests"/>
<reference name="GameOfLife.Contracts" location="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Library\bin\Debug\GameOfLife.Contracts.dll"/>
<reference name="GameOfLife.Core" location="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Library\bin\Debug\GameOfLife.Core.dll"/>
<pathCondition><![CDATA[return target != (NeighboursFinder)null && methodof(target.RetrieveNeighbours) == methodof(NeighboursFinder.RetrieveNeighbours) && cell == (ICell)null;
]]></pathCondition>
</generatedTest>
<log level="message" time="2013-03-05 20:55:46Z" category="coverage" message="coverage increased from 0 to 3 blocks (+3) after flipping GameOfLife.Core.NeighboursFinderTest.RetrieveNeighbours at 0x0003"/>
<coverage domain="usercodeundertest" unit="block" covered="3" total="95" coveredRatio="0.031578947368421054"/>
<sourceCoverage xml="cov\e358\cov.xml" html="cov\e358\cov.html"/>
<result name="RetrieveNeighbours(NeighboursFinder, ICell, IGrid)" state="failed" duration="0.51"/>
<duration start="2013-03-05 20:55:45Z" end="2013-03-05 20:55:46Z" seconds="0.52"/>
</exploration>
<coverage domain="usercodeundertest" unit="block" covered="3" total="95" coveredRatio="0.031578947368421054"/>
<sourceCoverage xml="cov\t904\cov.xml" html="cov\t904\cov.html"/>
<duration start="2013-03-05 20:55:45Z" end="2013-03-05 20:55:46Z" seconds="0.54"/>
</fixture>
<fixture name="IsOverCrowdedSpecificationTest" type="GameOfLife.Core.Specifications.IsOverCrowdedSpecificationTest" typeName="IsOverCrowdedSpecificationTest" token="2000008" href="fix\GameOfLife.Core.Tests.905.html"><type spec="Class"><definition assemblyName="GameOfLife.Core.Tests" name="IsOverCrowdedSpecificationTest" token="2000008" namespace="GameOfLife.Core.Specifications"/>
</type>
<settings typeUnderTest="GameOfLife.Core.Specifications.IsOverCrowdedSpecification"/>
<exploration shortName="Constructor(IGrid)" fullName="GameOfLife.Core.Specifications.IsOverCrowdedSpecificationTest.Constructor(IGrid)" isDynamicCode="true"><method><definition assemblyName="GameOfLife.Core.Tests" name="Constructor" token="600001a"><declaringType assemblyName="GameOfLife.Core.Tests" name="IsOverCrowdedSpecificationTest" token="2000008" namespace="GameOfLife.Core.Specifications"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Core.Tests" name="IsOverCrowdedSpecificationTest" token="2000008" namespace="GameOfLife.Core.Specifications"/>
</type>
</parameter>
<parameter name="grid" position="1"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IGrid" token="2000008" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="GameOfLife.Core" name="IsOverCrowdedSpecification" token="2000008" namespace="GameOfLife.Core.Specifications"/>
</resultType>
</definition>
</method>
<target><methodDefinition assemblyName="GameOfLife.Core" name=".ctor" token="600001e"><declaringType assemblyName="GameOfLife.Core" name="IsOverCrowdedSpecification" token="2000008" namespace="GameOfLife.Core.Specifications"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Core" name="IsOverCrowdedSpecification" token="2000008" namespace="GameOfLife.Core.Specifications"/>
</type>
</parameter>
<parameter name="grid" position="1"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IGrid" token="2000008" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
</methodDefinition>
</target>
<memberUnderTest assemblyName="GameOfLife.Core" name=".ctor" token="600001e"><declaringType assemblyName="GameOfLife.Core" name="IsOverCrowdedSpecification" token="2000008" namespace="GameOfLife.Core.Specifications"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Core" name="IsOverCrowdedSpecification" token="2000008" namespace="GameOfLife.Core.Specifications"/>
</type>
</parameter>
<parameter name="grid" position="1"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IGrid" token="2000008" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
</memberUnderTest>
<log level="error" time="2013-03-05 20:55:46Z" wikiTopic="Missing Wiki Topic" category="execution" message="runtime context Microsoft.Pex.Engine.Libraries.MicrosoftVisualBasicLibrary+ProjectErrorRuntimeContextAttribute+Context failed to open"><exceptionChain><exception typeDisplayName="InvalidProgramException" source="Microsoft.VisualBasic"><message><![CDATA[Common Language Runtime detected an invalid program.]]></message>
<type spec="Class"><definition assemblyName="mscorlib" name="InvalidProgramException" token="20000f9" namespace="System"/>
</type>
<stackTrace><frame value="  at ProjectData..ctor()" method="ProjectData..ctor()" offset="-1"><method assemblyName="Microsoft.VisualBasic" name=".ctor" token="600053a"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at ProjectData.GetProjectData()" method="ProjectData.GetProjectData()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="GetProjectData" static="true" token="600053c"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</resultType>
</method>
</frame>
<frame value="  at Information.Err()" method="Information.Err()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="Err" static="true" token="60005ee"><declaringType assemblyName="Microsoft.VisualBasic" name="Information" token="2000087" namespace="Microsoft.VisualBasic"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ErrObject" token="200002f" namespace="Microsoft.VisualBasic"/>
</resultType>
</method>
</frame>
<frame value="  at ProjectData.ClearProjectError()" method="ProjectData.ClearProjectError()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="ClearProjectError" static="true" token="6000538"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</method>
</frame>
</stackTrace>
</exception>
</exceptionChain>
</log>
<log level="error" time="2013-03-05 20:55:46Z" wikiTopic="Missing Wiki Topic" category="execution" message="runtime context Microsoft.Pex.Engine.Libraries.MicrosoftVisualBasicLibrary+ProjectErrorRuntimeContextAttribute+Context failed to rollback"><exceptionChain><exception typeDisplayName="InvalidProgramException" source="Microsoft.VisualBasic"><message><![CDATA[Common Language Runtime detected an invalid program.]]></message>
<type spec="Class"><definition assemblyName="mscorlib" name="InvalidProgramException" token="20000f9" namespace="System"/>
</type>
<stackTrace><frame value="  at ProjectData..ctor()" method="ProjectData..ctor()" offset="-1"><method assemblyName="Microsoft.VisualBasic" name=".ctor" token="600053a"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at ProjectData.GetProjectData()" method="ProjectData.GetProjectData()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="GetProjectData" static="true" token="600053c"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</resultType>
</method>
</frame>
<frame value="  at Information.Err()" method="Information.Err()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="Err" static="true" token="60005ee"><declaringType assemblyName="Microsoft.VisualBasic" name="Information" token="2000087" namespace="Microsoft.VisualBasic"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ErrObject" token="200002f" namespace="Microsoft.VisualBasic"/>
</resultType>
</method>
</frame>
<frame value="  at ProjectData.ClearProjectError()" method="ProjectData.ClearProjectError()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="ClearProjectError" static="true" token="6000538"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</method>
</frame>
</stackTrace>
</exception>
</exceptionChain>
</log>
<test name="Constructor" state="success" duration="0.00"/>
<generatedTest id="be3fcaa6-eb46-4d7a-a4ca-814708e2bc7c" index="1" run="1" status="normaltermination" explorationIsDynamicCode="true" generated="true" new="true" assemblyName="GameOfLife.Core.Tests" name="Constructor240"><declaringType assemblyName="GameOfLife.Core.Tests" name="IsOverCrowdedSpecificationTest" token="ffffffff" namespace="GameOfLife.Core.Specifications"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Core.Tests" name="IsOverCrowdedSpecificationTest" token="ffffffff" namespace="GameOfLife.Core.Specifications"/>
</type>
</parameter>
<rcov name="Block" dcov="3" dtot="3" acov="3" atot="3"/>
<rcov name="asserts" dcov="0" dtot="0" acov="0" atot="0"/>
<value name="grid">null</value>
<value name="result">new IsOverCrowdedSpecification{}</value>
<code><![CDATA[IsOverCrowdedSpecification isOverCrowdedSpecification;
isOverCrowdedSpecification = this.Constructor((IGrid)null);
Assert.IsNotNull((object)isOverCrowdedSpecification);
]]></code>
<methodCode imports="GameOfLife.Contracts;Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(IsOverCrowdedSpecificationTest))]
public void Constructor240()
{
    IsOverCrowdedSpecification isOverCrowdedSpecification;
    isOverCrowdedSpecification = this.Constructor((IGrid)null);
    Assert.IsNotNull((object)isOverCrowdedSpecification);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="GameOfLife.Core.Tests"/>
<reference name="GameOfLife.Core" location="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Library\bin\Debug\GameOfLife.Core.dll"/>
<reference name="DataAccess.Specification" location="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Library\bin\Debug\DataAccess.Specification.dll"/>
<reference name="GameOfLife.Contracts" location="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Library\bin\Debug\GameOfLife.Contracts.dll"/>
</generatedTest>
<log level="message" time="2013-03-05 20:55:46Z" category="coverage" message="coverage increased from 0 to 3 blocks (+3) after flipping &lt;unknown method&gt; at 0x&lt;unknown offset&gt;"/>
<coverage domain="usercodeundertest" unit="block" covered="3" total="3" coveredRatio="1"/>
<sourceCoverage xml="cov\e363\cov.xml" html="cov\e363\cov.html"/>
<result name="Constructor(IGrid)" state="failed" duration="0.30"/>
<duration start="2013-03-05 20:55:46Z" end="2013-03-05 20:55:46Z" seconds="0.30"/>
</exploration>
<exploration shortName="IsSatisfiedBy(IsOverCrowdedSpecification, ICell)" fullName="GameOfLife.Core.Specifications.IsOverCrowdedSpecificationTest.IsSatisfiedBy(IsOverCrowdedSpecification, ICell)" isDynamicCode="true"><method><definition assemblyName="GameOfLife.Core.Tests" name="IsSatisfiedBy" token="600001b"><declaringType assemblyName="GameOfLife.Core.Tests" name="IsOverCrowdedSpecificationTest" token="2000008" namespace="GameOfLife.Core.Specifications"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Core.Tests" name="IsOverCrowdedSpecificationTest" token="2000008" namespace="GameOfLife.Core.Specifications"/>
</type>
</parameter>
<parameter name="target" position="1"><type spec="Class"><definition assemblyName="GameOfLife.Core" name="IsOverCrowdedSpecification" token="2000008" namespace="GameOfLife.Core.Specifications"/>
</type>
</parameter>
<parameter name="currentCell" position="2"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="ICell" token="2000002" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
<resultType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009e" namespace="System"/>
</resultType>
</definition>
</method>
<target><methodDefinition assemblyName="GameOfLife.Core" name="IsSatisfiedBy" token="600001f"><declaringType assemblyName="GameOfLife.Core" name="IsOverCrowdedSpecification" token="2000008" namespace="GameOfLife.Core.Specifications"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Core" name="IsOverCrowdedSpecification" token="2000008" namespace="GameOfLife.Core.Specifications"/>
</type>
</parameter>
<parameter name="currentCell" position="1"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="ICell" token="2000002" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
<resultType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009e" namespace="System"/>
</resultType>
</methodDefinition>
</target>
<memberUnderTest assemblyName="GameOfLife.Core" name="IsSatisfiedBy" token="600001f"><declaringType assemblyName="GameOfLife.Core" name="IsOverCrowdedSpecification" token="2000008" namespace="GameOfLife.Core.Specifications"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Core" name="IsOverCrowdedSpecification" token="2000008" namespace="GameOfLife.Core.Specifications"/>
</type>
</parameter>
<parameter name="currentCell" position="1"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="ICell" token="2000002" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
<resultType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009e" namespace="System"/>
</resultType>
</memberUnderTest>
<log level="error" time="2013-03-05 20:55:46Z" wikiTopic="Missing Wiki Topic" category="execution" message="runtime context Microsoft.Pex.Engine.Libraries.MicrosoftVisualBasicLibrary+ProjectErrorRuntimeContextAttribute+Context failed to open"><exceptionChain><exception typeDisplayName="InvalidProgramException" source="Microsoft.VisualBasic"><message><![CDATA[Common Language Runtime detected an invalid program.]]></message>
<type spec="Class"><definition assemblyName="mscorlib" name="InvalidProgramException" token="20000f9" namespace="System"/>
</type>
<stackTrace><frame value="  at ProjectData..ctor()" method="ProjectData..ctor()" offset="-1"><method assemblyName="Microsoft.VisualBasic" name=".ctor" token="600053a"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at ProjectData.GetProjectData()" method="ProjectData.GetProjectData()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="GetProjectData" static="true" token="600053c"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</resultType>
</method>
</frame>
<frame value="  at Information.Err()" method="Information.Err()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="Err" static="true" token="60005ee"><declaringType assemblyName="Microsoft.VisualBasic" name="Information" token="2000087" namespace="Microsoft.VisualBasic"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ErrObject" token="200002f" namespace="Microsoft.VisualBasic"/>
</resultType>
</method>
</frame>
<frame value="  at ProjectData.ClearProjectError()" method="ProjectData.ClearProjectError()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="ClearProjectError" static="true" token="6000538"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</method>
</frame>
</stackTrace>
</exception>
</exceptionChain>
</log>
<explorable title="guessed how to create GameOfLife.Core.Specifications.IsOverCrowdedSpecification" kind="guessedclass" isExplorableTypeExported="true"><explorableType spec="Class"><definition assemblyName="GameOfLife.Core" name="IsOverCrowdedSpecification" token="2000008" namespace="GameOfLife.Core.Specifications"/>
</explorableType>
<testAssemblyName name="GameOfLife.Core.Tests"/>
<update kind="CollectionCodeUpdate" name="Accept/Edit Factory"><codeUpdate kind="AddTypeCodeUpdate" name="Add type" fileNameHint="Factories\IsOverCrowdedSpecificationFactory" abstract="true" sealed="true" visibility="Public"><doc><![CDATA[<summary>A factory for GameOfLife.Core.Specifications.IsOverCrowdedSpecification instances</summary>
]]></doc>
<reference name="mscorlib"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="GameOfLife.Core" location="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Library\bin\Debug\GameOfLife.Core.dll"/>
<reference name="GameOfLife.Contracts" location="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Library\bin\Debug\GameOfLife.Contracts.dll"/>
<typeDefinition assemblyName="GameOfLife.Core.Tests" name="IsOverCrowdedSpecificationFactory" token="ffffffff" namespace="GameOfLife.Core.Specifications"/>
<baseType spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</baseType>
<target><assembly name="GameOfLife.Core.Tests"/>
</target>
</codeUpdate>
<codeUpdate kind="AddMethodCodeUpdate" name="Add method" visibility="Public"><attribute><ctor><definition assemblyName="Microsoft.Pex.Framework" name=".ctor" token="6000e50"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexFactoryMethodAttribute" token="200027d" namespace="Microsoft.Pex.Framework"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.Pex.Framework" name="PexFactoryMethodAttribute" token="200027d" namespace="Microsoft.Pex.Framework"/>
</type>
</parameter>
<parameter name="factoredType" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000128" namespace="System"/>
</type>
</parameter>
</definition>
</ctor>
<ctorArgument><value kind="TypeOfExpression"><type spec="Class"><definition assemblyName="GameOfLife.Core" name="IsOverCrowdedSpecification" token="2000008" namespace="GameOfLife.Core.Specifications"/>
</type>
</value>
</ctorArgument>
</attribute>
<doc><![CDATA[<summary>A factory for GameOfLife.Core.Specifications.IsOverCrowdedSpecification instances</summary>
]]></doc>
<reference name="GameOfLife.Core" location="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Library\bin\Debug\GameOfLife.Core.dll"/>
<reference name="mscorlib"/>
<reference name="DataAccess.Specification" location="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Library\bin\Debug\DataAccess.Specification.dll"/>
<reference name="GameOfLife.Contracts" location="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Library\bin\Debug\GameOfLife.Contracts.dll"/>
<methodDefinition assemblyName="GameOfLife.Core.Tests" name="Create" static="true"><declaringType assemblyName="GameOfLife.Core.Tests" name="IsOverCrowdedSpecificationFactory" token="ffffffff" namespace="GameOfLife.Core.Specifications"/>
<parameter name="grid_iGrid" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IGrid" token="2000008" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="GameOfLife.Core" name="IsOverCrowdedSpecification" token="2000008" namespace="GameOfLife.Core.Specifications"/>
</resultType>
</methodDefinition>
<target><typeDefinition assemblyName="GameOfLife.Core.Tests" name="IsOverCrowdedSpecificationFactory" token="ffffffff" namespace="GameOfLife.Core.Specifications"/>
</target>
</codeUpdate>
<codeUpdate kind="SelectCodeUpdate" name="Select" selectKind="Body"><target><methodDefinition assemblyName="GameOfLife.Core.Tests" name="Create" static="true"><declaringType assemblyName="GameOfLife.Core.Tests" name="IsOverCrowdedSpecificationFactory" token="ffffffff" namespace="GameOfLife.Core.Specifications"/>
<parameter name="grid_iGrid" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IGrid" token="2000008" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="GameOfLife.Core" name="IsOverCrowdedSpecification" token="2000008" namespace="GameOfLife.Core.Specifications"/>
</resultType>
</methodDefinition>
</target>
</codeUpdate>
</update>
</explorable>
<log level="error" time="2013-03-05 20:55:46Z" wikiTopic="Missing Wiki Topic" category="execution" message="runtime context Microsoft.Pex.Engine.Libraries.MicrosoftVisualBasicLibrary+ProjectErrorRuntimeContextAttribute+Context failed to rollback"><exceptionChain><exception typeDisplayName="InvalidProgramException" source="Microsoft.VisualBasic"><message><![CDATA[Common Language Runtime detected an invalid program.]]></message>
<type spec="Class"><definition assemblyName="mscorlib" name="InvalidProgramException" token="20000f9" namespace="System"/>
</type>
<stackTrace><frame value="  at ProjectData..ctor()" method="ProjectData..ctor()" offset="-1"><method assemblyName="Microsoft.VisualBasic" name=".ctor" token="600053a"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at ProjectData.GetProjectData()" method="ProjectData.GetProjectData()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="GetProjectData" static="true" token="600053c"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</resultType>
</method>
</frame>
<frame value="  at Information.Err()" method="Information.Err()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="Err" static="true" token="60005ee"><declaringType assemblyName="Microsoft.VisualBasic" name="Information" token="2000087" namespace="Microsoft.VisualBasic"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ErrObject" token="200002f" namespace="Microsoft.VisualBasic"/>
</resultType>
</method>
</frame>
<frame value="  at ProjectData.ClearProjectError()" method="ProjectData.ClearProjectError()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="ClearProjectError" static="true" token="6000538"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</method>
</frame>
</stackTrace>
</exception>
</exceptionChain>
</log>
<test name="IsSatisfiedBy" state="success" duration="0.00"/>
<log level="warning" time="2013-03-05 20:55:47Z" wikiTopic="Usable Type Guessed" category="domains" message="will use GameOfLife.Core.Grid as IGrid"><codeUpdate kind="AddOrUpdateAttributeCodeUpdate" name="Add [PexUseType]" fileNameHint="PexAssemblyInfo"><attributeCtor><definition assemblyName="Microsoft.Pex.Framework" name=".ctor" token="6000b6d"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexUseTypeAttribute" token="200023e" namespace="Microsoft.Pex.Framework.Using"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.Pex.Framework" name="PexUseTypeAttribute" token="200023e" namespace="Microsoft.Pex.Framework.Using"/>
</type>
</parameter>
<parameter name="targetType" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000128" namespace="System"/>
</type>
</parameter>
</definition>
</attributeCtor>
<argument><value kind="TypeOfExpression"><type spec="Class"><definition assemblyName="GameOfLife.Core" name="Grid" token="2000006" namespace="GameOfLife.Core"/>
</type>
</value>
</argument>
<target><assembly name="GameOfLife.Core.Tests"/>
</target>
</codeUpdate>
</log>
<log level="error" time="2013-03-05 20:55:47Z" wikiTopic="Missing Wiki Topic" category="execution" message="runtime context Microsoft.Pex.Engine.Libraries.MicrosoftVisualBasicLibrary+ProjectErrorRuntimeContextAttribute+Context failed to open"><exceptionChain><exception typeDisplayName="InvalidProgramException" source="Microsoft.VisualBasic"><message><![CDATA[Common Language Runtime detected an invalid program.]]></message>
<type spec="Class"><definition assemblyName="mscorlib" name="InvalidProgramException" token="20000f9" namespace="System"/>
</type>
<stackTrace><frame value="  at ProjectData..ctor()" method="ProjectData..ctor()" offset="-1"><method assemblyName="Microsoft.VisualBasic" name=".ctor" token="600053a"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at ProjectData.GetProjectData()" method="ProjectData.GetProjectData()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="GetProjectData" static="true" token="600053c"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</resultType>
</method>
</frame>
<frame value="  at Information.Err()" method="Information.Err()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="Err" static="true" token="60005ee"><declaringType assemblyName="Microsoft.VisualBasic" name="Information" token="2000087" namespace="Microsoft.VisualBasic"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ErrObject" token="200002f" namespace="Microsoft.VisualBasic"/>
</resultType>
</method>
</frame>
<frame value="  at ProjectData.ClearProjectError()" method="ProjectData.ClearProjectError()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="ClearProjectError" static="true" token="6000538"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</method>
</frame>
</stackTrace>
</exception>
</exceptionChain>
</log>
<log level="error" time="2013-03-05 20:55:47Z" wikiTopic="Missing Wiki Topic" category="execution" message="runtime context Microsoft.Pex.Engine.Libraries.MicrosoftVisualBasicLibrary+ProjectErrorRuntimeContextAttribute+Context failed to rollback"><exceptionChain><exception typeDisplayName="InvalidProgramException" source="Microsoft.VisualBasic"><message><![CDATA[Common Language Runtime detected an invalid program.]]></message>
<type spec="Class"><definition assemblyName="mscorlib" name="InvalidProgramException" token="20000f9" namespace="System"/>
</type>
<stackTrace><frame value="  at ProjectData..ctor()" method="ProjectData..ctor()" offset="-1"><method assemblyName="Microsoft.VisualBasic" name=".ctor" token="600053a"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at ProjectData.GetProjectData()" method="ProjectData.GetProjectData()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="GetProjectData" static="true" token="600053c"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</resultType>
</method>
</frame>
<frame value="  at Information.Err()" method="Information.Err()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="Err" static="true" token="60005ee"><declaringType assemblyName="Microsoft.VisualBasic" name="Information" token="2000087" namespace="Microsoft.VisualBasic"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ErrObject" token="200002f" namespace="Microsoft.VisualBasic"/>
</resultType>
</method>
</frame>
<frame value="  at ProjectData.ClearProjectError()" method="ProjectData.ClearProjectError()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="ClearProjectError" static="true" token="6000538"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</method>
</frame>
</stackTrace>
</exception>
</exceptionChain>
</log>
<test name="IsSatisfiedBy" state="success" duration="0.04"/>
<generatedTest id="9b33b600-d0ba-4212-9026-251ee97768ff" index="1" run="2" status="normaltermination" explorationIsDynamicCode="true" generated="true" new="true" assemblyName="GameOfLife.Core.Tests" name="IsSatisfiedBy719"><declaringType assemblyName="GameOfLife.Core.Tests" name="IsOverCrowdedSpecificationTest" token="ffffffff" namespace="GameOfLife.Core.Specifications"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Core.Tests" name="IsOverCrowdedSpecificationTest" token="ffffffff" namespace="GameOfLife.Core.Specifications"/>
</type>
</parameter>
<rcov name="Block" dcov="2" dtot="16" acov="2" atot="16"/>
<rcov name="asserts" dcov="0" dtot="0" acov="0" atot="0"/>
<value name="target">new IsOverCrowdedSpecification{}</value>
<value name="currentCell">null</value>
<value name="result(target)">new IsOverCrowdedSpecification{}</value>
<value name="result">false</value>
<code><![CDATA[IsOverCrowdedSpecification isOverCrowdedSpecification;
bool b;
isOverCrowdedSpecification = new IsOverCrowdedSpecification((IGrid)null);
b = this.IsSatisfiedBy(isOverCrowdedSpecification, (ICell)null);
Assert.AreEqual<bool>(false, b);
Assert.IsNotNull((object)isOverCrowdedSpecification);
]]></code>
<methodCode imports="GameOfLife.Contracts;Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(IsOverCrowdedSpecificationTest))]
public void IsSatisfiedBy719()
{
    IsOverCrowdedSpecification isOverCrowdedSpecification;
    bool b;
    isOverCrowdedSpecification = new IsOverCrowdedSpecification((IGrid)null);
    b = this.IsSatisfiedBy(isOverCrowdedSpecification, (ICell)null);
    Assert.AreEqual<bool>(false, b);
    Assert.IsNotNull((object)isOverCrowdedSpecification);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="GameOfLife.Core.Tests"/>
<reference name="GameOfLife.Core" location="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Library\bin\Debug\GameOfLife.Core.dll"/>
<reference name="DataAccess.Specification" location="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Library\bin\Debug\DataAccess.Specification.dll"/>
<reference name="GameOfLife.Contracts" location="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Library\bin\Debug\GameOfLife.Contracts.dll"/>
<pathCondition><![CDATA[return target != (IsOverCrowdedSpecification)null && methodof(target.IsSatisfiedBy) == methodof(IsOverCrowdedSpecification.IsSatisfiedBy) && currentCell == (ICell)null;
]]></pathCondition>
</generatedTest>
<log level="message" time="2013-03-05 20:55:47Z" category="coverage" message="coverage increased from 0 to 2 blocks (+2) after flipping GameOfLife.Core.Specifications.IsOverCrowdedSpecificationTest.IsSatisfiedBy at 0x0002"/>
<coverage domain="usercodeundertest" unit="block" covered="2" total="16" coveredRatio="0.125"/>
<sourceCoverage xml="cov\e365\cov.xml" html="cov\e365\cov.html"/>
<result name="IsSatisfiedBy(IsOverCrowdedSpecification, ICell)" state="failed" duration="0.55"/>
<duration start="2013-03-05 20:55:46Z" end="2013-03-05 20:55:47Z" seconds="0.55"/>
</exploration>
<coverage domain="usercodeundertest" unit="block" covered="5" total="16" coveredRatio="0.3125"/>
<sourceCoverage xml="cov\t905\cov.xml" html="cov\t905\cov.html"/>
<duration start="2013-03-05 20:55:46Z" end="2013-03-05 20:55:47Z" seconds="0.87"/>
</fixture>
<fixture name="IsReproduciableSpecificationTest" type="GameOfLife.Core.Specifications.IsReproduciableSpecificationTest" typeName="IsReproduciableSpecificationTest" token="2000004" href="fix\GameOfLife.Core.Tests.906.html"><type spec="Class"><definition assemblyName="GameOfLife.Core.Tests" name="IsReproduciableSpecificationTest" token="2000004" namespace="GameOfLife.Core.Specifications"/>
</type>
<settings typeUnderTest="GameOfLife.Core.Specifications.IsReproduciableSpecification"/>
<exploration shortName="Constructor(IGrid)" fullName="GameOfLife.Core.Specifications.IsReproduciableSpecificationTest.Constructor(IGrid)" isDynamicCode="true"><method><definition assemblyName="GameOfLife.Core.Tests" name="Constructor" token="6000006"><declaringType assemblyName="GameOfLife.Core.Tests" name="IsReproduciableSpecificationTest" token="2000004" namespace="GameOfLife.Core.Specifications"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Core.Tests" name="IsReproduciableSpecificationTest" token="2000004" namespace="GameOfLife.Core.Specifications"/>
</type>
</parameter>
<parameter name="grid" position="1"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IGrid" token="2000008" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="GameOfLife.Core" name="IsReproduciableSpecification" token="2000004" namespace="GameOfLife.Core.Specifications"/>
</resultType>
</definition>
</method>
<target><methodDefinition assemblyName="GameOfLife.Core" name=".ctor" token="6000006"><declaringType assemblyName="GameOfLife.Core" name="IsReproduciableSpecification" token="2000004" namespace="GameOfLife.Core.Specifications"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Core" name="IsReproduciableSpecification" token="2000004" namespace="GameOfLife.Core.Specifications"/>
</type>
</parameter>
<parameter name="grid" position="1"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IGrid" token="2000008" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
</methodDefinition>
</target>
<memberUnderTest assemblyName="GameOfLife.Core" name=".ctor" token="6000006"><declaringType assemblyName="GameOfLife.Core" name="IsReproduciableSpecification" token="2000004" namespace="GameOfLife.Core.Specifications"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Core" name="IsReproduciableSpecification" token="2000004" namespace="GameOfLife.Core.Specifications"/>
</type>
</parameter>
<parameter name="grid" position="1"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IGrid" token="2000008" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
</memberUnderTest>
<log level="error" time="2013-03-05 20:55:47Z" wikiTopic="Missing Wiki Topic" category="execution" message="runtime context Microsoft.Pex.Engine.Libraries.MicrosoftVisualBasicLibrary+ProjectErrorRuntimeContextAttribute+Context failed to open"><exceptionChain><exception typeDisplayName="InvalidProgramException" source="Microsoft.VisualBasic"><message><![CDATA[Common Language Runtime detected an invalid program.]]></message>
<type spec="Class"><definition assemblyName="mscorlib" name="InvalidProgramException" token="20000f9" namespace="System"/>
</type>
<stackTrace><frame value="  at ProjectData..ctor()" method="ProjectData..ctor()" offset="-1"><method assemblyName="Microsoft.VisualBasic" name=".ctor" token="600053a"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at ProjectData.GetProjectData()" method="ProjectData.GetProjectData()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="GetProjectData" static="true" token="600053c"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</resultType>
</method>
</frame>
<frame value="  at Information.Err()" method="Information.Err()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="Err" static="true" token="60005ee"><declaringType assemblyName="Microsoft.VisualBasic" name="Information" token="2000087" namespace="Microsoft.VisualBasic"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ErrObject" token="200002f" namespace="Microsoft.VisualBasic"/>
</resultType>
</method>
</frame>
<frame value="  at ProjectData.ClearProjectError()" method="ProjectData.ClearProjectError()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="ClearProjectError" static="true" token="6000538"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</method>
</frame>
</stackTrace>
</exception>
</exceptionChain>
</log>
<log level="error" time="2013-03-05 20:55:47Z" wikiTopic="Missing Wiki Topic" category="execution" message="runtime context Microsoft.Pex.Engine.Libraries.MicrosoftVisualBasicLibrary+ProjectErrorRuntimeContextAttribute+Context failed to rollback"><exceptionChain><exception typeDisplayName="InvalidProgramException" source="Microsoft.VisualBasic"><message><![CDATA[Common Language Runtime detected an invalid program.]]></message>
<type spec="Class"><definition assemblyName="mscorlib" name="InvalidProgramException" token="20000f9" namespace="System"/>
</type>
<stackTrace><frame value="  at ProjectData..ctor()" method="ProjectData..ctor()" offset="-1"><method assemblyName="Microsoft.VisualBasic" name=".ctor" token="600053a"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at ProjectData.GetProjectData()" method="ProjectData.GetProjectData()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="GetProjectData" static="true" token="600053c"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</resultType>
</method>
</frame>
<frame value="  at Information.Err()" method="Information.Err()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="Err" static="true" token="60005ee"><declaringType assemblyName="Microsoft.VisualBasic" name="Information" token="2000087" namespace="Microsoft.VisualBasic"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ErrObject" token="200002f" namespace="Microsoft.VisualBasic"/>
</resultType>
</method>
</frame>
<frame value="  at ProjectData.ClearProjectError()" method="ProjectData.ClearProjectError()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="ClearProjectError" static="true" token="6000538"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</method>
</frame>
</stackTrace>
</exception>
</exceptionChain>
</log>
<test name="Constructor" state="success" duration="0.01"/>
<generatedTest id="f47abf18-4f70-4f80-a1c6-ce1d529721c1" index="1" run="1" status="normaltermination" explorationIsDynamicCode="true" generated="true" new="true" assemblyName="GameOfLife.Core.Tests" name="Constructor399"><declaringType assemblyName="GameOfLife.Core.Tests" name="IsReproduciableSpecificationTest" token="ffffffff" namespace="GameOfLife.Core.Specifications"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Core.Tests" name="IsReproduciableSpecificationTest" token="ffffffff" namespace="GameOfLife.Core.Specifications"/>
</type>
</parameter>
<rcov name="Block" dcov="3" dtot="3" acov="3" atot="3"/>
<rcov name="asserts" dcov="0" dtot="0" acov="0" atot="0"/>
<value name="grid">null</value>
<value name="result">new IsReproduciableSpecification{}</value>
<code><![CDATA[IsReproduciableSpecification isReproduciableSpecification;
isReproduciableSpecification = this.Constructor((IGrid)null);
Assert.IsNotNull((object)isReproduciableSpecification);
]]></code>
<methodCode imports="GameOfLife.Contracts;Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(IsReproduciableSpecificationTest))]
public void Constructor399()
{
    IsReproduciableSpecification isReproduciableSpecification;
    isReproduciableSpecification = this.Constructor((IGrid)null);
    Assert.IsNotNull((object)isReproduciableSpecification);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="GameOfLife.Core.Tests"/>
<reference name="GameOfLife.Core" location="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Library\bin\Debug\GameOfLife.Core.dll"/>
<reference name="DataAccess.Specification" location="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Library\bin\Debug\DataAccess.Specification.dll"/>
<reference name="GameOfLife.Contracts" location="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Library\bin\Debug\GameOfLife.Contracts.dll"/>
</generatedTest>
<coverage domain="usercodeundertest" unit="block" covered="3" total="3" coveredRatio="1"/>
<sourceCoverage xml="cov\e368\cov.xml" html="cov\e368\cov.html"/>
<result name="Constructor(IGrid)" state="failed" duration="0.27"/>
<duration start="2013-03-05 20:55:47Z" end="2013-03-05 20:55:47Z" seconds="0.27"/>
</exploration>
<exploration shortName="IsSatisfiedBy(IsReproduciableSpecification, ICell)" fullName="GameOfLife.Core.Specifications.IsReproduciableSpecificationTest.IsSatisfiedBy(IsReproduciableSpecification, ICell)" isDynamicCode="true"><method><definition assemblyName="GameOfLife.Core.Tests" name="IsSatisfiedBy" token="6000007"><declaringType assemblyName="GameOfLife.Core.Tests" name="IsReproduciableSpecificationTest" token="2000004" namespace="GameOfLife.Core.Specifications"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Core.Tests" name="IsReproduciableSpecificationTest" token="2000004" namespace="GameOfLife.Core.Specifications"/>
</type>
</parameter>
<parameter name="target" position="1"><type spec="Class"><definition assemblyName="GameOfLife.Core" name="IsReproduciableSpecification" token="2000004" namespace="GameOfLife.Core.Specifications"/>
</type>
</parameter>
<parameter name="currentCell" position="2"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="ICell" token="2000002" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
<resultType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009e" namespace="System"/>
</resultType>
</definition>
</method>
<target><methodDefinition assemblyName="GameOfLife.Core" name="IsSatisfiedBy" token="6000007"><declaringType assemblyName="GameOfLife.Core" name="IsReproduciableSpecification" token="2000004" namespace="GameOfLife.Core.Specifications"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Core" name="IsReproduciableSpecification" token="2000004" namespace="GameOfLife.Core.Specifications"/>
</type>
</parameter>
<parameter name="currentCell" position="1"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="ICell" token="2000002" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
<resultType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009e" namespace="System"/>
</resultType>
</methodDefinition>
</target>
<memberUnderTest assemblyName="GameOfLife.Core" name="IsSatisfiedBy" token="6000007"><declaringType assemblyName="GameOfLife.Core" name="IsReproduciableSpecification" token="2000004" namespace="GameOfLife.Core.Specifications"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Core" name="IsReproduciableSpecification" token="2000004" namespace="GameOfLife.Core.Specifications"/>
</type>
</parameter>
<parameter name="currentCell" position="1"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="ICell" token="2000002" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
<resultType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009e" namespace="System"/>
</resultType>
</memberUnderTest>
<log level="error" time="2013-03-05 20:55:47Z" wikiTopic="Missing Wiki Topic" category="execution" message="runtime context Microsoft.Pex.Engine.Libraries.MicrosoftVisualBasicLibrary+ProjectErrorRuntimeContextAttribute+Context failed to open"><exceptionChain><exception typeDisplayName="InvalidProgramException" source="Microsoft.VisualBasic"><message><![CDATA[Common Language Runtime detected an invalid program.]]></message>
<type spec="Class"><definition assemblyName="mscorlib" name="InvalidProgramException" token="20000f9" namespace="System"/>
</type>
<stackTrace><frame value="  at ProjectData..ctor()" method="ProjectData..ctor()" offset="-1"><method assemblyName="Microsoft.VisualBasic" name=".ctor" token="600053a"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at ProjectData.GetProjectData()" method="ProjectData.GetProjectData()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="GetProjectData" static="true" token="600053c"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</resultType>
</method>
</frame>
<frame value="  at Information.Err()" method="Information.Err()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="Err" static="true" token="60005ee"><declaringType assemblyName="Microsoft.VisualBasic" name="Information" token="2000087" namespace="Microsoft.VisualBasic"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ErrObject" token="200002f" namespace="Microsoft.VisualBasic"/>
</resultType>
</method>
</frame>
<frame value="  at ProjectData.ClearProjectError()" method="ProjectData.ClearProjectError()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="ClearProjectError" static="true" token="6000538"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</method>
</frame>
</stackTrace>
</exception>
</exceptionChain>
</log>
<explorable title="guessed how to create GameOfLife.Core.Specifications.IsReproduciableSpecification" kind="guessedclass" isExplorableTypeExported="true"><explorableType spec="Class"><definition assemblyName="GameOfLife.Core" name="IsReproduciableSpecification" token="2000004" namespace="GameOfLife.Core.Specifications"/>
</explorableType>
<testAssemblyName name="GameOfLife.Core.Tests"/>
<update kind="CollectionCodeUpdate" name="Accept/Edit Factory"><codeUpdate kind="AddTypeCodeUpdate" name="Add type" fileNameHint="Factories\IsReproduciableSpecificationFactory" abstract="true" sealed="true" visibility="Public"><doc><![CDATA[<summary>A factory for GameOfLife.Core.Specifications.IsReproduciableSpecification instances</summary>
]]></doc>
<reference name="mscorlib"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="GameOfLife.Core" location="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Library\bin\Debug\GameOfLife.Core.dll"/>
<reference name="GameOfLife.Contracts" location="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Library\bin\Debug\GameOfLife.Contracts.dll"/>
<typeDefinition assemblyName="GameOfLife.Core.Tests" name="IsReproduciableSpecificationFactory" token="ffffffff" namespace="GameOfLife.Core.Specifications"/>
<baseType spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</baseType>
<target><assembly name="GameOfLife.Core.Tests"/>
</target>
</codeUpdate>
<codeUpdate kind="AddMethodCodeUpdate" name="Add method" visibility="Public"><attribute><ctor><definition assemblyName="Microsoft.Pex.Framework" name=".ctor" token="6000e50"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexFactoryMethodAttribute" token="200027d" namespace="Microsoft.Pex.Framework"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.Pex.Framework" name="PexFactoryMethodAttribute" token="200027d" namespace="Microsoft.Pex.Framework"/>
</type>
</parameter>
<parameter name="factoredType" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000128" namespace="System"/>
</type>
</parameter>
</definition>
</ctor>
<ctorArgument><value kind="TypeOfExpression"><type spec="Class"><definition assemblyName="GameOfLife.Core" name="IsReproduciableSpecification" token="2000004" namespace="GameOfLife.Core.Specifications"/>
</type>
</value>
</ctorArgument>
</attribute>
<doc><![CDATA[<summary>A factory for GameOfLife.Core.Specifications.IsReproduciableSpecification instances</summary>
]]></doc>
<reference name="GameOfLife.Core" location="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Library\bin\Debug\GameOfLife.Core.dll"/>
<reference name="mscorlib"/>
<reference name="DataAccess.Specification" location="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Library\bin\Debug\DataAccess.Specification.dll"/>
<reference name="GameOfLife.Contracts" location="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Library\bin\Debug\GameOfLife.Contracts.dll"/>
<methodDefinition assemblyName="GameOfLife.Core.Tests" name="Create" static="true"><declaringType assemblyName="GameOfLife.Core.Tests" name="IsReproduciableSpecificationFactory" token="ffffffff" namespace="GameOfLife.Core.Specifications"/>
<parameter name="grid_iGrid" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IGrid" token="2000008" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="GameOfLife.Core" name="IsReproduciableSpecification" token="2000004" namespace="GameOfLife.Core.Specifications"/>
</resultType>
</methodDefinition>
<target><typeDefinition assemblyName="GameOfLife.Core.Tests" name="IsReproduciableSpecificationFactory" token="ffffffff" namespace="GameOfLife.Core.Specifications"/>
</target>
</codeUpdate>
<codeUpdate kind="SelectCodeUpdate" name="Select" selectKind="Body"><target><methodDefinition assemblyName="GameOfLife.Core.Tests" name="Create" static="true"><declaringType assemblyName="GameOfLife.Core.Tests" name="IsReproduciableSpecificationFactory" token="ffffffff" namespace="GameOfLife.Core.Specifications"/>
<parameter name="grid_iGrid" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IGrid" token="2000008" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="GameOfLife.Core" name="IsReproduciableSpecification" token="2000004" namespace="GameOfLife.Core.Specifications"/>
</resultType>
</methodDefinition>
</target>
</codeUpdate>
</update>
</explorable>
<log level="error" time="2013-03-05 20:55:47Z" wikiTopic="Missing Wiki Topic" category="execution" message="runtime context Microsoft.Pex.Engine.Libraries.MicrosoftVisualBasicLibrary+ProjectErrorRuntimeContextAttribute+Context failed to rollback"><exceptionChain><exception typeDisplayName="InvalidProgramException" source="Microsoft.VisualBasic"><message><![CDATA[Common Language Runtime detected an invalid program.]]></message>
<type spec="Class"><definition assemblyName="mscorlib" name="InvalidProgramException" token="20000f9" namespace="System"/>
</type>
<stackTrace><frame value="  at ProjectData..ctor()" method="ProjectData..ctor()" offset="-1"><method assemblyName="Microsoft.VisualBasic" name=".ctor" token="600053a"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at ProjectData.GetProjectData()" method="ProjectData.GetProjectData()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="GetProjectData" static="true" token="600053c"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</resultType>
</method>
</frame>
<frame value="  at Information.Err()" method="Information.Err()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="Err" static="true" token="60005ee"><declaringType assemblyName="Microsoft.VisualBasic" name="Information" token="2000087" namespace="Microsoft.VisualBasic"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ErrObject" token="200002f" namespace="Microsoft.VisualBasic"/>
</resultType>
</method>
</frame>
<frame value="  at ProjectData.ClearProjectError()" method="ProjectData.ClearProjectError()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="ClearProjectError" static="true" token="6000538"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</method>
</frame>
</stackTrace>
</exception>
</exceptionChain>
</log>
<test name="IsSatisfiedBy" state="success" duration="0.00"/>
<log level="error" time="2013-03-05 20:55:47Z" wikiTopic="Missing Wiki Topic" category="execution" message="runtime context Microsoft.Pex.Engine.Libraries.MicrosoftVisualBasicLibrary+ProjectErrorRuntimeContextAttribute+Context failed to open"><exceptionChain><exception typeDisplayName="InvalidProgramException" source="Microsoft.VisualBasic"><message><![CDATA[Common Language Runtime detected an invalid program.]]></message>
<type spec="Class"><definition assemblyName="mscorlib" name="InvalidProgramException" token="20000f9" namespace="System"/>
</type>
<stackTrace><frame value="  at ProjectData..ctor()" method="ProjectData..ctor()" offset="-1"><method assemblyName="Microsoft.VisualBasic" name=".ctor" token="600053a"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at ProjectData.GetProjectData()" method="ProjectData.GetProjectData()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="GetProjectData" static="true" token="600053c"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</resultType>
</method>
</frame>
<frame value="  at Information.Err()" method="Information.Err()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="Err" static="true" token="60005ee"><declaringType assemblyName="Microsoft.VisualBasic" name="Information" token="2000087" namespace="Microsoft.VisualBasic"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ErrObject" token="200002f" namespace="Microsoft.VisualBasic"/>
</resultType>
</method>
</frame>
<frame value="  at ProjectData.ClearProjectError()" method="ProjectData.ClearProjectError()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="ClearProjectError" static="true" token="6000538"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</method>
</frame>
</stackTrace>
</exception>
</exceptionChain>
</log>
<log level="error" time="2013-03-05 20:55:47Z" wikiTopic="Missing Wiki Topic" category="execution" message="runtime context Microsoft.Pex.Engine.Libraries.MicrosoftVisualBasicLibrary+ProjectErrorRuntimeContextAttribute+Context failed to rollback"><exceptionChain><exception typeDisplayName="InvalidProgramException" source="Microsoft.VisualBasic"><message><![CDATA[Common Language Runtime detected an invalid program.]]></message>
<type spec="Class"><definition assemblyName="mscorlib" name="InvalidProgramException" token="20000f9" namespace="System"/>
</type>
<stackTrace><frame value="  at ProjectData..ctor()" method="ProjectData..ctor()" offset="-1"><method assemblyName="Microsoft.VisualBasic" name=".ctor" token="600053a"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at ProjectData.GetProjectData()" method="ProjectData.GetProjectData()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="GetProjectData" static="true" token="600053c"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</resultType>
</method>
</frame>
<frame value="  at Information.Err()" method="Information.Err()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="Err" static="true" token="60005ee"><declaringType assemblyName="Microsoft.VisualBasic" name="Information" token="2000087" namespace="Microsoft.VisualBasic"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ErrObject" token="200002f" namespace="Microsoft.VisualBasic"/>
</resultType>
</method>
</frame>
<frame value="  at ProjectData.ClearProjectError()" method="ProjectData.ClearProjectError()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="ClearProjectError" static="true" token="6000538"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</method>
</frame>
</stackTrace>
</exception>
</exceptionChain>
</log>
<test name="IsSatisfiedBy" state="success" duration="0.01"/>
<generatedTest id="773d30fb-e392-4543-92ec-79cb554982f6" index="1" run="2" status="normaltermination" explorationIsDynamicCode="true" generated="true" new="true" assemblyName="GameOfLife.Core.Tests" name="IsSatisfiedBy10"><declaringType assemblyName="GameOfLife.Core.Tests" name="IsReproduciableSpecificationTest" token="ffffffff" namespace="GameOfLife.Core.Specifications"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Core.Tests" name="IsReproduciableSpecificationTest" token="ffffffff" namespace="GameOfLife.Core.Specifications"/>
</type>
</parameter>
<rcov name="Block" dcov="2" dtot="16" acov="2" atot="16"/>
<rcov name="asserts" dcov="0" dtot="0" acov="0" atot="0"/>
<value name="target">new IsReproduciableSpecification{}</value>
<value name="currentCell">null</value>
<value name="result(target)">new IsReproduciableSpecification{}</value>
<value name="result">false</value>
<code><![CDATA[IsReproduciableSpecification isReproduciableSpecification;
bool b;
isReproduciableSpecification = new IsReproduciableSpecification((IGrid)null);
b = this.IsSatisfiedBy(isReproduciableSpecification, (ICell)null);
Assert.AreEqual<bool>(false, b);
Assert.IsNotNull((object)isReproduciableSpecification);
]]></code>
<methodCode imports="GameOfLife.Contracts;Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(IsReproduciableSpecificationTest))]
public void IsSatisfiedBy10()
{
    IsReproduciableSpecification isReproduciableSpecification;
    bool b;
    isReproduciableSpecification = new IsReproduciableSpecification((IGrid)null);
    b = this.IsSatisfiedBy(isReproduciableSpecification, (ICell)null);
    Assert.AreEqual<bool>(false, b);
    Assert.IsNotNull((object)isReproduciableSpecification);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="GameOfLife.Core.Tests"/>
<reference name="GameOfLife.Core" location="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Library\bin\Debug\GameOfLife.Core.dll"/>
<reference name="DataAccess.Specification" location="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Library\bin\Debug\DataAccess.Specification.dll"/>
<reference name="GameOfLife.Contracts" location="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Library\bin\Debug\GameOfLife.Contracts.dll"/>
<pathCondition><![CDATA[return target != (IsReproduciableSpecification)null && methodof(target.IsSatisfiedBy) == methodof(IsReproduciableSpecification.IsSatisfiedBy) && currentCell == (ICell)null;
]]></pathCondition>
</generatedTest>
<log level="message" time="2013-03-05 20:55:47Z" category="coverage" message="coverage increased from 0 to 2 blocks (+2) after flipping GameOfLife.Core.Specifications.IsReproduciableSpecificationTest.IsSatisfiedBy at 0x0002"/>
<coverage domain="usercodeundertest" unit="block" covered="2" total="16" coveredRatio="0.125"/>
<sourceCoverage xml="cov\e370\cov.xml" html="cov\e370\cov.html"/>
<result name="IsSatisfiedBy(IsReproduciableSpecification, ICell)" state="failed" duration="0.39"/>
<duration start="2013-03-05 20:55:47Z" end="2013-03-05 20:55:48Z" seconds="0.39"/>
</exploration>
<coverage domain="usercodeundertest" unit="block" covered="5" total="16" coveredRatio="0.3125"/>
<sourceCoverage xml="cov\t906\cov.xml" html="cov\t906\cov.html"/>
<duration start="2013-03-05 20:55:47Z" end="2013-03-05 20:55:48Z" seconds="0.68"/>
</fixture>
<fixture name="IsSurvivableSpecificationTest" type="GameOfLife.Core.Specifications.IsSurvivableSpecificationTest" typeName="IsSurvivableSpecificationTest" token="2000003" href="fix\GameOfLife.Core.Tests.907.html"><type spec="Class"><definition assemblyName="GameOfLife.Core.Tests" name="IsSurvivableSpecificationTest" token="2000003" namespace="GameOfLife.Core.Specifications"/>
</type>
<settings typeUnderTest="GameOfLife.Core.Specifications.IsSurvivableSpecification"/>
<exploration shortName="Constructor(IGrid)" fullName="GameOfLife.Core.Specifications.IsSurvivableSpecificationTest.Constructor(IGrid)" isDynamicCode="true"><method><definition assemblyName="GameOfLife.Core.Tests" name="Constructor" token="6000003"><declaringType assemblyName="GameOfLife.Core.Tests" name="IsSurvivableSpecificationTest" token="2000003" namespace="GameOfLife.Core.Specifications"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Core.Tests" name="IsSurvivableSpecificationTest" token="2000003" namespace="GameOfLife.Core.Specifications"/>
</type>
</parameter>
<parameter name="grid" position="1"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IGrid" token="2000008" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="GameOfLife.Core" name="IsSurvivableSpecification" token="2000003" namespace="GameOfLife.Core.Specifications"/>
</resultType>
</definition>
</method>
<target><methodDefinition assemblyName="GameOfLife.Core" name=".ctor" token="6000003"><declaringType assemblyName="GameOfLife.Core" name="IsSurvivableSpecification" token="2000003" namespace="GameOfLife.Core.Specifications"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Core" name="IsSurvivableSpecification" token="2000003" namespace="GameOfLife.Core.Specifications"/>
</type>
</parameter>
<parameter name="grid" position="1"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IGrid" token="2000008" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
</methodDefinition>
</target>
<memberUnderTest assemblyName="GameOfLife.Core" name=".ctor" token="6000003"><declaringType assemblyName="GameOfLife.Core" name="IsSurvivableSpecification" token="2000003" namespace="GameOfLife.Core.Specifications"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Core" name="IsSurvivableSpecification" token="2000003" namespace="GameOfLife.Core.Specifications"/>
</type>
</parameter>
<parameter name="grid" position="1"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IGrid" token="2000008" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
</memberUnderTest>
<log level="message" time="2013-03-05 20:55:48Z" category="progress" message="    0 runs"/>
<log level="error" time="2013-03-05 20:55:48Z" wikiTopic="Missing Wiki Topic" category="execution" message="runtime context Microsoft.Pex.Engine.Libraries.MicrosoftVisualBasicLibrary+ProjectErrorRuntimeContextAttribute+Context failed to open"><exceptionChain><exception typeDisplayName="InvalidProgramException" source="Microsoft.VisualBasic"><message><![CDATA[Common Language Runtime detected an invalid program.]]></message>
<type spec="Class"><definition assemblyName="mscorlib" name="InvalidProgramException" token="20000f9" namespace="System"/>
</type>
<stackTrace><frame value="  at ProjectData..ctor()" method="ProjectData..ctor()" offset="-1"><method assemblyName="Microsoft.VisualBasic" name=".ctor" token="600053a"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at ProjectData.GetProjectData()" method="ProjectData.GetProjectData()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="GetProjectData" static="true" token="600053c"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</resultType>
</method>
</frame>
<frame value="  at Information.Err()" method="Information.Err()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="Err" static="true" token="60005ee"><declaringType assemblyName="Microsoft.VisualBasic" name="Information" token="2000087" namespace="Microsoft.VisualBasic"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ErrObject" token="200002f" namespace="Microsoft.VisualBasic"/>
</resultType>
</method>
</frame>
<frame value="  at ProjectData.ClearProjectError()" method="ProjectData.ClearProjectError()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="ClearProjectError" static="true" token="6000538"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</method>
</frame>
</stackTrace>
</exception>
</exceptionChain>
</log>
<log level="error" time="2013-03-05 20:55:48Z" wikiTopic="Missing Wiki Topic" category="execution" message="runtime context Microsoft.Pex.Engine.Libraries.MicrosoftVisualBasicLibrary+ProjectErrorRuntimeContextAttribute+Context failed to rollback"><exceptionChain><exception typeDisplayName="InvalidProgramException" source="Microsoft.VisualBasic"><message><![CDATA[Common Language Runtime detected an invalid program.]]></message>
<type spec="Class"><definition assemblyName="mscorlib" name="InvalidProgramException" token="20000f9" namespace="System"/>
</type>
<stackTrace><frame value="  at ProjectData..ctor()" method="ProjectData..ctor()" offset="-1"><method assemblyName="Microsoft.VisualBasic" name=".ctor" token="600053a"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at ProjectData.GetProjectData()" method="ProjectData.GetProjectData()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="GetProjectData" static="true" token="600053c"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</resultType>
</method>
</frame>
<frame value="  at Information.Err()" method="Information.Err()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="Err" static="true" token="60005ee"><declaringType assemblyName="Microsoft.VisualBasic" name="Information" token="2000087" namespace="Microsoft.VisualBasic"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ErrObject" token="200002f" namespace="Microsoft.VisualBasic"/>
</resultType>
</method>
</frame>
<frame value="  at ProjectData.ClearProjectError()" method="ProjectData.ClearProjectError()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="ClearProjectError" static="true" token="6000538"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</method>
</frame>
</stackTrace>
</exception>
</exceptionChain>
</log>
<test name="Constructor" state="success" duration="0.00"/>
<generatedTest id="2b786e48-475b-4fa6-a14f-e579ca766ace" index="1" run="1" status="normaltermination" explorationIsDynamicCode="true" generated="true" new="true" assemblyName="GameOfLife.Core.Tests" name="Constructor854"><declaringType assemblyName="GameOfLife.Core.Tests" name="IsSurvivableSpecificationTest" token="ffffffff" namespace="GameOfLife.Core.Specifications"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Core.Tests" name="IsSurvivableSpecificationTest" token="ffffffff" namespace="GameOfLife.Core.Specifications"/>
</type>
</parameter>
<rcov name="Block" dcov="3" dtot="3" acov="3" atot="3"/>
<rcov name="asserts" dcov="0" dtot="0" acov="0" atot="0"/>
<value name="grid">null</value>
<value name="result">new IsSurvivableSpecification{}</value>
<code><![CDATA[IsSurvivableSpecification isSurvivableSpecification;
isSurvivableSpecification = this.Constructor((IGrid)null);
Assert.IsNotNull((object)isSurvivableSpecification);
]]></code>
<methodCode imports="GameOfLife.Contracts;Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(IsSurvivableSpecificationTest))]
public void Constructor854()
{
    IsSurvivableSpecification isSurvivableSpecification;
    isSurvivableSpecification = this.Constructor((IGrid)null);
    Assert.IsNotNull((object)isSurvivableSpecification);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="GameOfLife.Core.Tests"/>
<reference name="GameOfLife.Core" location="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Library\bin\Debug\GameOfLife.Core.dll"/>
<reference name="DataAccess.Specification" location="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Library\bin\Debug\DataAccess.Specification.dll"/>
<reference name="GameOfLife.Contracts" location="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Library\bin\Debug\GameOfLife.Contracts.dll"/>
</generatedTest>
<coverage domain="usercodeundertest" unit="block" covered="3" total="3" coveredRatio="1"/>
<sourceCoverage xml="cov\e373\cov.xml" html="cov\e373\cov.html"/>
<result name="Constructor(IGrid)" state="failed" duration="0.22"/>
<duration start="2013-03-05 20:55:48Z" end="2013-03-05 20:55:48Z" seconds="0.22"/>
</exploration>
<exploration shortName="IsSatisfiedBy(IsSurvivableSpecification, ICell)" fullName="GameOfLife.Core.Specifications.IsSurvivableSpecificationTest.IsSatisfiedBy(IsSurvivableSpecification, ICell)" isDynamicCode="true"><method><definition assemblyName="GameOfLife.Core.Tests" name="IsSatisfiedBy" token="6000004"><declaringType assemblyName="GameOfLife.Core.Tests" name="IsSurvivableSpecificationTest" token="2000003" namespace="GameOfLife.Core.Specifications"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Core.Tests" name="IsSurvivableSpecificationTest" token="2000003" namespace="GameOfLife.Core.Specifications"/>
</type>
</parameter>
<parameter name="target" position="1"><type spec="Class"><definition assemblyName="GameOfLife.Core" name="IsSurvivableSpecification" token="2000003" namespace="GameOfLife.Core.Specifications"/>
</type>
</parameter>
<parameter name="currentCell" position="2"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="ICell" token="2000002" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
<resultType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009e" namespace="System"/>
</resultType>
</definition>
</method>
<target><methodDefinition assemblyName="GameOfLife.Core" name="IsSatisfiedBy" token="6000004"><declaringType assemblyName="GameOfLife.Core" name="IsSurvivableSpecification" token="2000003" namespace="GameOfLife.Core.Specifications"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Core" name="IsSurvivableSpecification" token="2000003" namespace="GameOfLife.Core.Specifications"/>
</type>
</parameter>
<parameter name="currentCell" position="1"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="ICell" token="2000002" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
<resultType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009e" namespace="System"/>
</resultType>
</methodDefinition>
</target>
<memberUnderTest assemblyName="GameOfLife.Core" name="IsSatisfiedBy" token="6000004"><declaringType assemblyName="GameOfLife.Core" name="IsSurvivableSpecification" token="2000003" namespace="GameOfLife.Core.Specifications"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Core" name="IsSurvivableSpecification" token="2000003" namespace="GameOfLife.Core.Specifications"/>
</type>
</parameter>
<parameter name="currentCell" position="1"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="ICell" token="2000002" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
<resultType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009e" namespace="System"/>
</resultType>
</memberUnderTest>
<log level="error" time="2013-03-05 20:55:48Z" wikiTopic="Missing Wiki Topic" category="execution" message="runtime context Microsoft.Pex.Engine.Libraries.MicrosoftVisualBasicLibrary+ProjectErrorRuntimeContextAttribute+Context failed to open"><exceptionChain><exception typeDisplayName="InvalidProgramException" source="Microsoft.VisualBasic"><message><![CDATA[Common Language Runtime detected an invalid program.]]></message>
<type spec="Class"><definition assemblyName="mscorlib" name="InvalidProgramException" token="20000f9" namespace="System"/>
</type>
<stackTrace><frame value="  at ProjectData..ctor()" method="ProjectData..ctor()" offset="-1"><method assemblyName="Microsoft.VisualBasic" name=".ctor" token="600053a"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at ProjectData.GetProjectData()" method="ProjectData.GetProjectData()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="GetProjectData" static="true" token="600053c"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</resultType>
</method>
</frame>
<frame value="  at Information.Err()" method="Information.Err()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="Err" static="true" token="60005ee"><declaringType assemblyName="Microsoft.VisualBasic" name="Information" token="2000087" namespace="Microsoft.VisualBasic"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ErrObject" token="200002f" namespace="Microsoft.VisualBasic"/>
</resultType>
</method>
</frame>
<frame value="  at ProjectData.ClearProjectError()" method="ProjectData.ClearProjectError()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="ClearProjectError" static="true" token="6000538"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</method>
</frame>
</stackTrace>
</exception>
</exceptionChain>
</log>
<explorable title="guessed how to create GameOfLife.Core.Specifications.IsSurvivableSpecification" kind="guessedclass" isExplorableTypeExported="true"><explorableType spec="Class"><definition assemblyName="GameOfLife.Core" name="IsSurvivableSpecification" token="2000003" namespace="GameOfLife.Core.Specifications"/>
</explorableType>
<testAssemblyName name="GameOfLife.Core.Tests"/>
<update kind="CollectionCodeUpdate" name="Accept/Edit Factory"><codeUpdate kind="AddTypeCodeUpdate" name="Add type" fileNameHint="Factories\IsSurvivableSpecificationFactory" abstract="true" sealed="true" visibility="Public"><doc><![CDATA[<summary>A factory for GameOfLife.Core.Specifications.IsSurvivableSpecification instances</summary>
]]></doc>
<reference name="mscorlib"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="GameOfLife.Core" location="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Library\bin\Debug\GameOfLife.Core.dll"/>
<reference name="GameOfLife.Contracts" location="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Library\bin\Debug\GameOfLife.Contracts.dll"/>
<typeDefinition assemblyName="GameOfLife.Core.Tests" name="IsSurvivableSpecificationFactory" token="ffffffff" namespace="GameOfLife.Core.Specifications"/>
<baseType spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</baseType>
<target><assembly name="GameOfLife.Core.Tests"/>
</target>
</codeUpdate>
<codeUpdate kind="AddMethodCodeUpdate" name="Add method" visibility="Public"><attribute><ctor><definition assemblyName="Microsoft.Pex.Framework" name=".ctor" token="6000e50"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexFactoryMethodAttribute" token="200027d" namespace="Microsoft.Pex.Framework"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.Pex.Framework" name="PexFactoryMethodAttribute" token="200027d" namespace="Microsoft.Pex.Framework"/>
</type>
</parameter>
<parameter name="factoredType" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000128" namespace="System"/>
</type>
</parameter>
</definition>
</ctor>
<ctorArgument><value kind="TypeOfExpression"><type spec="Class"><definition assemblyName="GameOfLife.Core" name="IsSurvivableSpecification" token="2000003" namespace="GameOfLife.Core.Specifications"/>
</type>
</value>
</ctorArgument>
</attribute>
<doc><![CDATA[<summary>A factory for GameOfLife.Core.Specifications.IsSurvivableSpecification instances</summary>
]]></doc>
<reference name="GameOfLife.Core" location="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Library\bin\Debug\GameOfLife.Core.dll"/>
<reference name="mscorlib"/>
<reference name="DataAccess.Specification" location="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Library\bin\Debug\DataAccess.Specification.dll"/>
<reference name="GameOfLife.Contracts" location="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Library\bin\Debug\GameOfLife.Contracts.dll"/>
<methodDefinition assemblyName="GameOfLife.Core.Tests" name="Create" static="true"><declaringType assemblyName="GameOfLife.Core.Tests" name="IsSurvivableSpecificationFactory" token="ffffffff" namespace="GameOfLife.Core.Specifications"/>
<parameter name="grid_iGrid" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IGrid" token="2000008" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="GameOfLife.Core" name="IsSurvivableSpecification" token="2000003" namespace="GameOfLife.Core.Specifications"/>
</resultType>
</methodDefinition>
<target><typeDefinition assemblyName="GameOfLife.Core.Tests" name="IsSurvivableSpecificationFactory" token="ffffffff" namespace="GameOfLife.Core.Specifications"/>
</target>
</codeUpdate>
<codeUpdate kind="SelectCodeUpdate" name="Select" selectKind="Body"><target><methodDefinition assemblyName="GameOfLife.Core.Tests" name="Create" static="true"><declaringType assemblyName="GameOfLife.Core.Tests" name="IsSurvivableSpecificationFactory" token="ffffffff" namespace="GameOfLife.Core.Specifications"/>
<parameter name="grid_iGrid" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IGrid" token="2000008" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="GameOfLife.Core" name="IsSurvivableSpecification" token="2000003" namespace="GameOfLife.Core.Specifications"/>
</resultType>
</methodDefinition>
</target>
</codeUpdate>
</update>
</explorable>
<log level="error" time="2013-03-05 20:55:48Z" wikiTopic="Missing Wiki Topic" category="execution" message="runtime context Microsoft.Pex.Engine.Libraries.MicrosoftVisualBasicLibrary+ProjectErrorRuntimeContextAttribute+Context failed to rollback"><exceptionChain><exception typeDisplayName="InvalidProgramException" source="Microsoft.VisualBasic"><message><![CDATA[Common Language Runtime detected an invalid program.]]></message>
<type spec="Class"><definition assemblyName="mscorlib" name="InvalidProgramException" token="20000f9" namespace="System"/>
</type>
<stackTrace><frame value="  at ProjectData..ctor()" method="ProjectData..ctor()" offset="-1"><method assemblyName="Microsoft.VisualBasic" name=".ctor" token="600053a"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at ProjectData.GetProjectData()" method="ProjectData.GetProjectData()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="GetProjectData" static="true" token="600053c"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</resultType>
</method>
</frame>
<frame value="  at Information.Err()" method="Information.Err()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="Err" static="true" token="60005ee"><declaringType assemblyName="Microsoft.VisualBasic" name="Information" token="2000087" namespace="Microsoft.VisualBasic"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ErrObject" token="200002f" namespace="Microsoft.VisualBasic"/>
</resultType>
</method>
</frame>
<frame value="  at ProjectData.ClearProjectError()" method="ProjectData.ClearProjectError()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="ClearProjectError" static="true" token="6000538"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</method>
</frame>
</stackTrace>
</exception>
</exceptionChain>
</log>
<test name="IsSatisfiedBy" state="success" duration="0.00"/>
<log level="error" time="2013-03-05 20:55:48Z" wikiTopic="Missing Wiki Topic" category="execution" message="runtime context Microsoft.Pex.Engine.Libraries.MicrosoftVisualBasicLibrary+ProjectErrorRuntimeContextAttribute+Context failed to open"><exceptionChain><exception typeDisplayName="InvalidProgramException" source="Microsoft.VisualBasic"><message><![CDATA[Common Language Runtime detected an invalid program.]]></message>
<type spec="Class"><definition assemblyName="mscorlib" name="InvalidProgramException" token="20000f9" namespace="System"/>
</type>
<stackTrace><frame value="  at ProjectData..ctor()" method="ProjectData..ctor()" offset="-1"><method assemblyName="Microsoft.VisualBasic" name=".ctor" token="600053a"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at ProjectData.GetProjectData()" method="ProjectData.GetProjectData()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="GetProjectData" static="true" token="600053c"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</resultType>
</method>
</frame>
<frame value="  at Information.Err()" method="Information.Err()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="Err" static="true" token="60005ee"><declaringType assemblyName="Microsoft.VisualBasic" name="Information" token="2000087" namespace="Microsoft.VisualBasic"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ErrObject" token="200002f" namespace="Microsoft.VisualBasic"/>
</resultType>
</method>
</frame>
<frame value="  at ProjectData.ClearProjectError()" method="ProjectData.ClearProjectError()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="ClearProjectError" static="true" token="6000538"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</method>
</frame>
</stackTrace>
</exception>
</exceptionChain>
</log>
<log level="error" time="2013-03-05 20:55:48Z" wikiTopic="Missing Wiki Topic" category="execution" message="runtime context Microsoft.Pex.Engine.Libraries.MicrosoftVisualBasicLibrary+ProjectErrorRuntimeContextAttribute+Context failed to rollback"><exceptionChain><exception typeDisplayName="InvalidProgramException" source="Microsoft.VisualBasic"><message><![CDATA[Common Language Runtime detected an invalid program.]]></message>
<type spec="Class"><definition assemblyName="mscorlib" name="InvalidProgramException" token="20000f9" namespace="System"/>
</type>
<stackTrace><frame value="  at ProjectData..ctor()" method="ProjectData..ctor()" offset="-1"><method assemblyName="Microsoft.VisualBasic" name=".ctor" token="600053a"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at ProjectData.GetProjectData()" method="ProjectData.GetProjectData()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="GetProjectData" static="true" token="600053c"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</resultType>
</method>
</frame>
<frame value="  at Information.Err()" method="Information.Err()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="Err" static="true" token="60005ee"><declaringType assemblyName="Microsoft.VisualBasic" name="Information" token="2000087" namespace="Microsoft.VisualBasic"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ErrObject" token="200002f" namespace="Microsoft.VisualBasic"/>
</resultType>
</method>
</frame>
<frame value="  at ProjectData.ClearProjectError()" method="ProjectData.ClearProjectError()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="ClearProjectError" static="true" token="6000538"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</method>
</frame>
</stackTrace>
</exception>
</exceptionChain>
</log>
<test name="IsSatisfiedBy" state="success" duration="0.01"/>
<generatedTest id="8391488b-dfc9-492d-b5ba-0424028d6296" index="1" run="2" status="normaltermination" explorationIsDynamicCode="true" generated="true" new="true" assemblyName="GameOfLife.Core.Tests" name="IsSatisfiedBy535"><declaringType assemblyName="GameOfLife.Core.Tests" name="IsSurvivableSpecificationTest" token="ffffffff" namespace="GameOfLife.Core.Specifications"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Core.Tests" name="IsSurvivableSpecificationTest" token="ffffffff" namespace="GameOfLife.Core.Specifications"/>
</type>
</parameter>
<rcov name="Block" dcov="2" dtot="19" acov="2" atot="19"/>
<rcov name="asserts" dcov="0" dtot="0" acov="0" atot="0"/>
<value name="target">new IsSurvivableSpecification{}</value>
<value name="currentCell">null</value>
<value name="result(target)">new IsSurvivableSpecification{}</value>
<value name="result">false</value>
<code><![CDATA[IsSurvivableSpecification isSurvivableSpecification;
bool b;
isSurvivableSpecification = new IsSurvivableSpecification((IGrid)null);
b = this.IsSatisfiedBy(isSurvivableSpecification, (ICell)null);
Assert.AreEqual<bool>(false, b);
Assert.IsNotNull((object)isSurvivableSpecification);
]]></code>
<methodCode imports="GameOfLife.Contracts;Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(IsSurvivableSpecificationTest))]
public void IsSatisfiedBy535()
{
    IsSurvivableSpecification isSurvivableSpecification;
    bool b;
    isSurvivableSpecification = new IsSurvivableSpecification((IGrid)null);
    b = this.IsSatisfiedBy(isSurvivableSpecification, (ICell)null);
    Assert.AreEqual<bool>(false, b);
    Assert.IsNotNull((object)isSurvivableSpecification);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="GameOfLife.Core.Tests"/>
<reference name="GameOfLife.Core" location="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Library\bin\Debug\GameOfLife.Core.dll"/>
<reference name="DataAccess.Specification" location="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Library\bin\Debug\DataAccess.Specification.dll"/>
<reference name="GameOfLife.Contracts" location="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Library\bin\Debug\GameOfLife.Contracts.dll"/>
<pathCondition><![CDATA[return target != (IsSurvivableSpecification)null && methodof(target.IsSatisfiedBy) == methodof(IsSurvivableSpecification.IsSatisfiedBy) && currentCell == (ICell)null;
]]></pathCondition>
</generatedTest>
<log level="message" time="2013-03-05 20:55:48Z" category="coverage" message="coverage increased from 0 to 2 blocks (+2) after flipping GameOfLife.Core.Specifications.IsSurvivableSpecificationTest.IsSatisfiedBy at 0x0002"/>
<coverage domain="usercodeundertest" unit="block" covered="2" total="19" coveredRatio="0.10526315789473684"/>
<sourceCoverage xml="cov\e375\cov.xml" html="cov\e375\cov.html"/>
<result name="IsSatisfiedBy(IsSurvivableSpecification, ICell)" state="failed" duration="0.40"/>
<duration start="2013-03-05 20:55:48Z" end="2013-03-05 20:55:48Z" seconds="0.40"/>
</exploration>
<coverage domain="usercodeundertest" unit="block" covered="5" total="19" coveredRatio="0.26315789473684209"/>
<sourceCoverage xml="cov\t907\cov.xml" html="cov\t907\cov.html"/>
<duration start="2013-03-05 20:55:48Z" end="2013-03-05 20:55:48Z" seconds="0.64"/>
</fixture>
<fixture name="IsUnderPopulatedSpecificationTest" type="GameOfLife.Core.Specifications.IsUnderPopulatedSpecificationTest" typeName="IsUnderPopulatedSpecificationTest" token="2000005" href="fix\GameOfLife.Core.Tests.908.html"><type spec="Class"><definition assemblyName="GameOfLife.Core.Tests" name="IsUnderPopulatedSpecificationTest" token="2000005" namespace="GameOfLife.Core.Specifications"/>
</type>
<settings typeUnderTest="GameOfLife.Core.Specifications.IsUnderPopulatedSpecification"/>
<exploration shortName="Constructor(IGrid)" fullName="GameOfLife.Core.Specifications.IsUnderPopulatedSpecificationTest.Constructor(IGrid)" isDynamicCode="true"><method><definition assemblyName="GameOfLife.Core.Tests" name="Constructor" token="6000009"><declaringType assemblyName="GameOfLife.Core.Tests" name="IsUnderPopulatedSpecificationTest" token="2000005" namespace="GameOfLife.Core.Specifications"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Core.Tests" name="IsUnderPopulatedSpecificationTest" token="2000005" namespace="GameOfLife.Core.Specifications"/>
</type>
</parameter>
<parameter name="grid" position="1"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IGrid" token="2000008" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="GameOfLife.Core" name="IsUnderPopulatedSpecification" token="2000005" namespace="GameOfLife.Core.Specifications"/>
</resultType>
</definition>
</method>
<target><methodDefinition assemblyName="GameOfLife.Core" name=".ctor" token="6000009"><declaringType assemblyName="GameOfLife.Core" name="IsUnderPopulatedSpecification" token="2000005" namespace="GameOfLife.Core.Specifications"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Core" name="IsUnderPopulatedSpecification" token="2000005" namespace="GameOfLife.Core.Specifications"/>
</type>
</parameter>
<parameter name="grid" position="1"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IGrid" token="2000008" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
</methodDefinition>
</target>
<memberUnderTest assemblyName="GameOfLife.Core" name=".ctor" token="6000009"><declaringType assemblyName="GameOfLife.Core" name="IsUnderPopulatedSpecification" token="2000005" namespace="GameOfLife.Core.Specifications"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Core" name="IsUnderPopulatedSpecification" token="2000005" namespace="GameOfLife.Core.Specifications"/>
</type>
</parameter>
<parameter name="grid" position="1"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IGrid" token="2000008" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
</memberUnderTest>
<log level="error" time="2013-03-05 20:55:48Z" wikiTopic="Missing Wiki Topic" category="execution" message="runtime context Microsoft.Pex.Engine.Libraries.MicrosoftVisualBasicLibrary+ProjectErrorRuntimeContextAttribute+Context failed to open"><exceptionChain><exception typeDisplayName="InvalidProgramException" source="Microsoft.VisualBasic"><message><![CDATA[Common Language Runtime detected an invalid program.]]></message>
<type spec="Class"><definition assemblyName="mscorlib" name="InvalidProgramException" token="20000f9" namespace="System"/>
</type>
<stackTrace><frame value="  at ProjectData..ctor()" method="ProjectData..ctor()" offset="-1"><method assemblyName="Microsoft.VisualBasic" name=".ctor" token="600053a"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at ProjectData.GetProjectData()" method="ProjectData.GetProjectData()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="GetProjectData" static="true" token="600053c"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</resultType>
</method>
</frame>
<frame value="  at Information.Err()" method="Information.Err()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="Err" static="true" token="60005ee"><declaringType assemblyName="Microsoft.VisualBasic" name="Information" token="2000087" namespace="Microsoft.VisualBasic"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ErrObject" token="200002f" namespace="Microsoft.VisualBasic"/>
</resultType>
</method>
</frame>
<frame value="  at ProjectData.ClearProjectError()" method="ProjectData.ClearProjectError()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="ClearProjectError" static="true" token="6000538"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</method>
</frame>
</stackTrace>
</exception>
</exceptionChain>
</log>
<log level="error" time="2013-03-05 20:55:48Z" wikiTopic="Missing Wiki Topic" category="execution" message="runtime context Microsoft.Pex.Engine.Libraries.MicrosoftVisualBasicLibrary+ProjectErrorRuntimeContextAttribute+Context failed to rollback"><exceptionChain><exception typeDisplayName="InvalidProgramException" source="Microsoft.VisualBasic"><message><![CDATA[Common Language Runtime detected an invalid program.]]></message>
<type spec="Class"><definition assemblyName="mscorlib" name="InvalidProgramException" token="20000f9" namespace="System"/>
</type>
<stackTrace><frame value="  at ProjectData..ctor()" method="ProjectData..ctor()" offset="-1"><method assemblyName="Microsoft.VisualBasic" name=".ctor" token="600053a"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at ProjectData.GetProjectData()" method="ProjectData.GetProjectData()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="GetProjectData" static="true" token="600053c"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</resultType>
</method>
</frame>
<frame value="  at Information.Err()" method="Information.Err()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="Err" static="true" token="60005ee"><declaringType assemblyName="Microsoft.VisualBasic" name="Information" token="2000087" namespace="Microsoft.VisualBasic"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ErrObject" token="200002f" namespace="Microsoft.VisualBasic"/>
</resultType>
</method>
</frame>
<frame value="  at ProjectData.ClearProjectError()" method="ProjectData.ClearProjectError()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="ClearProjectError" static="true" token="6000538"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</method>
</frame>
</stackTrace>
</exception>
</exceptionChain>
</log>
<test name="Constructor" state="success" duration="0.01"/>
<generatedTest id="26d34013-73fb-406b-ae04-2ade0c4a0f93" index="1" run="1" status="normaltermination" explorationIsDynamicCode="true" generated="true" new="true" assemblyName="GameOfLife.Core.Tests" name="Constructor490"><declaringType assemblyName="GameOfLife.Core.Tests" name="IsUnderPopulatedSpecificationTest" token="ffffffff" namespace="GameOfLife.Core.Specifications"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Core.Tests" name="IsUnderPopulatedSpecificationTest" token="ffffffff" namespace="GameOfLife.Core.Specifications"/>
</type>
</parameter>
<rcov name="Block" dcov="3" dtot="3" acov="3" atot="3"/>
<rcov name="asserts" dcov="0" dtot="0" acov="0" atot="0"/>
<value name="grid">null</value>
<value name="result">new IsUnderPopulatedSpecification{}</value>
<code><![CDATA[IsUnderPopulatedSpecification isUnderPopulatedSpecification;
isUnderPopulatedSpecification = this.Constructor((IGrid)null);
Assert.IsNotNull((object)isUnderPopulatedSpecification);
]]></code>
<methodCode imports="GameOfLife.Contracts;Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(IsUnderPopulatedSpecificationTest))]
public void Constructor490()
{
    IsUnderPopulatedSpecification isUnderPopulatedSpecification;
    isUnderPopulatedSpecification = this.Constructor((IGrid)null);
    Assert.IsNotNull((object)isUnderPopulatedSpecification);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="GameOfLife.Core.Tests"/>
<reference name="GameOfLife.Core" location="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Library\bin\Debug\GameOfLife.Core.dll"/>
<reference name="DataAccess.Specification" location="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Library\bin\Debug\DataAccess.Specification.dll"/>
<reference name="GameOfLife.Contracts" location="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Library\bin\Debug\GameOfLife.Contracts.dll"/>
</generatedTest>
<coverage domain="usercodeundertest" unit="block" covered="3" total="3" coveredRatio="1"/>
<sourceCoverage xml="cov\e378\cov.xml" html="cov\e378\cov.html"/>
<result name="Constructor(IGrid)" state="failed" duration="0.22"/>
<duration start="2013-03-05 20:55:48Z" end="2013-03-05 20:55:48Z" seconds="0.23"/>
</exploration>
<exploration shortName="IsSatisfiedBy(IsUnderPopulatedSpecification, ICell)" fullName="GameOfLife.Core.Specifications.IsUnderPopulatedSpecificationTest.IsSatisfiedBy(IsUnderPopulatedSpecification, ICell)" isDynamicCode="true"><method><definition assemblyName="GameOfLife.Core.Tests" name="IsSatisfiedBy" token="600000a"><declaringType assemblyName="GameOfLife.Core.Tests" name="IsUnderPopulatedSpecificationTest" token="2000005" namespace="GameOfLife.Core.Specifications"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Core.Tests" name="IsUnderPopulatedSpecificationTest" token="2000005" namespace="GameOfLife.Core.Specifications"/>
</type>
</parameter>
<parameter name="target" position="1"><type spec="Class"><definition assemblyName="GameOfLife.Core" name="IsUnderPopulatedSpecification" token="2000005" namespace="GameOfLife.Core.Specifications"/>
</type>
</parameter>
<parameter name="currentCell" position="2"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="ICell" token="2000002" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
<resultType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009e" namespace="System"/>
</resultType>
</definition>
</method>
<target><methodDefinition assemblyName="GameOfLife.Core" name="IsSatisfiedBy" token="600000a"><declaringType assemblyName="GameOfLife.Core" name="IsUnderPopulatedSpecification" token="2000005" namespace="GameOfLife.Core.Specifications"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Core" name="IsUnderPopulatedSpecification" token="2000005" namespace="GameOfLife.Core.Specifications"/>
</type>
</parameter>
<parameter name="currentCell" position="1"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="ICell" token="2000002" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
<resultType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009e" namespace="System"/>
</resultType>
</methodDefinition>
</target>
<memberUnderTest assemblyName="GameOfLife.Core" name="IsSatisfiedBy" token="600000a"><declaringType assemblyName="GameOfLife.Core" name="IsUnderPopulatedSpecification" token="2000005" namespace="GameOfLife.Core.Specifications"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Core" name="IsUnderPopulatedSpecification" token="2000005" namespace="GameOfLife.Core.Specifications"/>
</type>
</parameter>
<parameter name="currentCell" position="1"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="ICell" token="2000002" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
<resultType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009e" namespace="System"/>
</resultType>
</memberUnderTest>
<log level="error" time="2013-03-05 20:55:49Z" wikiTopic="Missing Wiki Topic" category="execution" message="runtime context Microsoft.Pex.Engine.Libraries.MicrosoftVisualBasicLibrary+ProjectErrorRuntimeContextAttribute+Context failed to open"><exceptionChain><exception typeDisplayName="InvalidProgramException" source="Microsoft.VisualBasic"><message><![CDATA[Common Language Runtime detected an invalid program.]]></message>
<type spec="Class"><definition assemblyName="mscorlib" name="InvalidProgramException" token="20000f9" namespace="System"/>
</type>
<stackTrace><frame value="  at ProjectData..ctor()" method="ProjectData..ctor()" offset="-1"><method assemblyName="Microsoft.VisualBasic" name=".ctor" token="600053a"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at ProjectData.GetProjectData()" method="ProjectData.GetProjectData()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="GetProjectData" static="true" token="600053c"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</resultType>
</method>
</frame>
<frame value="  at Information.Err()" method="Information.Err()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="Err" static="true" token="60005ee"><declaringType assemblyName="Microsoft.VisualBasic" name="Information" token="2000087" namespace="Microsoft.VisualBasic"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ErrObject" token="200002f" namespace="Microsoft.VisualBasic"/>
</resultType>
</method>
</frame>
<frame value="  at ProjectData.ClearProjectError()" method="ProjectData.ClearProjectError()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="ClearProjectError" static="true" token="6000538"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</method>
</frame>
</stackTrace>
</exception>
</exceptionChain>
</log>
<explorable title="guessed how to create GameOfLife.Core.Specifications.IsUnderPopulatedSpecification" kind="guessedclass" isExplorableTypeExported="true"><explorableType spec="Class"><definition assemblyName="GameOfLife.Core" name="IsUnderPopulatedSpecification" token="2000005" namespace="GameOfLife.Core.Specifications"/>
</explorableType>
<testAssemblyName name="GameOfLife.Core.Tests"/>
<update kind="CollectionCodeUpdate" name="Accept/Edit Factory"><codeUpdate kind="AddTypeCodeUpdate" name="Add type" fileNameHint="Factories\IsUnderPopulatedSpecificationFactory" abstract="true" sealed="true" visibility="Public"><doc><![CDATA[<summary>A factory for GameOfLife.Core.Specifications.IsUnderPopulatedSpecification instances</summary>
]]></doc>
<reference name="mscorlib"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="GameOfLife.Core" location="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Library\bin\Debug\GameOfLife.Core.dll"/>
<reference name="GameOfLife.Contracts" location="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Library\bin\Debug\GameOfLife.Contracts.dll"/>
<typeDefinition assemblyName="GameOfLife.Core.Tests" name="IsUnderPopulatedSpecificationFactory" token="ffffffff" namespace="GameOfLife.Core.Specifications"/>
<baseType spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</baseType>
<target><assembly name="GameOfLife.Core.Tests"/>
</target>
</codeUpdate>
<codeUpdate kind="AddMethodCodeUpdate" name="Add method" visibility="Public"><attribute><ctor><definition assemblyName="Microsoft.Pex.Framework" name=".ctor" token="6000e50"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexFactoryMethodAttribute" token="200027d" namespace="Microsoft.Pex.Framework"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.Pex.Framework" name="PexFactoryMethodAttribute" token="200027d" namespace="Microsoft.Pex.Framework"/>
</type>
</parameter>
<parameter name="factoredType" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000128" namespace="System"/>
</type>
</parameter>
</definition>
</ctor>
<ctorArgument><value kind="TypeOfExpression"><type spec="Class"><definition assemblyName="GameOfLife.Core" name="IsUnderPopulatedSpecification" token="2000005" namespace="GameOfLife.Core.Specifications"/>
</type>
</value>
</ctorArgument>
</attribute>
<doc><![CDATA[<summary>A factory for GameOfLife.Core.Specifications.IsUnderPopulatedSpecification instances</summary>
]]></doc>
<reference name="GameOfLife.Core" location="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Library\bin\Debug\GameOfLife.Core.dll"/>
<reference name="mscorlib"/>
<reference name="DataAccess.Specification" location="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Library\bin\Debug\DataAccess.Specification.dll"/>
<reference name="GameOfLife.Contracts" location="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Library\bin\Debug\GameOfLife.Contracts.dll"/>
<methodDefinition assemblyName="GameOfLife.Core.Tests" name="Create" static="true"><declaringType assemblyName="GameOfLife.Core.Tests" name="IsUnderPopulatedSpecificationFactory" token="ffffffff" namespace="GameOfLife.Core.Specifications"/>
<parameter name="grid_iGrid" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IGrid" token="2000008" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="GameOfLife.Core" name="IsUnderPopulatedSpecification" token="2000005" namespace="GameOfLife.Core.Specifications"/>
</resultType>
</methodDefinition>
<target><typeDefinition assemblyName="GameOfLife.Core.Tests" name="IsUnderPopulatedSpecificationFactory" token="ffffffff" namespace="GameOfLife.Core.Specifications"/>
</target>
</codeUpdate>
<codeUpdate kind="SelectCodeUpdate" name="Select" selectKind="Body"><target><methodDefinition assemblyName="GameOfLife.Core.Tests" name="Create" static="true"><declaringType assemblyName="GameOfLife.Core.Tests" name="IsUnderPopulatedSpecificationFactory" token="ffffffff" namespace="GameOfLife.Core.Specifications"/>
<parameter name="grid_iGrid" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IGrid" token="2000008" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="GameOfLife.Core" name="IsUnderPopulatedSpecification" token="2000005" namespace="GameOfLife.Core.Specifications"/>
</resultType>
</methodDefinition>
</target>
</codeUpdate>
</update>
</explorable>
<log level="error" time="2013-03-05 20:55:49Z" wikiTopic="Missing Wiki Topic" category="execution" message="runtime context Microsoft.Pex.Engine.Libraries.MicrosoftVisualBasicLibrary+ProjectErrorRuntimeContextAttribute+Context failed to rollback"><exceptionChain><exception typeDisplayName="InvalidProgramException" source="Microsoft.VisualBasic"><message><![CDATA[Common Language Runtime detected an invalid program.]]></message>
<type spec="Class"><definition assemblyName="mscorlib" name="InvalidProgramException" token="20000f9" namespace="System"/>
</type>
<stackTrace><frame value="  at ProjectData..ctor()" method="ProjectData..ctor()" offset="-1"><method assemblyName="Microsoft.VisualBasic" name=".ctor" token="600053a"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at ProjectData.GetProjectData()" method="ProjectData.GetProjectData()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="GetProjectData" static="true" token="600053c"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</resultType>
</method>
</frame>
<frame value="  at Information.Err()" method="Information.Err()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="Err" static="true" token="60005ee"><declaringType assemblyName="Microsoft.VisualBasic" name="Information" token="2000087" namespace="Microsoft.VisualBasic"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ErrObject" token="200002f" namespace="Microsoft.VisualBasic"/>
</resultType>
</method>
</frame>
<frame value="  at ProjectData.ClearProjectError()" method="ProjectData.ClearProjectError()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="ClearProjectError" static="true" token="6000538"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</method>
</frame>
</stackTrace>
</exception>
</exceptionChain>
</log>
<test name="IsSatisfiedBy" state="success" duration="0.00"/>
<log level="error" time="2013-03-05 20:55:49Z" wikiTopic="Missing Wiki Topic" category="execution" message="runtime context Microsoft.Pex.Engine.Libraries.MicrosoftVisualBasicLibrary+ProjectErrorRuntimeContextAttribute+Context failed to open"><exceptionChain><exception typeDisplayName="InvalidProgramException" source="Microsoft.VisualBasic"><message><![CDATA[Common Language Runtime detected an invalid program.]]></message>
<type spec="Class"><definition assemblyName="mscorlib" name="InvalidProgramException" token="20000f9" namespace="System"/>
</type>
<stackTrace><frame value="  at ProjectData..ctor()" method="ProjectData..ctor()" offset="-1"><method assemblyName="Microsoft.VisualBasic" name=".ctor" token="600053a"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at ProjectData.GetProjectData()" method="ProjectData.GetProjectData()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="GetProjectData" static="true" token="600053c"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</resultType>
</method>
</frame>
<frame value="  at Information.Err()" method="Information.Err()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="Err" static="true" token="60005ee"><declaringType assemblyName="Microsoft.VisualBasic" name="Information" token="2000087" namespace="Microsoft.VisualBasic"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ErrObject" token="200002f" namespace="Microsoft.VisualBasic"/>
</resultType>
</method>
</frame>
<frame value="  at ProjectData.ClearProjectError()" method="ProjectData.ClearProjectError()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="ClearProjectError" static="true" token="6000538"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</method>
</frame>
</stackTrace>
</exception>
</exceptionChain>
</log>
<log level="error" time="2013-03-05 20:55:49Z" wikiTopic="Missing Wiki Topic" category="execution" message="runtime context Microsoft.Pex.Engine.Libraries.MicrosoftVisualBasicLibrary+ProjectErrorRuntimeContextAttribute+Context failed to rollback"><exceptionChain><exception typeDisplayName="InvalidProgramException" source="Microsoft.VisualBasic"><message><![CDATA[Common Language Runtime detected an invalid program.]]></message>
<type spec="Class"><definition assemblyName="mscorlib" name="InvalidProgramException" token="20000f9" namespace="System"/>
</type>
<stackTrace><frame value="  at ProjectData..ctor()" method="ProjectData..ctor()" offset="-1"><method assemblyName="Microsoft.VisualBasic" name=".ctor" token="600053a"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</type>
</parameter>
</method>
</frame>
<frame value="  at ProjectData.GetProjectData()" method="ProjectData.GetProjectData()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="GetProjectData" static="true" token="600053c"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</resultType>
</method>
</frame>
<frame value="  at Information.Err()" method="Information.Err()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="Err" static="true" token="60005ee"><declaringType assemblyName="Microsoft.VisualBasic" name="Information" token="2000087" namespace="Microsoft.VisualBasic"/>
<resultType spec="Class"><definition assemblyName="Microsoft.VisualBasic" name="ErrObject" token="200002f" namespace="Microsoft.VisualBasic"/>
</resultType>
</method>
</frame>
<frame value="  at ProjectData.ClearProjectError()" method="ProjectData.ClearProjectError()" offset="0"><method assemblyName="Microsoft.VisualBasic" name="ClearProjectError" static="true" token="6000538"><declaringType assemblyName="Microsoft.VisualBasic" name="ProjectData" token="200007b" namespace="Microsoft.VisualBasic.CompilerServices"/>
</method>
</frame>
</stackTrace>
</exception>
</exceptionChain>
</log>
<test name="IsSatisfiedBy" state="success" duration="0.01"/>
<generatedTest id="30a5bef4-0aed-4d37-a720-87e0a9a20ff7" index="1" run="2" status="normaltermination" explorationIsDynamicCode="true" generated="true" new="true" assemblyName="GameOfLife.Core.Tests" name="IsSatisfiedBy801"><declaringType assemblyName="GameOfLife.Core.Tests" name="IsUnderPopulatedSpecificationTest" token="ffffffff" namespace="GameOfLife.Core.Specifications"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Core.Tests" name="IsUnderPopulatedSpecificationTest" token="ffffffff" namespace="GameOfLife.Core.Specifications"/>
</type>
</parameter>
<rcov name="Block" dcov="2" dtot="16" acov="2" atot="16"/>
<rcov name="asserts" dcov="0" dtot="0" acov="0" atot="0"/>
<value name="target">new IsUnderPopulatedSpecification{}</value>
<value name="currentCell">null</value>
<value name="result(target)">new IsUnderPopulatedSpecification{}</value>
<value name="result">false</value>
<code><![CDATA[IsUnderPopulatedSpecification isUnderPopulatedSpecification;
bool b;
isUnderPopulatedSpecification = new IsUnderPopulatedSpecification((IGrid)null);
b = this.IsSatisfiedBy(isUnderPopulatedSpecification, (ICell)null);
Assert.AreEqual<bool>(false, b);
Assert.IsNotNull((object)isUnderPopulatedSpecification);
]]></code>
<methodCode imports="GameOfLife.Contracts;Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(IsUnderPopulatedSpecificationTest))]
public void IsSatisfiedBy801()
{
    IsUnderPopulatedSpecification isUnderPopulatedSpecification;
    bool b;
    isUnderPopulatedSpecification = new IsUnderPopulatedSpecification((IGrid)null);
    b = this.IsSatisfiedBy(isUnderPopulatedSpecification, (ICell)null);
    Assert.AreEqual<bool>(false, b);
    Assert.IsNotNull((object)isUnderPopulatedSpecification);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="GameOfLife.Core.Tests"/>
<reference name="GameOfLife.Core" location="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Library\bin\Debug\GameOfLife.Core.dll"/>
<reference name="DataAccess.Specification" location="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Library\bin\Debug\DataAccess.Specification.dll"/>
<reference name="GameOfLife.Contracts" location="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Library\bin\Debug\GameOfLife.Contracts.dll"/>
<pathCondition><![CDATA[return target != (IsUnderPopulatedSpecification)null && methodof(target.IsSatisfiedBy) == methodof(IsUnderPopulatedSpecification.IsSatisfiedBy) && currentCell == (ICell)null;
]]></pathCondition>
</generatedTest>
<log level="message" time="2013-03-05 20:55:49Z" category="coverage" message="coverage increased from 0 to 2 blocks (+2) after flipping GameOfLife.Core.Specifications.IsUnderPopulatedSpecificationTest.IsSatisfiedBy at 0x0002"/>
<coverage domain="usercodeundertest" unit="block" covered="2" total="16" coveredRatio="0.125"/>
<sourceCoverage xml="cov\e380\cov.xml" html="cov\e380\cov.html"/>
<result name="IsSatisfiedBy(IsUnderPopulatedSpecification, ICell)" state="failed" duration="0.42"/>
<duration start="2013-03-05 20:55:48Z" end="2013-03-05 20:55:49Z" seconds="0.43"/>
</exploration>
<coverage domain="usercodeundertest" unit="block" covered="5" total="16" coveredRatio="0.3125"/>
<sourceCoverage xml="cov\t908\cov.xml" html="cov\t908\cov.html"/>
<duration start="2013-03-05 20:55:48Z" end="2013-03-05 20:55:49Z" seconds="0.67"/>
</fixture>
<coverage domain="usercodeundertest" unit="block" covered="45" total="215" coveredRatio="0.20930232558139536"/>
<sourceCoverage xml="cov\a63138336\cov.xml" html="cov\a63138336\cov.html"/>
<duration start="2013-03-05 20:55:34Z" end="2013-03-05 20:55:49Z" seconds="15.3708792"/>
<frameTreeRef exceptionCount="1"/>
</assembly>
<duration start="2013-03-05 20:55:30Z" end="2013-03-05 20:55:49Z" seconds="18.6670677"/>
<background/>
</pex>
