<frameTree version="0.94.51023.0"><frameException type="System.ArgumentNullException"><tag exceptionState="unexpected"><generatedTestRef idref="9f7048ff-9b74-4a0c-86b3-93d7cb87c2e0"/>
</tag>
<frameNode><frame value="  at Grid..ctor(IGridSize) in F:\Ajay\Test Projects\GameOfLife\GameOfLife.Library\Grid.cs(24)" method="Grid..ctor(IGridSize)" offset="29" file="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Library\Grid.cs" line="24"><method assemblyName="GameOfLife.Core" name=".ctor" token="600000c"><declaringType assemblyName="GameOfLife.Core" name="Grid" token="2000006" namespace="GameOfLife.Core"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Core" name="Grid" token="2000006" namespace="GameOfLife.Core"/>
</type>
</parameter>
<parameter name="gridSize" position="1"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IGridSize" token="2000006" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
</method>
<beforeSource><![CDATA[
        public Grid(IGridSize gridSize)
        {]]></beforeSource>
<source><![CDATA[            if (gridSize == null) throw new ArgumentNullException("gridSize");]]></source>
<afterSource><![CDATA[            GridSize = gridSize;
            _gridStorage = new GridStorage(gridSize);
        }]]></afterSource>
</frame>
<tag exceptionState="unexpected"><generatedTestRef idref="9f7048ff-9b74-4a0c-86b3-93d7cb87c2e0"/>
</tag>
<frameNode><frame value="  at GridHelper.CreateGrid(IGridSize, IEnumerable`1&lt;ICell&gt;) in F:\Ajay\Test Projects\GameOfLife\GameOfLife.Console\Helpers\GridHelper.cs(11)" method="GridHelper.CreateGrid(IGridSize, IEnumerable`1&lt;ICell&gt;)" offset="2" file="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Console\Helpers\GridHelper.cs" line="11"><method assemblyName="GameOfLife.Console" name="CreateGrid" static="true" token="6000010"><declaringType assemblyName="GameOfLife.Console" name="GridHelper" token="2000004" namespace="GameOfLife.Helpers"/>
<parameter name="gridSize" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IGridSize" token="2000006" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
<parameter name="liveCells" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="IEnumerable`1" token="2000036" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="Class"><definition assemblyName="GameOfLife.Contracts" name="ICell" token="2000002" namespace="GameOfLife.Contracts"/>
</genericTypeArgument>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IGrid" token="2000008" namespace="GameOfLife.Contracts"/>
</resultType>
</method>
<beforeSource><![CDATA[    {
        public static IGrid CreateGrid(IGridSize gridSize,IEnumerable<ICell> liveCells)
        {]]></beforeSource>
<source><![CDATA[            var grid = new Grid(gridSize);]]></source>
<afterSource><![CDATA[            //Mark all cells
            foreach (var liveCell in liveCells)
            {]]></afterSource>
</frame>
<tag exceptionState="unexpected"><generatedTestRef idref="9f7048ff-9b74-4a0c-86b3-93d7cb87c2e0"/>
</tag>
</frameNode>
</frameNode>
</frameException>
<frameException type="System.ArgumentException"><tag exceptionState="expected"><generatedTestRef idref="b5620e5d-7922-4063-af7f-9aed5f57962b"/>
</tag>
<frameNode><frame value="  at UiHelper.ParseGridSize(String) in F:\Ajay\Test Projects\GameOfLife\GameOfLife.Console\Helpers\UIHelper.cs(128)" method="UiHelper.ParseGridSize(String)" offset="177" file="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Console\Helpers\UIHelper.cs" line="128"><method assemblyName="GameOfLife.Console" name="ParseGridSize" static="true" token="600000d"><declaringType assemblyName="GameOfLife.Console" name="UiHelper" token="2000003" namespace="GameOfLife.Helpers"/>
<parameter name="rowColumnPair" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004c" namespace="System"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IGridSize" token="2000006" namespace="GameOfLife.Contracts"/>
</resultType>
</method>
<beforeSource><![CDATA[            int colIndex;
            if (!Int32.TryParse(cellIndex[1], out colIndex) || colIndex < 0)
            {]]></beforeSource>
<source><![CDATA[                throw new ArgumentException(string.Format("The row column pair {0} is not valid", rowColumnPair));]]></source>
<afterSource><![CDATA[            }

            return new GridSize(rowIndex, colIndex);]]></afterSource>
</frame>
<tag exceptionState="expected"><generatedTestRef idref="b5620e5d-7922-4063-af7f-9aed5f57962b"/>
<generatedTestRef idref="77a2b8e7-ccd8-45df-9192-fbc44653bc38"/>
<generatedTestRef idref="12da96e0-148b-4bc4-b86a-425622346295"/>
<generatedTestRef idref="d2fb43a8-0f1b-47df-8ff9-d0dafdb9687d"/>
<generatedTestRef idref="291b7f99-10a3-4f4b-a36c-bc279f620795"/>
</tag>
<frameNode><frame value="  at UiHelper.GetGridSize(String) in F:\Ajay\Test Projects\GameOfLife\GameOfLife.Console\Helpers\UIHelper.cs(67)" method="UiHelper.GetGridSize(String)" offset="57" file="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Console\Helpers\UIHelper.cs" line="67"><method assemblyName="GameOfLife.Console" name="GetGridSize" static="true" token="600000b"><declaringType assemblyName="GameOfLife.Console" name="UiHelper" token="2000003" namespace="GameOfLife.Helpers"/>
<parameter name="gridRowColumnString" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004c" namespace="System"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IGridSize" token="2000006" namespace="GameOfLife.Contracts"/>
</resultType>
</method>
<beforeSource><![CDATA[            gridRowColumnString = gridRowColumnString.Trim(' ', ColumnSeparator);
            if (gridRowColumnString.Length != 0) //no alive cells
            {]]></beforeSource>
<source><![CDATA[                return ParseGridSize(gridRowColumnString);]]></source>
<afterSource><![CDATA[            }
            return null;
        }]]></afterSource>
</frame>
<tag exceptionState="expected"><generatedTestRef idref="b5620e5d-7922-4063-af7f-9aed5f57962b"/>
<generatedTestRef idref="77a2b8e7-ccd8-45df-9192-fbc44653bc38"/>
<generatedTestRef idref="12da96e0-148b-4bc4-b86a-425622346295"/>
<generatedTestRef idref="d2fb43a8-0f1b-47df-8ff9-d0dafdb9687d"/>
<generatedTestRef idref="291b7f99-10a3-4f4b-a36c-bc279f620795"/>
</tag>
</frameNode>
</frameNode>
<frameNode><frame value="  at UiHelper.ParseGridSize(String) in F:\Ajay\Test Projects\GameOfLife\GameOfLife.Console\Helpers\UIHelper.cs(122)" method="UiHelper.ParseGridSize(String)" offset="131" file="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Console\Helpers\UIHelper.cs" line="122"><method assemblyName="GameOfLife.Console" name="ParseGridSize" static="true" token="600000d"><declaringType assemblyName="GameOfLife.Console" name="UiHelper" token="2000003" namespace="GameOfLife.Helpers"/>
<parameter name="rowColumnPair" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004c" namespace="System"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IGridSize" token="2000006" namespace="GameOfLife.Contracts"/>
</resultType>
</method>
<beforeSource><![CDATA[            int rowIndex;
            if (!Int32.TryParse(cellIndex[0], out rowIndex) || rowIndex < 0)
            {]]></beforeSource>
<source><![CDATA[                throw new ArgumentException(string.Format("The row column pair {0} is not valid", rowColumnPair));]]></source>
<afterSource><![CDATA[            }

            int colIndex;]]></afterSource>
</frame>
<tag exceptionState="expected"><generatedTestRef idref="fe486431-d139-42ba-87a4-9de606ed9b16"/>
<generatedTestRef idref="6f9ef8c5-43a1-47f1-b20c-b97cc1dc1174"/>
<generatedTestRef idref="85041663-c396-4d5d-87df-c4278c532331"/>
<generatedTestRef idref="04e940c6-e47d-4f51-9a83-c72c4ff58351"/>
<generatedTestRef idref="521a4113-2b5b-43d8-b533-4236b17f4cd9"/>
</tag>
<frameNode><frame value="  at UiHelper.GetGridSize(String) in F:\Ajay\Test Projects\GameOfLife\GameOfLife.Console\Helpers\UIHelper.cs(67)" method="UiHelper.GetGridSize(String)" offset="57" file="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Console\Helpers\UIHelper.cs" line="67"><method assemblyName="GameOfLife.Console" name="GetGridSize" static="true" token="600000b"><declaringType assemblyName="GameOfLife.Console" name="UiHelper" token="2000003" namespace="GameOfLife.Helpers"/>
<parameter name="gridRowColumnString" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004c" namespace="System"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IGridSize" token="2000006" namespace="GameOfLife.Contracts"/>
</resultType>
</method>
<beforeSource><![CDATA[            gridRowColumnString = gridRowColumnString.Trim(' ', ColumnSeparator);
            if (gridRowColumnString.Length != 0) //no alive cells
            {]]></beforeSource>
<source><![CDATA[                return ParseGridSize(gridRowColumnString);]]></source>
<afterSource><![CDATA[            }
            return null;
        }]]></afterSource>
</frame>
<tag exceptionState="expected"><generatedTestRef idref="fe486431-d139-42ba-87a4-9de606ed9b16"/>
<generatedTestRef idref="6f9ef8c5-43a1-47f1-b20c-b97cc1dc1174"/>
<generatedTestRef idref="85041663-c396-4d5d-87df-c4278c532331"/>
<generatedTestRef idref="04e940c6-e47d-4f51-9a83-c72c4ff58351"/>
<generatedTestRef idref="521a4113-2b5b-43d8-b533-4236b17f4cd9"/>
</tag>
</frameNode>
</frameNode>
<frameNode><frame value="  at UiHelper.ParseGridSize(String) in F:\Ajay\Test Projects\GameOfLife\GameOfLife.Console\Helpers\UIHelper.cs(109)" method="UiHelper.ParseGridSize(String)" offset="32" file="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Console\Helpers\UIHelper.cs" line="109"><method assemblyName="GameOfLife.Console" name="ParseGridSize" static="true" token="600000d"><declaringType assemblyName="GameOfLife.Console" name="UiHelper" token="2000003" namespace="GameOfLife.Helpers"/>
<parameter name="rowColumnPair" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004c" namespace="System"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IGridSize" token="2000006" namespace="GameOfLife.Contracts"/>
</resultType>
</method>
<beforeSource><![CDATA[        {
            if (!rowColumnPair.Contains(ColumnSeparator)) //no valid row,col index pair
            {]]></beforeSource>
<source><![CDATA[                throw new ArgumentException(string.Format("The row column pair {0} has no rowColumn separator",]]></source>
<afterSource><![CDATA[                                                          rowColumnPair));
            }
]]></afterSource>
</frame>
<tag exceptionState="expected"><generatedTestRef idref="10d3fb0a-3bdc-45a4-a1cf-7540d3d604d0"/>
<generatedTestRef idref="9f25dd54-9706-4aac-9e95-f10de7585925"/>
<generatedTestRef idref="bb386b61-3da9-4580-8f0f-6e1ea5f827c8"/>
<generatedTestRef idref="6b4fdd58-a598-4074-96c4-eabf15706214"/>
</tag>
<frameNode><frame value="  at UiHelper.GetGridSize(String) in F:\Ajay\Test Projects\GameOfLife\GameOfLife.Console\Helpers\UIHelper.cs(67)" method="UiHelper.GetGridSize(String)" offset="57" file="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Console\Helpers\UIHelper.cs" line="67"><method assemblyName="GameOfLife.Console" name="GetGridSize" static="true" token="600000b"><declaringType assemblyName="GameOfLife.Console" name="UiHelper" token="2000003" namespace="GameOfLife.Helpers"/>
<parameter name="gridRowColumnString" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004c" namespace="System"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IGridSize" token="2000006" namespace="GameOfLife.Contracts"/>
</resultType>
</method>
<beforeSource><![CDATA[            gridRowColumnString = gridRowColumnString.Trim(' ', ColumnSeparator);
            if (gridRowColumnString.Length != 0) //no alive cells
            {]]></beforeSource>
<source><![CDATA[                return ParseGridSize(gridRowColumnString);]]></source>
<afterSource><![CDATA[            }
            return null;
        }]]></afterSource>
</frame>
<tag exceptionState="expected"><generatedTestRef idref="10d3fb0a-3bdc-45a4-a1cf-7540d3d604d0"/>
<generatedTestRef idref="9f25dd54-9706-4aac-9e95-f10de7585925"/>
<generatedTestRef idref="bb386b61-3da9-4580-8f0f-6e1ea5f827c8"/>
<generatedTestRef idref="6b4fdd58-a598-4074-96c4-eabf15706214"/>
</tag>
</frameNode>
</frameNode>
<frameNode><frame value="  at UiHelper.ParseCellPosition(String, IGridSize) in F:\Ajay\Test Projects\GameOfLife\GameOfLife.Console\Helpers\UIHelper.cs(138)" method="UiHelper.ParseCellPosition(String, IGridSize)" offset="32" file="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Console\Helpers\UIHelper.cs" line="138"><method assemblyName="GameOfLife.Console" name="ParseCellPosition" static="true" token="600000e"><declaringType assemblyName="GameOfLife.Console" name="UiHelper" token="2000003" namespace="GameOfLife.Helpers"/>
<parameter name="rowColumnPair" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004c" namespace="System"/>
</type>
</parameter>
<parameter name="gridSize" position="1"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IGridSize" token="2000006" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IPosition" token="2000005" namespace="GameOfLife.Contracts"/>
</resultType>
</method>
<beforeSource><![CDATA[        {
            if (!rowColumnPair.Contains(ColumnSeparator)) //no valid row,col index pair
            {]]></beforeSource>
<source><![CDATA[                throw new ArgumentException(string.Format("The row column pair {0} has no rowColumn separator",]]></source>
<afterSource><![CDATA[                                                          rowColumnPair));
            }
]]></afterSource>
</frame>
<tag exceptionState="expected"><generatedTestRef idref="1574ca37-463d-4739-ac9a-5390a17300b2"/>
<generatedTestRef idref="dc747c70-bed2-4ad4-8306-e243db5fd40d"/>
<generatedTestRef idref="3c2d4edb-109b-4515-8e1f-8fb25d254294"/>
</tag>
<frameNode><frame value="  at &lt;&gt;c__DisplayClass4.&lt;ParseLiveCell&gt;b__0(String) in F:\Ajay\Test Projects\GameOfLife\GameOfLife.Console\Helpers\UIHelper.cs(93)" method="&lt;&gt;c__DisplayClass4.&lt;ParseLiveCell&gt;b__0(String)" offset="7" file="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Console\Helpers\UIHelper.cs" line="93"><method assemblyName="GameOfLife.Console" name="&lt;ParseLiveCell&gt;b__0" token="6000015"><declaringType assemblyName="GameOfLife.Console" name="&lt;&gt;c__DisplayClass4" token="2000006"><declaringType assemblyName="GameOfLife.Console" name="UiHelper" token="2000003" namespace="GameOfLife.Helpers"/>
</declaringType>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Console" name="&lt;&gt;c__DisplayClass4" token="2000006"><declaringType assemblyName="GameOfLife.Console" name="UiHelper" token="2000003" namespace="GameOfLife.Helpers"/>
</definition>
</type>
</parameter>
<parameter name="rowColumnPair" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004c" namespace="System"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IPosition" token="2000005" namespace="GameOfLife.Contracts"/>
</resultType>
</method>
<beforeSource><![CDATA[            {
                var rowColumnPairs = gridRowColumnString.Split(RowSeparator);
                liveCells.AddRange(]]></beforeSource>
<source><![CDATA[                    rowColumnPairs.Select(rowColumnPair => ParseCellPosition(rowColumnPair, gridSize)).Select(]]></source>
<afterSource><![CDATA[                        cellPosition => new Cell(cellPosition, true)).Cast<ICell>());
            }
]]></afterSource>
</frame>
<tag exceptionState="expected"><generatedTestRef idref="1574ca37-463d-4739-ac9a-5390a17300b2"/>
<generatedTestRef idref="dc747c70-bed2-4ad4-8306-e243db5fd40d"/>
<generatedTestRef idref="3c2d4edb-109b-4515-8e1f-8fb25d254294"/>
</tag>
<frameNode><frame value="  at &lt;&gt;c__DisplayClass12`3.&lt;CombineSelectors&gt;b__11(!0)" method="&lt;&gt;c__DisplayClass12`3.&lt;CombineSelectors&gt;b__11(!0)" offset="13"><method assemblyName="System.Core" name="&lt;CombineSelectors&gt;b__11" token="600141d"><declaringType assemblyName="System.Core" name="&lt;&gt;c__DisplayClass12`3" token="2000234"><declaringType assemblyName="System.Core" name="Enumerable" token="200004c" namespace="System.Linq"/>
<genericParameter value="TSource"/>
<genericParameter value="TMiddle"/>
<genericParameter value="TResult"/>
</declaringType>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="System.Core" name="&lt;&gt;c__DisplayClass12`3" token="2000234"><declaringType assemblyName="System.Core" name="Enumerable" token="200004c" namespace="System.Linq"/>
<genericParameter value="TSource"/>
<genericParameter value="TMiddle"/>
<genericParameter value="TResult"/>
</definition>
<genericTypeArgument spec="GenericTypeParameter" index="0"/>
<genericTypeArgument spec="GenericTypeParameter" index="1"/>
<genericTypeArgument spec="GenericTypeParameter" index="2"/>
</type>
</parameter>
<parameter name="x" position="1"><type spec="GenericTypeParameter" index="0"/>
</parameter>
<resultType spec="GenericTypeParameter" index="2"/>
</method>
</frame>
<tag exceptionState="expected"><generatedTestRef idref="1574ca37-463d-4739-ac9a-5390a17300b2"/>
<generatedTestRef idref="dc747c70-bed2-4ad4-8306-e243db5fd40d"/>
<generatedTestRef idref="3c2d4edb-109b-4515-8e1f-8fb25d254294"/>
</tag>
<frameNode><frame value="  at WhereSelectArrayIterator`2.MoveNext()" method="WhereSelectArrayIterator`2.MoveNext()" offset="73"><method assemblyName="System.Core" name="MoveNext" token="60004d5"><declaringType assemblyName="System.Core" name="WhereSelectArrayIterator`2" token="2000052"><declaringType assemblyName="System.Core" name="Enumerable" token="200004c" namespace="System.Linq"/>
<genericParameter value="TSource"/>
<genericParameter value="TResult"/>
</declaringType>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="System.Core" name="WhereSelectArrayIterator`2" token="2000052"><declaringType assemblyName="System.Core" name="Enumerable" token="200004c" namespace="System.Linq"/>
<genericParameter value="TSource"/>
<genericParameter value="TResult"/>
</definition>
<genericTypeArgument spec="GenericTypeParameter" index="0"/>
<genericTypeArgument spec="GenericTypeParameter" index="1"/>
</type>
</parameter>
<resultType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009e" namespace="System"/>
</resultType>
</method>
</frame>
<tag exceptionState="expected"><generatedTestRef idref="1574ca37-463d-4739-ac9a-5390a17300b2"/>
<generatedTestRef idref="dc747c70-bed2-4ad4-8306-e243db5fd40d"/>
<generatedTestRef idref="3c2d4edb-109b-4515-8e1f-8fb25d254294"/>
</tag>
<frameNode><frame value="  at List`1.InsertRange(Int32, IEnumerable`1&lt;!0&gt;)" method="List`1.InsertRange(Int32, IEnumerable`1&lt;!0&gt;)" offset="235"><method assemblyName="mscorlib" name="InsertRange" token="600726f"><declaringType assemblyName="mscorlib" name="List`1" token="2000362" namespace="System.Collections.Generic"><genericParameter value="T"/>
</declaringType>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="List`1" token="2000362" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="GenericTypeParameter" index="0"/>
</type>
</parameter>
<parameter position="1"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000f3" namespace="System"/>
</type>
</parameter>
<parameter position="2"><type spec="Class"><definition assemblyName="mscorlib" name="IEnumerable`1" token="2000036" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="GenericTypeParameter" index="0"/>
</type>
</parameter>
</method>
</frame>
<tag exceptionState="expected"><generatedTestRef idref="1574ca37-463d-4739-ac9a-5390a17300b2"/>
<generatedTestRef idref="dc747c70-bed2-4ad4-8306-e243db5fd40d"/>
<generatedTestRef idref="3c2d4edb-109b-4515-8e1f-8fb25d254294"/>
</tag>
<frameNode><frame value="  at List`1.AddRange(IEnumerable`1&lt;!0&gt;)" method="List`1.AddRange(IEnumerable`1&lt;!0&gt;)" offset="8"><method assemblyName="mscorlib" name="AddRange" token="600724c"><declaringType assemblyName="mscorlib" name="List`1" token="2000362" namespace="System.Collections.Generic"><genericParameter value="T"/>
</declaringType>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="List`1" token="2000362" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="GenericTypeParameter" index="0"/>
</type>
</parameter>
<parameter position="1"><type spec="Class"><definition assemblyName="mscorlib" name="IEnumerable`1" token="2000036" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="GenericTypeParameter" index="0"/>
</type>
</parameter>
</method>
</frame>
<tag exceptionState="expected"><generatedTestRef idref="1574ca37-463d-4739-ac9a-5390a17300b2"/>
<generatedTestRef idref="dc747c70-bed2-4ad4-8306-e243db5fd40d"/>
<generatedTestRef idref="3c2d4edb-109b-4515-8e1f-8fb25d254294"/>
</tag>
<frameNode><frame value="  at UiHelper.ParseLiveCell(String, IGridSize) in F:\Ajay\Test Projects\GameOfLife\GameOfLife.Console\Helpers\UIHelper.cs(92)" method="UiHelper.ParseLiveCell(String, IGridSize)" offset="158" file="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Console\Helpers\UIHelper.cs" line="92"><method assemblyName="GameOfLife.Console" name="ParseLiveCell" static="true" token="600000c"><declaringType assemblyName="GameOfLife.Console" name="UiHelper" token="2000003" namespace="GameOfLife.Helpers"/>
<parameter name="gridRowColumnString" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004c" namespace="System"/>
</type>
</parameter>
<parameter name="gridSize" position="1"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IGridSize" token="2000006" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="IEnumerable`1" token="2000036" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="Class"><definition assemblyName="GameOfLife.Contracts" name="ICell" token="2000002" namespace="GameOfLife.Contracts"/>
</genericTypeArgument>
</resultType>
</method>
<beforeSource><![CDATA[            if (gridRowColumnString.Length != 0) //no alive cells
            {
                var rowColumnPairs = gridRowColumnString.Split(RowSeparator);]]></beforeSource>
<source><![CDATA[                liveCells.AddRange(]]></source>
<afterSource><![CDATA[                    rowColumnPairs.Select(rowColumnPair => ParseCellPosition(rowColumnPair, gridSize)).Select(
                        cellPosition => new Cell(cellPosition, true)).Cast<ICell>());
            }]]></afterSource>
</frame>
<tag exceptionState="expected"><generatedTestRef idref="1574ca37-463d-4739-ac9a-5390a17300b2"/>
<generatedTestRef idref="dc747c70-bed2-4ad4-8306-e243db5fd40d"/>
<generatedTestRef idref="3c2d4edb-109b-4515-8e1f-8fb25d254294"/>
</tag>
</frameNode>
</frameNode>
</frameNode>
</frameNode>
</frameNode>
</frameNode>
</frameNode>
<frameNode><frame value="  at UiHelper.ParseCellPosition(String, IGridSize) in F:\Ajay\Test Projects\GameOfLife\GameOfLife.Console\Helpers\UIHelper.cs(151)" method="UiHelper.ParseCellPosition(String, IGridSize)" offset="137" file="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Console\Helpers\UIHelper.cs" line="151"><method assemblyName="GameOfLife.Console" name="ParseCellPosition" static="true" token="600000e"><declaringType assemblyName="GameOfLife.Console" name="UiHelper" token="2000003" namespace="GameOfLife.Helpers"/>
<parameter name="rowColumnPair" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004c" namespace="System"/>
</type>
</parameter>
<parameter name="gridSize" position="1"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IGridSize" token="2000006" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IPosition" token="2000005" namespace="GameOfLife.Contracts"/>
</resultType>
</method>
<beforeSource><![CDATA[            int rowIndex;
            if (!Int32.TryParse(cellIndex[0], out rowIndex) || rowIndex < 0 || rowIndex >= gridSize.Rows)
            {]]></beforeSource>
<source><![CDATA[                throw new ArgumentException(string.Format("The row column pair {0} is not valid", rowColumnPair));]]></source>
<afterSource><![CDATA[            }

            int colIndex;]]></afterSource>
</frame>
<tag exceptionState="expected"><generatedTestRef idref="06b256a4-1665-40c0-88de-619d421fbdc1"/>
<generatedTestRef idref="bc9e3d27-0dde-4595-a13b-70d1f2b50eac"/>
</tag>
<frameNode><frame value="  at &lt;&gt;c__DisplayClass4.&lt;ParseLiveCell&gt;b__0(String) in F:\Ajay\Test Projects\GameOfLife\GameOfLife.Console\Helpers\UIHelper.cs(93)" method="&lt;&gt;c__DisplayClass4.&lt;ParseLiveCell&gt;b__0(String)" offset="7" file="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Console\Helpers\UIHelper.cs" line="93"><method assemblyName="GameOfLife.Console" name="&lt;ParseLiveCell&gt;b__0" token="6000015"><declaringType assemblyName="GameOfLife.Console" name="&lt;&gt;c__DisplayClass4" token="2000006"><declaringType assemblyName="GameOfLife.Console" name="UiHelper" token="2000003" namespace="GameOfLife.Helpers"/>
</declaringType>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Console" name="&lt;&gt;c__DisplayClass4" token="2000006"><declaringType assemblyName="GameOfLife.Console" name="UiHelper" token="2000003" namespace="GameOfLife.Helpers"/>
</definition>
</type>
</parameter>
<parameter name="rowColumnPair" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004c" namespace="System"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IPosition" token="2000005" namespace="GameOfLife.Contracts"/>
</resultType>
</method>
<beforeSource><![CDATA[            {
                var rowColumnPairs = gridRowColumnString.Split(RowSeparator);
                liveCells.AddRange(]]></beforeSource>
<source><![CDATA[                    rowColumnPairs.Select(rowColumnPair => ParseCellPosition(rowColumnPair, gridSize)).Select(]]></source>
<afterSource><![CDATA[                        cellPosition => new Cell(cellPosition, true)).Cast<ICell>());
            }
]]></afterSource>
</frame>
<tag exceptionState="expected"><generatedTestRef idref="06b256a4-1665-40c0-88de-619d421fbdc1"/>
<generatedTestRef idref="bc9e3d27-0dde-4595-a13b-70d1f2b50eac"/>
</tag>
<frameNode><frame value="  at &lt;&gt;c__DisplayClass12`3.&lt;CombineSelectors&gt;b__11(!0)" method="&lt;&gt;c__DisplayClass12`3.&lt;CombineSelectors&gt;b__11(!0)" offset="13"><method assemblyName="System.Core" name="&lt;CombineSelectors&gt;b__11" token="600141d"><declaringType assemblyName="System.Core" name="&lt;&gt;c__DisplayClass12`3" token="2000234"><declaringType assemblyName="System.Core" name="Enumerable" token="200004c" namespace="System.Linq"/>
<genericParameter value="TSource"/>
<genericParameter value="TMiddle"/>
<genericParameter value="TResult"/>
</declaringType>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="System.Core" name="&lt;&gt;c__DisplayClass12`3" token="2000234"><declaringType assemblyName="System.Core" name="Enumerable" token="200004c" namespace="System.Linq"/>
<genericParameter value="TSource"/>
<genericParameter value="TMiddle"/>
<genericParameter value="TResult"/>
</definition>
<genericTypeArgument spec="GenericTypeParameter" index="0"/>
<genericTypeArgument spec="GenericTypeParameter" index="1"/>
<genericTypeArgument spec="GenericTypeParameter" index="2"/>
</type>
</parameter>
<parameter name="x" position="1"><type spec="GenericTypeParameter" index="0"/>
</parameter>
<resultType spec="GenericTypeParameter" index="2"/>
</method>
</frame>
<tag exceptionState="expected"><generatedTestRef idref="06b256a4-1665-40c0-88de-619d421fbdc1"/>
<generatedTestRef idref="bc9e3d27-0dde-4595-a13b-70d1f2b50eac"/>
</tag>
<frameNode><frame value="  at WhereSelectArrayIterator`2.MoveNext()" method="WhereSelectArrayIterator`2.MoveNext()" offset="73"><method assemblyName="System.Core" name="MoveNext" token="60004d5"><declaringType assemblyName="System.Core" name="WhereSelectArrayIterator`2" token="2000052"><declaringType assemblyName="System.Core" name="Enumerable" token="200004c" namespace="System.Linq"/>
<genericParameter value="TSource"/>
<genericParameter value="TResult"/>
</declaringType>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="System.Core" name="WhereSelectArrayIterator`2" token="2000052"><declaringType assemblyName="System.Core" name="Enumerable" token="200004c" namespace="System.Linq"/>
<genericParameter value="TSource"/>
<genericParameter value="TResult"/>
</definition>
<genericTypeArgument spec="GenericTypeParameter" index="0"/>
<genericTypeArgument spec="GenericTypeParameter" index="1"/>
</type>
</parameter>
<resultType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009e" namespace="System"/>
</resultType>
</method>
</frame>
<tag exceptionState="expected"><generatedTestRef idref="06b256a4-1665-40c0-88de-619d421fbdc1"/>
<generatedTestRef idref="bc9e3d27-0dde-4595-a13b-70d1f2b50eac"/>
</tag>
<frameNode><frame value="  at List`1.InsertRange(Int32, IEnumerable`1&lt;!0&gt;)" method="List`1.InsertRange(Int32, IEnumerable`1&lt;!0&gt;)" offset="235"><method assemblyName="mscorlib" name="InsertRange" token="600726f"><declaringType assemblyName="mscorlib" name="List`1" token="2000362" namespace="System.Collections.Generic"><genericParameter value="T"/>
</declaringType>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="List`1" token="2000362" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="GenericTypeParameter" index="0"/>
</type>
</parameter>
<parameter position="1"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000f3" namespace="System"/>
</type>
</parameter>
<parameter position="2"><type spec="Class"><definition assemblyName="mscorlib" name="IEnumerable`1" token="2000036" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="GenericTypeParameter" index="0"/>
</type>
</parameter>
</method>
</frame>
<tag exceptionState="expected"><generatedTestRef idref="06b256a4-1665-40c0-88de-619d421fbdc1"/>
<generatedTestRef idref="bc9e3d27-0dde-4595-a13b-70d1f2b50eac"/>
</tag>
<frameNode><frame value="  at List`1.AddRange(IEnumerable`1&lt;!0&gt;)" method="List`1.AddRange(IEnumerable`1&lt;!0&gt;)" offset="8"><method assemblyName="mscorlib" name="AddRange" token="600724c"><declaringType assemblyName="mscorlib" name="List`1" token="2000362" namespace="System.Collections.Generic"><genericParameter value="T"/>
</declaringType>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="List`1" token="2000362" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="GenericTypeParameter" index="0"/>
</type>
</parameter>
<parameter position="1"><type spec="Class"><definition assemblyName="mscorlib" name="IEnumerable`1" token="2000036" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="GenericTypeParameter" index="0"/>
</type>
</parameter>
</method>
</frame>
<tag exceptionState="expected"><generatedTestRef idref="06b256a4-1665-40c0-88de-619d421fbdc1"/>
<generatedTestRef idref="bc9e3d27-0dde-4595-a13b-70d1f2b50eac"/>
</tag>
<frameNode><frame value="  at UiHelper.ParseLiveCell(String, IGridSize) in F:\Ajay\Test Projects\GameOfLife\GameOfLife.Console\Helpers\UIHelper.cs(92)" method="UiHelper.ParseLiveCell(String, IGridSize)" offset="158" file="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Console\Helpers\UIHelper.cs" line="92"><method assemblyName="GameOfLife.Console" name="ParseLiveCell" static="true" token="600000c"><declaringType assemblyName="GameOfLife.Console" name="UiHelper" token="2000003" namespace="GameOfLife.Helpers"/>
<parameter name="gridRowColumnString" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004c" namespace="System"/>
</type>
</parameter>
<parameter name="gridSize" position="1"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IGridSize" token="2000006" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="IEnumerable`1" token="2000036" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="Class"><definition assemblyName="GameOfLife.Contracts" name="ICell" token="2000002" namespace="GameOfLife.Contracts"/>
</genericTypeArgument>
</resultType>
</method>
<beforeSource><![CDATA[            if (gridRowColumnString.Length != 0) //no alive cells
            {
                var rowColumnPairs = gridRowColumnString.Split(RowSeparator);]]></beforeSource>
<source><![CDATA[                liveCells.AddRange(]]></source>
<afterSource><![CDATA[                    rowColumnPairs.Select(rowColumnPair => ParseCellPosition(rowColumnPair, gridSize)).Select(
                        cellPosition => new Cell(cellPosition, true)).Cast<ICell>());
            }]]></afterSource>
</frame>
<tag exceptionState="expected"><generatedTestRef idref="06b256a4-1665-40c0-88de-619d421fbdc1"/>
<generatedTestRef idref="bc9e3d27-0dde-4595-a13b-70d1f2b50eac"/>
</tag>
</frameNode>
</frameNode>
</frameNode>
</frameNode>
</frameNode>
</frameNode>
</frameNode>
</frameException>
<frameException type="System.ArgumentOutOfRangeException"><tag exceptionState="unexpected"><generatedTestRef idref="280420d6-d299-440e-857b-f84699a21b31"/>
</tag>
<frameNode><frame value="  at GridSize..ctor(Int32, Int32) in F:\Ajay\Test Projects\GameOfLife\GameOfLife.Models\GridSize.cs(18)" method="GridSize..ctor(Int32, Int32)" offset="31" file="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Models\GridSize.cs" line="18"><method assemblyName="GameOfLife.Models" name=".ctor" token="6000005"><declaringType assemblyName="GameOfLife.Models" name="GridSize" token="2000002" namespace="GameOfLife.Models"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Models" name="GridSize" token="2000002" namespace="GameOfLife.Models"/>
</type>
</parameter>
<parameter name="rows" position="1"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000f3" namespace="System"/>
</type>
</parameter>
<parameter name="columns" position="2"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000f3" namespace="System"/>
</type>
</parameter>
</method>
<beforeSource><![CDATA[
        public GridSize(int rows, int columns)
        {]]></beforeSource>
<source><![CDATA[            if (rows <= 0) throw new ArgumentOutOfRangeException("rows", "rows value must be > 0");]]></source>
<afterSource><![CDATA[            if (columns <= 0) throw new ArgumentOutOfRangeException("columns", "columns value must be > 0");
            Rows = rows;
            Columns = columns;]]></afterSource>
</frame>
<tag exceptionState="unexpected"><generatedTestRef idref="280420d6-d299-440e-857b-f84699a21b31"/>
<generatedTestRef idref="74f7cf25-1865-4615-abf8-888d63e3ebfd"/>
</tag>
<frameNode><frame value="  at UiHelper.ParseGridSize(String) in F:\Ajay\Test Projects\GameOfLife\GameOfLife.Console\Helpers\UIHelper.cs(131)" method="UiHelper.ParseGridSize(String)" offset="180" file="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Console\Helpers\UIHelper.cs" line="131"><method assemblyName="GameOfLife.Console" name="ParseGridSize" static="true" token="600000d"><declaringType assemblyName="GameOfLife.Console" name="UiHelper" token="2000003" namespace="GameOfLife.Helpers"/>
<parameter name="rowColumnPair" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004c" namespace="System"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IGridSize" token="2000006" namespace="GameOfLife.Contracts"/>
</resultType>
</method>
<beforeSource><![CDATA[                throw new ArgumentException(string.Format("The row column pair {0} is not valid", rowColumnPair));
            }
]]></beforeSource>
<source><![CDATA[            return new GridSize(rowIndex, colIndex);]]></source>
<afterSource><![CDATA[        }

        private static IPosition ParseCellPosition(string rowColumnPair, IGridSize gridSize)]]></afterSource>
</frame>
<tag exceptionState="unexpected"><generatedTestRef idref="280420d6-d299-440e-857b-f84699a21b31"/>
<generatedTestRef idref="74f7cf25-1865-4615-abf8-888d63e3ebfd"/>
</tag>
<frameNode><frame value="  at UiHelper.GetGridSize(String) in F:\Ajay\Test Projects\GameOfLife\GameOfLife.Console\Helpers\UIHelper.cs(67)" method="UiHelper.GetGridSize(String)" offset="57" file="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Console\Helpers\UIHelper.cs" line="67"><method assemblyName="GameOfLife.Console" name="GetGridSize" static="true" token="600000b"><declaringType assemblyName="GameOfLife.Console" name="UiHelper" token="2000003" namespace="GameOfLife.Helpers"/>
<parameter name="gridRowColumnString" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004c" namespace="System"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IGridSize" token="2000006" namespace="GameOfLife.Contracts"/>
</resultType>
</method>
<beforeSource><![CDATA[            gridRowColumnString = gridRowColumnString.Trim(' ', ColumnSeparator);
            if (gridRowColumnString.Length != 0) //no alive cells
            {]]></beforeSource>
<source><![CDATA[                return ParseGridSize(gridRowColumnString);]]></source>
<afterSource><![CDATA[            }
            return null;
        }]]></afterSource>
</frame>
<tag exceptionState="unexpected"><generatedTestRef idref="280420d6-d299-440e-857b-f84699a21b31"/>
<generatedTestRef idref="74f7cf25-1865-4615-abf8-888d63e3ebfd"/>
</tag>
</frameNode>
</frameNode>
</frameNode>
<frameNode><frame value="  at GridSize..ctor(Int32, Int32) in F:\Ajay\Test Projects\GameOfLife\GameOfLife.Models\GridSize.cs(19)" method="GridSize..ctor(Int32, Int32)" offset="55" file="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Models\GridSize.cs" line="19"><method assemblyName="GameOfLife.Models" name=".ctor" token="6000005"><declaringType assemblyName="GameOfLife.Models" name="GridSize" token="2000002" namespace="GameOfLife.Models"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Models" name="GridSize" token="2000002" namespace="GameOfLife.Models"/>
</type>
</parameter>
<parameter name="rows" position="1"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000f3" namespace="System"/>
</type>
</parameter>
<parameter name="columns" position="2"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000f3" namespace="System"/>
</type>
</parameter>
</method>
<beforeSource><![CDATA[        public GridSize(int rows, int columns)
        {
            if (rows <= 0) throw new ArgumentOutOfRangeException("rows", "rows value must be > 0");]]></beforeSource>
<source><![CDATA[            if (columns <= 0) throw new ArgumentOutOfRangeException("columns", "columns value must be > 0");]]></source>
<afterSource><![CDATA[            Rows = rows;
            Columns = columns;
        }]]></afterSource>
</frame>
<tag exceptionState="unexpected"><generatedTestRef idref="c03cc877-d99e-4867-9ae1-3fe78c3ae558"/>
</tag>
<frameNode><frame value="  at UiHelper.ParseGridSize(String) in F:\Ajay\Test Projects\GameOfLife\GameOfLife.Console\Helpers\UIHelper.cs(131)" method="UiHelper.ParseGridSize(String)" offset="180" file="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Console\Helpers\UIHelper.cs" line="131"><method assemblyName="GameOfLife.Console" name="ParseGridSize" static="true" token="600000d"><declaringType assemblyName="GameOfLife.Console" name="UiHelper" token="2000003" namespace="GameOfLife.Helpers"/>
<parameter name="rowColumnPair" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004c" namespace="System"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IGridSize" token="2000006" namespace="GameOfLife.Contracts"/>
</resultType>
</method>
<beforeSource><![CDATA[                throw new ArgumentException(string.Format("The row column pair {0} is not valid", rowColumnPair));
            }
]]></beforeSource>
<source><![CDATA[            return new GridSize(rowIndex, colIndex);]]></source>
<afterSource><![CDATA[        }

        private static IPosition ParseCellPosition(string rowColumnPair, IGridSize gridSize)]]></afterSource>
</frame>
<tag exceptionState="unexpected"><generatedTestRef idref="c03cc877-d99e-4867-9ae1-3fe78c3ae558"/>
</tag>
<frameNode><frame value="  at UiHelper.GetGridSize(String) in F:\Ajay\Test Projects\GameOfLife\GameOfLife.Console\Helpers\UIHelper.cs(67)" method="UiHelper.GetGridSize(String)" offset="57" file="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Console\Helpers\UIHelper.cs" line="67"><method assemblyName="GameOfLife.Console" name="GetGridSize" static="true" token="600000b"><declaringType assemblyName="GameOfLife.Console" name="UiHelper" token="2000003" namespace="GameOfLife.Helpers"/>
<parameter name="gridRowColumnString" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004c" namespace="System"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IGridSize" token="2000006" namespace="GameOfLife.Contracts"/>
</resultType>
</method>
<beforeSource><![CDATA[            gridRowColumnString = gridRowColumnString.Trim(' ', ColumnSeparator);
            if (gridRowColumnString.Length != 0) //no alive cells
            {]]></beforeSource>
<source><![CDATA[                return ParseGridSize(gridRowColumnString);]]></source>
<afterSource><![CDATA[            }
            return null;
        }]]></afterSource>
</frame>
<tag exceptionState="unexpected"><generatedTestRef idref="c03cc877-d99e-4867-9ae1-3fe78c3ae558"/>
</tag>
</frameNode>
</frameNode>
</frameNode>
</frameException>
<frameException type="System.NullReferenceException"><tag exceptionState="unexpected"><generatedTestRef idref="eb03984c-816d-4ff7-801a-f5176fff11fd"/>
</tag>
<frameNode><frame value="  at UiHelper.ParseLiveCell(String, IGridSize) in F:\Ajay\Test Projects\GameOfLife\GameOfLife.Console\Helpers\UIHelper.cs(88)" method="UiHelper.ParseLiveCell(String, IGridSize)" offset="45" file="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Console\Helpers\UIHelper.cs" line="88"><method assemblyName="GameOfLife.Console" name="ParseLiveCell" static="true" token="600000c"><declaringType assemblyName="GameOfLife.Console" name="UiHelper" token="2000003" namespace="GameOfLife.Helpers"/>
<parameter name="gridRowColumnString" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004c" namespace="System"/>
</type>
</parameter>
<parameter name="gridSize" position="1"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IGridSize" token="2000006" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="IEnumerable`1" token="2000036" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="Class"><definition assemblyName="GameOfLife.Contracts" name="ICell" token="2000002" namespace="GameOfLife.Contracts"/>
</genericTypeArgument>
</resultType>
</method>
<beforeSource><![CDATA[            //var grid = CreateGrid(numberofRows, numberOfcolumns);

            var liveCells = new List<ICell>();]]></beforeSource>
<source><![CDATA[            gridRowColumnString = gridRowColumnString.Trim(' ', RowSeparator);]]></source>
<afterSource><![CDATA[            if (gridRowColumnString.Length != 0) //no alive cells
            {
                var rowColumnPairs = gridRowColumnString.Split(RowSeparator);]]></afterSource>
</frame>
<tag exceptionState="unexpected"><generatedTestRef idref="eb03984c-816d-4ff7-801a-f5176fff11fd"/>
</tag>
</frameNode>
<frameNode><frame value="  at UiHelper.ToConsoleFormattedString(IGrid) in F:\Ajay\Test Projects\GameOfLife\GameOfLife.Console\Helpers\UIHelper.cs(37)" method="UiHelper.ToConsoleFormattedString(IGrid)" offset="103" file="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Console\Helpers\UIHelper.cs" line="37"><method assemblyName="GameOfLife.Console" name="ToConsoleFormattedString" static="true" token="600000a"><declaringType assemblyName="GameOfLife.Console" name="UiHelper" token="2000003" namespace="GameOfLife.Helpers"/>
<parameter name="grid" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IGrid" token="2000008" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="String" token="200004c" namespace="System"/>
</resultType>
</method>
<beforeSource><![CDATA[        public static string ToConsoleFormattedString(this IGrid grid)
        {
            var builder = new StringBuilder();]]></beforeSource>
<source><![CDATA[            for (var rowIndex = 0; rowIndex < grid.GridSize.Rows; rowIndex++)]]></source>
<afterSource><![CDATA[            {
                for (var columnIndex = 0; columnIndex < grid.GridSize.Columns; columnIndex++)
                {]]></afterSource>
</frame>
<tag exceptionState="unexpected"><generatedTestRef idref="ad5412e6-113a-45f4-b52d-d080c20feaaf"/>
</tag>
</frameNode>
</frameException>
</frameTree>
