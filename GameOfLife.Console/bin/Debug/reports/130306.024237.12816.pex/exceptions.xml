<frameTree version="0.94.51023.0"><frameException type="System.NullReferenceException"><tag exceptionState="unexpected"><generatedTestRef idref="6b3a0732-dccb-4062-b21a-b897c1e5667d"/>
</tag>
<frameNode><frame value="  at UiHelper.GetGridSize(String) in F:\Ajay\Test Projects\GameOfLife\GameOfLife.Console\Helpers\UIHelper.cs(63)" method="UiHelper.GetGridSize(String)" offset="20" file="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Console\Helpers\UIHelper.cs" line="63"><method assemblyName="GameOfLife.Console" name="GetGridSize" static="true" token="600000b"><declaringType assemblyName="GameOfLife.Console" name="UiHelper" token="2000003" namespace="GameOfLife.Helpers"/>
<parameter name="gridRowColumnString" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004c" namespace="System"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IGridSize" token="2000006" namespace="GameOfLife.Contracts"/>
</resultType>
</method>
<beforeSource><![CDATA[        /// <returns></returns>
        public static IGridSize GetGridSize(this string gridRowColumnString)
        {]]></beforeSource>
<source><![CDATA[            gridRowColumnString = gridRowColumnString.Trim(' ', ColumnSeparator);]]></source>
<afterSource><![CDATA[            if (gridRowColumnString.Length != 0) //no alive cells
            {
                return ParseGridSize(gridRowColumnString);]]></afterSource>
</frame>
<tag exceptionState="unexpected"><generatedTestRef idref="6b3a0732-dccb-4062-b21a-b897c1e5667d"/>
</tag>
</frameNode>
<frameNode><frame value="  at UiHelper.ParseLiveCell(String, IGridSize) in F:\Ajay\Test Projects\GameOfLife\GameOfLife.Console\Helpers\UIHelper.cs(87)" method="UiHelper.ParseLiveCell(String, IGridSize)" offset="45" file="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Console\Helpers\UIHelper.cs" line="87"><method assemblyName="GameOfLife.Console" name="ParseLiveCell" static="true" token="600000c"><declaringType assemblyName="GameOfLife.Console" name="UiHelper" token="2000003" namespace="GameOfLife.Helpers"/>
<parameter name="gridRowColumnString" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004c" namespace="System"/>
</type>
</parameter>
<parameter name="gridSize" position="1"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IGridSize" token="2000006" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="IEnumerable`1" token="2000036" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="Class"><definition assemblyName="GameOfLife.Contracts" name="ICell" token="2000002" namespace="GameOfLife.Contracts"/>
</genericTypeArgument>
</resultType>
</method>
<beforeSource><![CDATA[            //var grid = CreateGrid(numberofRows, numberOfcolumns);

            var liveCells = new List<ICell>();]]></beforeSource>
<source><![CDATA[            gridRowColumnString = gridRowColumnString.Trim(' ', RowSeparator);]]></source>
<afterSource><![CDATA[            if (gridRowColumnString.Length != 0) //no alive cells
            {
                var rowColumnPairs = gridRowColumnString.Split(RowSeparator);]]></afterSource>
</frame>
<tag exceptionState="unexpected"><generatedTestRef idref="c6956455-65a8-47b9-9915-e943aafca48c"/>
</tag>
</frameNode>
<frameNode><frame value="  at UiHelper.ToConsoleFormattedString(IGrid) in F:\Ajay\Test Projects\GameOfLife\GameOfLife.Console\Helpers\UIHelper.cs(37)" method="UiHelper.ToConsoleFormattedString(IGrid)" offset="103" file="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Console\Helpers\UIHelper.cs" line="37"><method assemblyName="GameOfLife.Console" name="ToConsoleFormattedString" static="true" token="600000a"><declaringType assemblyName="GameOfLife.Console" name="UiHelper" token="2000003" namespace="GameOfLife.Helpers"/>
<parameter name="grid" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IGrid" token="2000008" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="String" token="200004c" namespace="System"/>
</resultType>
</method>
<beforeSource><![CDATA[        public static string ToConsoleFormattedString(this IGrid grid)
        {
            var builder = new StringBuilder();]]></beforeSource>
<source><![CDATA[            for (var rowIndex = 0; rowIndex < grid.GridSize.Rows; rowIndex++)]]></source>
<afterSource><![CDATA[            {
                for (var columnIndex = 0; columnIndex < grid.GridSize.Columns; columnIndex++)
                {]]></afterSource>
</frame>
<tag exceptionState="unexpected"><generatedTestRef idref="80ec7047-8746-4c05-ba04-e37393567c29"/>
</tag>
</frameNode>
</frameException>
<frameException type="System.ArgumentException"><tag exceptionState="expected"><generatedTestRef idref="aaf1dd56-2538-4ae7-a32c-281ffe6866c0"/>
</tag>
<frameNode><frame value="  at UiHelper.ParseGridSize(String) in F:\Ajay\Test Projects\GameOfLife\GameOfLife.Console\Helpers\UIHelper.cs(108)" method="UiHelper.ParseGridSize(String)" offset="32" file="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Console\Helpers\UIHelper.cs" line="108"><method assemblyName="GameOfLife.Console" name="ParseGridSize" static="true" token="600000d"><declaringType assemblyName="GameOfLife.Console" name="UiHelper" token="2000003" namespace="GameOfLife.Helpers"/>
<parameter name="rowColumnPair" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004c" namespace="System"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IGridSize" token="2000006" namespace="GameOfLife.Contracts"/>
</resultType>
</method>
<beforeSource><![CDATA[        {
            if (!rowColumnPair.Contains(ColumnSeparator)) //no valid row,col index pair
            {]]></beforeSource>
<source><![CDATA[                throw new ArgumentException(string.Format("The row column pair {0} has no rowColumn separator",]]></source>
<afterSource><![CDATA[                                                          rowColumnPair));
            }
]]></afterSource>
</frame>
<tag exceptionState="expected"><generatedTestRef idref="aaf1dd56-2538-4ae7-a32c-281ffe6866c0"/>
<generatedTestRef idref="6a79aff9-3028-4249-b3dd-cddf825ffe6d"/>
<generatedTestRef idref="dfd9e75d-440a-4340-8bed-96a535013fbe"/>
<generatedTestRef idref="0a12a6f0-e867-4f70-86c8-7d5f7f28aa97"/>
<generatedTestRef idref="99efef97-3919-4628-ad62-5c75771f4503"/>
</tag>
<frameNode><frame value="  at UiHelper.GetGridSize(String) in F:\Ajay\Test Projects\GameOfLife\GameOfLife.Console\Helpers\UIHelper.cs(66)" method="UiHelper.GetGridSize(String)" offset="42" file="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Console\Helpers\UIHelper.cs" line="66"><method assemblyName="GameOfLife.Console" name="GetGridSize" static="true" token="600000b"><declaringType assemblyName="GameOfLife.Console" name="UiHelper" token="2000003" namespace="GameOfLife.Helpers"/>
<parameter name="gridRowColumnString" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004c" namespace="System"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IGridSize" token="2000006" namespace="GameOfLife.Contracts"/>
</resultType>
</method>
<beforeSource><![CDATA[            gridRowColumnString = gridRowColumnString.Trim(' ', ColumnSeparator);
            if (gridRowColumnString.Length != 0) //no alive cells
            {]]></beforeSource>
<source><![CDATA[                return ParseGridSize(gridRowColumnString);]]></source>
<afterSource><![CDATA[            }
            return null;
        }]]></afterSource>
</frame>
<tag exceptionState="expected"><generatedTestRef idref="aaf1dd56-2538-4ae7-a32c-281ffe6866c0"/>
<generatedTestRef idref="6a79aff9-3028-4249-b3dd-cddf825ffe6d"/>
<generatedTestRef idref="dfd9e75d-440a-4340-8bed-96a535013fbe"/>
<generatedTestRef idref="0a12a6f0-e867-4f70-86c8-7d5f7f28aa97"/>
<generatedTestRef idref="99efef97-3919-4628-ad62-5c75771f4503"/>
</tag>
</frameNode>
</frameNode>
<frameNode><frame value="  at UiHelper.ParseGridSize(String) in F:\Ajay\Test Projects\GameOfLife\GameOfLife.Console\Helpers\UIHelper.cs(121)" method="UiHelper.ParseGridSize(String)" offset="131" file="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Console\Helpers\UIHelper.cs" line="121"><method assemblyName="GameOfLife.Console" name="ParseGridSize" static="true" token="600000d"><declaringType assemblyName="GameOfLife.Console" name="UiHelper" token="2000003" namespace="GameOfLife.Helpers"/>
<parameter name="rowColumnPair" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004c" namespace="System"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IGridSize" token="2000006" namespace="GameOfLife.Contracts"/>
</resultType>
</method>
<beforeSource><![CDATA[            int rowIndex;
            if (!Int32.TryParse(cellIndex[0], out rowIndex) || rowIndex < 0)
            {]]></beforeSource>
<source><![CDATA[                throw new ArgumentException(string.Format("The row column pair {0} is not valid", rowColumnPair));]]></source>
<afterSource><![CDATA[            }

            int colIndex;]]></afterSource>
</frame>
<tag exceptionState="expected"><generatedTestRef idref="6a502688-6037-4414-9a36-c64cba26a095"/>
<generatedTestRef idref="a01a0c10-4983-4c5b-94f7-687f81df7c73"/>
<generatedTestRef idref="ec12f4f1-60ed-4b6e-b589-1cbd98cce37c"/>
<generatedTestRef idref="fcebfb90-9a2f-4240-9594-e656b14de6c9"/>
<generatedTestRef idref="90242253-302a-435a-b2e6-dc06413bdadd"/>
<generatedTestRef idref="aad07794-40b9-4579-b543-8d6205752b8a"/>
</tag>
<frameNode><frame value="  at UiHelper.GetGridSize(String) in F:\Ajay\Test Projects\GameOfLife\GameOfLife.Console\Helpers\UIHelper.cs(66)" method="UiHelper.GetGridSize(String)" offset="42" file="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Console\Helpers\UIHelper.cs" line="66"><method assemblyName="GameOfLife.Console" name="GetGridSize" static="true" token="600000b"><declaringType assemblyName="GameOfLife.Console" name="UiHelper" token="2000003" namespace="GameOfLife.Helpers"/>
<parameter name="gridRowColumnString" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004c" namespace="System"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IGridSize" token="2000006" namespace="GameOfLife.Contracts"/>
</resultType>
</method>
<beforeSource><![CDATA[            gridRowColumnString = gridRowColumnString.Trim(' ', ColumnSeparator);
            if (gridRowColumnString.Length != 0) //no alive cells
            {]]></beforeSource>
<source><![CDATA[                return ParseGridSize(gridRowColumnString);]]></source>
<afterSource><![CDATA[            }
            return null;
        }]]></afterSource>
</frame>
<tag exceptionState="expected"><generatedTestRef idref="6a502688-6037-4414-9a36-c64cba26a095"/>
<generatedTestRef idref="a01a0c10-4983-4c5b-94f7-687f81df7c73"/>
<generatedTestRef idref="ec12f4f1-60ed-4b6e-b589-1cbd98cce37c"/>
<generatedTestRef idref="fcebfb90-9a2f-4240-9594-e656b14de6c9"/>
<generatedTestRef idref="90242253-302a-435a-b2e6-dc06413bdadd"/>
<generatedTestRef idref="aad07794-40b9-4579-b543-8d6205752b8a"/>
</tag>
</frameNode>
</frameNode>
<frameNode><frame value="  at UiHelper.ParseGridSize(String) in F:\Ajay\Test Projects\GameOfLife\GameOfLife.Console\Helpers\UIHelper.cs(127)" method="UiHelper.ParseGridSize(String)" offset="177" file="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Console\Helpers\UIHelper.cs" line="127"><method assemblyName="GameOfLife.Console" name="ParseGridSize" static="true" token="600000d"><declaringType assemblyName="GameOfLife.Console" name="UiHelper" token="2000003" namespace="GameOfLife.Helpers"/>
<parameter name="rowColumnPair" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004c" namespace="System"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IGridSize" token="2000006" namespace="GameOfLife.Contracts"/>
</resultType>
</method>
<beforeSource><![CDATA[            int colIndex;
            if (!Int32.TryParse(cellIndex[1], out colIndex) || colIndex < 0)
            {]]></beforeSource>
<source><![CDATA[                throw new ArgumentException(string.Format("The row column pair {0} is not valid", rowColumnPair));]]></source>
<afterSource><![CDATA[            }

            return new GridSize(rowIndex, colIndex);]]></afterSource>
</frame>
<tag exceptionState="expected"><generatedTestRef idref="57e8678a-9062-4352-b957-69a0c6bf5bf6"/>
<generatedTestRef idref="344883a5-3412-4ee1-8504-38ef21a6cb46"/>
<generatedTestRef idref="13a09c56-4833-410f-865f-82e6fff42c83"/>
</tag>
<frameNode><frame value="  at UiHelper.GetGridSize(String) in F:\Ajay\Test Projects\GameOfLife\GameOfLife.Console\Helpers\UIHelper.cs(66)" method="UiHelper.GetGridSize(String)" offset="42" file="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Console\Helpers\UIHelper.cs" line="66"><method assemblyName="GameOfLife.Console" name="GetGridSize" static="true" token="600000b"><declaringType assemblyName="GameOfLife.Console" name="UiHelper" token="2000003" namespace="GameOfLife.Helpers"/>
<parameter name="gridRowColumnString" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004c" namespace="System"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IGridSize" token="2000006" namespace="GameOfLife.Contracts"/>
</resultType>
</method>
<beforeSource><![CDATA[            gridRowColumnString = gridRowColumnString.Trim(' ', ColumnSeparator);
            if (gridRowColumnString.Length != 0) //no alive cells
            {]]></beforeSource>
<source><![CDATA[                return ParseGridSize(gridRowColumnString);]]></source>
<afterSource><![CDATA[            }
            return null;
        }]]></afterSource>
</frame>
<tag exceptionState="expected"><generatedTestRef idref="57e8678a-9062-4352-b957-69a0c6bf5bf6"/>
<generatedTestRef idref="344883a5-3412-4ee1-8504-38ef21a6cb46"/>
<generatedTestRef idref="13a09c56-4833-410f-865f-82e6fff42c83"/>
</tag>
</frameNode>
</frameNode>
<frameNode><frame value="  at UiHelper.ParseCellPosition(String, IGridSize) in F:\Ajay\Test Projects\GameOfLife\GameOfLife.Console\Helpers\UIHelper.cs(137)" method="UiHelper.ParseCellPosition(String, IGridSize)" offset="32" file="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Console\Helpers\UIHelper.cs" line="137"><method assemblyName="GameOfLife.Console" name="ParseCellPosition" static="true" token="600000e"><declaringType assemblyName="GameOfLife.Console" name="UiHelper" token="2000003" namespace="GameOfLife.Helpers"/>
<parameter name="rowColumnPair" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004c" namespace="System"/>
</type>
</parameter>
<parameter name="gridSize" position="1"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IGridSize" token="2000006" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IPosition" token="2000005" namespace="GameOfLife.Contracts"/>
</resultType>
</method>
<beforeSource><![CDATA[        {
            if (!rowColumnPair.Contains(ColumnSeparator)) //no valid row,col index pair
            {]]></beforeSource>
<source><![CDATA[                throw new ArgumentException(string.Format("The row column pair {0} has no rowColumn separator",]]></source>
<afterSource><![CDATA[                                                          rowColumnPair));
            }
]]></afterSource>
</frame>
<tag exceptionState="expected"><generatedTestRef idref="898c46f2-3f7d-4b4d-b90b-bf94a735568c"/>
<generatedTestRef idref="65a98f6c-304b-4b18-ac7d-5e99c09c600e"/>
<generatedTestRef idref="50a4cd4a-598c-478a-9cf5-24bb03867445"/>
</tag>
<frameNode><frame value="  at &lt;&gt;c__DisplayClass4.&lt;ParseLiveCell&gt;b__0(String) in F:\Ajay\Test Projects\GameOfLife\GameOfLife.Console\Helpers\UIHelper.cs(92)" method="&lt;&gt;c__DisplayClass4.&lt;ParseLiveCell&gt;b__0(String)" offset="7" file="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Console\Helpers\UIHelper.cs" line="92"><method assemblyName="GameOfLife.Console" name="&lt;ParseLiveCell&gt;b__0" token="6000015"><declaringType assemblyName="GameOfLife.Console" name="&lt;&gt;c__DisplayClass4" token="2000006"><declaringType assemblyName="GameOfLife.Console" name="UiHelper" token="2000003" namespace="GameOfLife.Helpers"/>
</declaringType>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Console" name="&lt;&gt;c__DisplayClass4" token="2000006"><declaringType assemblyName="GameOfLife.Console" name="UiHelper" token="2000003" namespace="GameOfLife.Helpers"/>
</definition>
</type>
</parameter>
<parameter name="rowColumnPair" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004c" namespace="System"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IPosition" token="2000005" namespace="GameOfLife.Contracts"/>
</resultType>
</method>
<beforeSource><![CDATA[            {
                var rowColumnPairs = gridRowColumnString.Split(RowSeparator);
                liveCells.AddRange(]]></beforeSource>
<source><![CDATA[                    rowColumnPairs.Select(rowColumnPair => ParseCellPosition(rowColumnPair, gridSize)).Select(]]></source>
<afterSource><![CDATA[                        cellPosition => new Cell(cellPosition, true)).Cast<ICell>());
            }
]]></afterSource>
</frame>
<tag exceptionState="expected"><generatedTestRef idref="898c46f2-3f7d-4b4d-b90b-bf94a735568c"/>
<generatedTestRef idref="65a98f6c-304b-4b18-ac7d-5e99c09c600e"/>
<generatedTestRef idref="50a4cd4a-598c-478a-9cf5-24bb03867445"/>
</tag>
<frameNode><frame value="  at &lt;&gt;c__DisplayClass12`3.&lt;CombineSelectors&gt;b__11(!0)" method="&lt;&gt;c__DisplayClass12`3.&lt;CombineSelectors&gt;b__11(!0)" offset="13"><method assemblyName="System.Core" name="&lt;CombineSelectors&gt;b__11" token="600141d"><declaringType assemblyName="System.Core" name="&lt;&gt;c__DisplayClass12`3" token="2000234"><declaringType assemblyName="System.Core" name="Enumerable" token="200004c" namespace="System.Linq"/>
<genericParameter value="TSource"/>
<genericParameter value="TMiddle"/>
<genericParameter value="TResult"/>
</declaringType>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="System.Core" name="&lt;&gt;c__DisplayClass12`3" token="2000234"><declaringType assemblyName="System.Core" name="Enumerable" token="200004c" namespace="System.Linq"/>
<genericParameter value="TSource"/>
<genericParameter value="TMiddle"/>
<genericParameter value="TResult"/>
</definition>
<genericTypeArgument spec="GenericTypeParameter" index="0"/>
<genericTypeArgument spec="GenericTypeParameter" index="1"/>
<genericTypeArgument spec="GenericTypeParameter" index="2"/>
</type>
</parameter>
<parameter name="x" position="1"><type spec="GenericTypeParameter" index="0"/>
</parameter>
<resultType spec="GenericTypeParameter" index="2"/>
</method>
</frame>
<tag exceptionState="expected"><generatedTestRef idref="898c46f2-3f7d-4b4d-b90b-bf94a735568c"/>
<generatedTestRef idref="65a98f6c-304b-4b18-ac7d-5e99c09c600e"/>
<generatedTestRef idref="50a4cd4a-598c-478a-9cf5-24bb03867445"/>
</tag>
<frameNode><frame value="  at WhereSelectArrayIterator`2.MoveNext()" method="WhereSelectArrayIterator`2.MoveNext()" offset="73"><method assemblyName="System.Core" name="MoveNext" token="60004d5"><declaringType assemblyName="System.Core" name="WhereSelectArrayIterator`2" token="2000052"><declaringType assemblyName="System.Core" name="Enumerable" token="200004c" namespace="System.Linq"/>
<genericParameter value="TSource"/>
<genericParameter value="TResult"/>
</declaringType>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="System.Core" name="WhereSelectArrayIterator`2" token="2000052"><declaringType assemblyName="System.Core" name="Enumerable" token="200004c" namespace="System.Linq"/>
<genericParameter value="TSource"/>
<genericParameter value="TResult"/>
</definition>
<genericTypeArgument spec="GenericTypeParameter" index="0"/>
<genericTypeArgument spec="GenericTypeParameter" index="1"/>
</type>
</parameter>
<resultType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009e" namespace="System"/>
</resultType>
</method>
</frame>
<tag exceptionState="expected"><generatedTestRef idref="898c46f2-3f7d-4b4d-b90b-bf94a735568c"/>
<generatedTestRef idref="65a98f6c-304b-4b18-ac7d-5e99c09c600e"/>
<generatedTestRef idref="50a4cd4a-598c-478a-9cf5-24bb03867445"/>
</tag>
<frameNode><frame value="  at List`1.InsertRange(Int32, IEnumerable`1&lt;!0&gt;)" method="List`1.InsertRange(Int32, IEnumerable`1&lt;!0&gt;)" offset="235"><method assemblyName="mscorlib" name="InsertRange" token="600726f"><declaringType assemblyName="mscorlib" name="List`1" token="2000362" namespace="System.Collections.Generic"><genericParameter value="T"/>
</declaringType>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="List`1" token="2000362" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="GenericTypeParameter" index="0"/>
</type>
</parameter>
<parameter position="1"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000f3" namespace="System"/>
</type>
</parameter>
<parameter position="2"><type spec="Class"><definition assemblyName="mscorlib" name="IEnumerable`1" token="2000036" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="GenericTypeParameter" index="0"/>
</type>
</parameter>
</method>
</frame>
<tag exceptionState="expected"><generatedTestRef idref="898c46f2-3f7d-4b4d-b90b-bf94a735568c"/>
<generatedTestRef idref="65a98f6c-304b-4b18-ac7d-5e99c09c600e"/>
<generatedTestRef idref="50a4cd4a-598c-478a-9cf5-24bb03867445"/>
</tag>
<frameNode><frame value="  at List`1.AddRange(IEnumerable`1&lt;!0&gt;)" method="List`1.AddRange(IEnumerable`1&lt;!0&gt;)" offset="8"><method assemblyName="mscorlib" name="AddRange" token="600724c"><declaringType assemblyName="mscorlib" name="List`1" token="2000362" namespace="System.Collections.Generic"><genericParameter value="T"/>
</declaringType>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="List`1" token="2000362" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="GenericTypeParameter" index="0"/>
</type>
</parameter>
<parameter position="1"><type spec="Class"><definition assemblyName="mscorlib" name="IEnumerable`1" token="2000036" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="GenericTypeParameter" index="0"/>
</type>
</parameter>
</method>
</frame>
<tag exceptionState="expected"><generatedTestRef idref="898c46f2-3f7d-4b4d-b90b-bf94a735568c"/>
<generatedTestRef idref="65a98f6c-304b-4b18-ac7d-5e99c09c600e"/>
<generatedTestRef idref="50a4cd4a-598c-478a-9cf5-24bb03867445"/>
</tag>
<frameNode><frame value="  at UiHelper.ParseLiveCell(String, IGridSize) in F:\Ajay\Test Projects\GameOfLife\GameOfLife.Console\Helpers\UIHelper.cs(91)" method="UiHelper.ParseLiveCell(String, IGridSize)" offset="158" file="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Console\Helpers\UIHelper.cs" line="91"><method assemblyName="GameOfLife.Console" name="ParseLiveCell" static="true" token="600000c"><declaringType assemblyName="GameOfLife.Console" name="UiHelper" token="2000003" namespace="GameOfLife.Helpers"/>
<parameter name="gridRowColumnString" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004c" namespace="System"/>
</type>
</parameter>
<parameter name="gridSize" position="1"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IGridSize" token="2000006" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="IEnumerable`1" token="2000036" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="Class"><definition assemblyName="GameOfLife.Contracts" name="ICell" token="2000002" namespace="GameOfLife.Contracts"/>
</genericTypeArgument>
</resultType>
</method>
<beforeSource><![CDATA[            if (gridRowColumnString.Length != 0) //no alive cells
            {
                var rowColumnPairs = gridRowColumnString.Split(RowSeparator);]]></beforeSource>
<source><![CDATA[                liveCells.AddRange(]]></source>
<afterSource><![CDATA[                    rowColumnPairs.Select(rowColumnPair => ParseCellPosition(rowColumnPair, gridSize)).Select(
                        cellPosition => new Cell(cellPosition, true)).Cast<ICell>());
            }]]></afterSource>
</frame>
<tag exceptionState="expected"><generatedTestRef idref="898c46f2-3f7d-4b4d-b90b-bf94a735568c"/>
<generatedTestRef idref="65a98f6c-304b-4b18-ac7d-5e99c09c600e"/>
<generatedTestRef idref="50a4cd4a-598c-478a-9cf5-24bb03867445"/>
</tag>
</frameNode>
</frameNode>
</frameNode>
</frameNode>
</frameNode>
</frameNode>
</frameNode>
<frameNode><frame value="  at UiHelper.ParseCellPosition(String, IGridSize) in F:\Ajay\Test Projects\GameOfLife\GameOfLife.Console\Helpers\UIHelper.cs(150)" method="UiHelper.ParseCellPosition(String, IGridSize)" offset="137" file="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Console\Helpers\UIHelper.cs" line="150"><method assemblyName="GameOfLife.Console" name="ParseCellPosition" static="true" token="600000e"><declaringType assemblyName="GameOfLife.Console" name="UiHelper" token="2000003" namespace="GameOfLife.Helpers"/>
<parameter name="rowColumnPair" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004c" namespace="System"/>
</type>
</parameter>
<parameter name="gridSize" position="1"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IGridSize" token="2000006" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IPosition" token="2000005" namespace="GameOfLife.Contracts"/>
</resultType>
</method>
<beforeSource><![CDATA[            int rowIndex;
            if (!Int32.TryParse(cellIndex[0], out rowIndex) || rowIndex < 0 || rowIndex >= gridSize.Rows)
            {]]></beforeSource>
<source><![CDATA[                throw new ArgumentException(string.Format("The row column pair {0} is not valid", rowColumnPair));]]></source>
<afterSource><![CDATA[            }

            int colIndex;]]></afterSource>
</frame>
<tag exceptionState="expected"><generatedTestRef idref="65562eef-5f58-4667-b54d-f5edb4f4db1d"/>
<generatedTestRef idref="2a625352-1828-4da8-9cac-c222a378f085"/>
</tag>
<frameNode><frame value="  at &lt;&gt;c__DisplayClass4.&lt;ParseLiveCell&gt;b__0(String) in F:\Ajay\Test Projects\GameOfLife\GameOfLife.Console\Helpers\UIHelper.cs(92)" method="&lt;&gt;c__DisplayClass4.&lt;ParseLiveCell&gt;b__0(String)" offset="7" file="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Console\Helpers\UIHelper.cs" line="92"><method assemblyName="GameOfLife.Console" name="&lt;ParseLiveCell&gt;b__0" token="6000015"><declaringType assemblyName="GameOfLife.Console" name="&lt;&gt;c__DisplayClass4" token="2000006"><declaringType assemblyName="GameOfLife.Console" name="UiHelper" token="2000003" namespace="GameOfLife.Helpers"/>
</declaringType>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Console" name="&lt;&gt;c__DisplayClass4" token="2000006"><declaringType assemblyName="GameOfLife.Console" name="UiHelper" token="2000003" namespace="GameOfLife.Helpers"/>
</definition>
</type>
</parameter>
<parameter name="rowColumnPair" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004c" namespace="System"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IPosition" token="2000005" namespace="GameOfLife.Contracts"/>
</resultType>
</method>
<beforeSource><![CDATA[            {
                var rowColumnPairs = gridRowColumnString.Split(RowSeparator);
                liveCells.AddRange(]]></beforeSource>
<source><![CDATA[                    rowColumnPairs.Select(rowColumnPair => ParseCellPosition(rowColumnPair, gridSize)).Select(]]></source>
<afterSource><![CDATA[                        cellPosition => new Cell(cellPosition, true)).Cast<ICell>());
            }
]]></afterSource>
</frame>
<tag exceptionState="expected"><generatedTestRef idref="65562eef-5f58-4667-b54d-f5edb4f4db1d"/>
<generatedTestRef idref="2a625352-1828-4da8-9cac-c222a378f085"/>
</tag>
<frameNode><frame value="  at &lt;&gt;c__DisplayClass12`3.&lt;CombineSelectors&gt;b__11(!0)" method="&lt;&gt;c__DisplayClass12`3.&lt;CombineSelectors&gt;b__11(!0)" offset="13"><method assemblyName="System.Core" name="&lt;CombineSelectors&gt;b__11" token="600141d"><declaringType assemblyName="System.Core" name="&lt;&gt;c__DisplayClass12`3" token="2000234"><declaringType assemblyName="System.Core" name="Enumerable" token="200004c" namespace="System.Linq"/>
<genericParameter value="TSource"/>
<genericParameter value="TMiddle"/>
<genericParameter value="TResult"/>
</declaringType>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="System.Core" name="&lt;&gt;c__DisplayClass12`3" token="2000234"><declaringType assemblyName="System.Core" name="Enumerable" token="200004c" namespace="System.Linq"/>
<genericParameter value="TSource"/>
<genericParameter value="TMiddle"/>
<genericParameter value="TResult"/>
</definition>
<genericTypeArgument spec="GenericTypeParameter" index="0"/>
<genericTypeArgument spec="GenericTypeParameter" index="1"/>
<genericTypeArgument spec="GenericTypeParameter" index="2"/>
</type>
</parameter>
<parameter name="x" position="1"><type spec="GenericTypeParameter" index="0"/>
</parameter>
<resultType spec="GenericTypeParameter" index="2"/>
</method>
</frame>
<tag exceptionState="expected"><generatedTestRef idref="65562eef-5f58-4667-b54d-f5edb4f4db1d"/>
<generatedTestRef idref="2a625352-1828-4da8-9cac-c222a378f085"/>
</tag>
<frameNode><frame value="  at WhereSelectArrayIterator`2.MoveNext()" method="WhereSelectArrayIterator`2.MoveNext()" offset="73"><method assemblyName="System.Core" name="MoveNext" token="60004d5"><declaringType assemblyName="System.Core" name="WhereSelectArrayIterator`2" token="2000052"><declaringType assemblyName="System.Core" name="Enumerable" token="200004c" namespace="System.Linq"/>
<genericParameter value="TSource"/>
<genericParameter value="TResult"/>
</declaringType>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="System.Core" name="WhereSelectArrayIterator`2" token="2000052"><declaringType assemblyName="System.Core" name="Enumerable" token="200004c" namespace="System.Linq"/>
<genericParameter value="TSource"/>
<genericParameter value="TResult"/>
</definition>
<genericTypeArgument spec="GenericTypeParameter" index="0"/>
<genericTypeArgument spec="GenericTypeParameter" index="1"/>
</type>
</parameter>
<resultType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009e" namespace="System"/>
</resultType>
</method>
</frame>
<tag exceptionState="expected"><generatedTestRef idref="65562eef-5f58-4667-b54d-f5edb4f4db1d"/>
<generatedTestRef idref="2a625352-1828-4da8-9cac-c222a378f085"/>
</tag>
<frameNode><frame value="  at List`1.InsertRange(Int32, IEnumerable`1&lt;!0&gt;)" method="List`1.InsertRange(Int32, IEnumerable`1&lt;!0&gt;)" offset="235"><method assemblyName="mscorlib" name="InsertRange" token="600726f"><declaringType assemblyName="mscorlib" name="List`1" token="2000362" namespace="System.Collections.Generic"><genericParameter value="T"/>
</declaringType>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="List`1" token="2000362" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="GenericTypeParameter" index="0"/>
</type>
</parameter>
<parameter position="1"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000f3" namespace="System"/>
</type>
</parameter>
<parameter position="2"><type spec="Class"><definition assemblyName="mscorlib" name="IEnumerable`1" token="2000036" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="GenericTypeParameter" index="0"/>
</type>
</parameter>
</method>
</frame>
<tag exceptionState="expected"><generatedTestRef idref="65562eef-5f58-4667-b54d-f5edb4f4db1d"/>
<generatedTestRef idref="2a625352-1828-4da8-9cac-c222a378f085"/>
</tag>
<frameNode><frame value="  at List`1.AddRange(IEnumerable`1&lt;!0&gt;)" method="List`1.AddRange(IEnumerable`1&lt;!0&gt;)" offset="8"><method assemblyName="mscorlib" name="AddRange" token="600724c"><declaringType assemblyName="mscorlib" name="List`1" token="2000362" namespace="System.Collections.Generic"><genericParameter value="T"/>
</declaringType>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="List`1" token="2000362" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="GenericTypeParameter" index="0"/>
</type>
</parameter>
<parameter position="1"><type spec="Class"><definition assemblyName="mscorlib" name="IEnumerable`1" token="2000036" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="GenericTypeParameter" index="0"/>
</type>
</parameter>
</method>
</frame>
<tag exceptionState="expected"><generatedTestRef idref="65562eef-5f58-4667-b54d-f5edb4f4db1d"/>
<generatedTestRef idref="2a625352-1828-4da8-9cac-c222a378f085"/>
</tag>
<frameNode><frame value="  at UiHelper.ParseLiveCell(String, IGridSize) in F:\Ajay\Test Projects\GameOfLife\GameOfLife.Console\Helpers\UIHelper.cs(91)" method="UiHelper.ParseLiveCell(String, IGridSize)" offset="158" file="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Console\Helpers\UIHelper.cs" line="91"><method assemblyName="GameOfLife.Console" name="ParseLiveCell" static="true" token="600000c"><declaringType assemblyName="GameOfLife.Console" name="UiHelper" token="2000003" namespace="GameOfLife.Helpers"/>
<parameter name="gridRowColumnString" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004c" namespace="System"/>
</type>
</parameter>
<parameter name="gridSize" position="1"><type spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IGridSize" token="2000006" namespace="GameOfLife.Contracts"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="IEnumerable`1" token="2000036" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="Class"><definition assemblyName="GameOfLife.Contracts" name="ICell" token="2000002" namespace="GameOfLife.Contracts"/>
</genericTypeArgument>
</resultType>
</method>
<beforeSource><![CDATA[            if (gridRowColumnString.Length != 0) //no alive cells
            {
                var rowColumnPairs = gridRowColumnString.Split(RowSeparator);]]></beforeSource>
<source><![CDATA[                liveCells.AddRange(]]></source>
<afterSource><![CDATA[                    rowColumnPairs.Select(rowColumnPair => ParseCellPosition(rowColumnPair, gridSize)).Select(
                        cellPosition => new Cell(cellPosition, true)).Cast<ICell>());
            }]]></afterSource>
</frame>
<tag exceptionState="expected"><generatedTestRef idref="65562eef-5f58-4667-b54d-f5edb4f4db1d"/>
<generatedTestRef idref="2a625352-1828-4da8-9cac-c222a378f085"/>
</tag>
</frameNode>
</frameNode>
</frameNode>
</frameNode>
</frameNode>
</frameNode>
</frameNode>
</frameException>
<frameException type="System.ArgumentOutOfRangeException"><tag exceptionState="unexpected"><generatedTestRef idref="34baf13b-e0ab-449f-9f90-425f3bbf7897"/>
</tag>
<frameNode><frame value="  at GridSize..ctor(Int32, Int32) in F:\Ajay\Test Projects\GameOfLife\GameOfLife.Models\GridSize.cs(18)" method="GridSize..ctor(Int32, Int32)" offset="31" file="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Models\GridSize.cs" line="18"><method assemblyName="GameOfLife.Models" name=".ctor" token="6000005"><declaringType assemblyName="GameOfLife.Models" name="GridSize" token="2000002" namespace="GameOfLife.Models"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Models" name="GridSize" token="2000002" namespace="GameOfLife.Models"/>
</type>
</parameter>
<parameter name="rows" position="1"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000f3" namespace="System"/>
</type>
</parameter>
<parameter name="columns" position="2"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000f3" namespace="System"/>
</type>
</parameter>
</method>
<beforeSource><![CDATA[
        public GridSize(int rows, int columns)
        {]]></beforeSource>
<source><![CDATA[            if (rows <= 0) throw new ArgumentOutOfRangeException("rows", "rows value must be > 0");]]></source>
<afterSource><![CDATA[            if (columns <= 0) throw new ArgumentOutOfRangeException("columns", "columns value must be > 0");
            Rows = rows;
            Columns = columns;]]></afterSource>
</frame>
<tag exceptionState="unexpected"><generatedTestRef idref="34baf13b-e0ab-449f-9f90-425f3bbf7897"/>
<generatedTestRef idref="a3814e6e-7f6e-49cf-8339-606c06660ac5"/>
</tag>
<frameNode><frame value="  at UiHelper.ParseGridSize(String) in F:\Ajay\Test Projects\GameOfLife\GameOfLife.Console\Helpers\UIHelper.cs(130)" method="UiHelper.ParseGridSize(String)" offset="180" file="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Console\Helpers\UIHelper.cs" line="130"><method assemblyName="GameOfLife.Console" name="ParseGridSize" static="true" token="600000d"><declaringType assemblyName="GameOfLife.Console" name="UiHelper" token="2000003" namespace="GameOfLife.Helpers"/>
<parameter name="rowColumnPair" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004c" namespace="System"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IGridSize" token="2000006" namespace="GameOfLife.Contracts"/>
</resultType>
</method>
<beforeSource><![CDATA[                throw new ArgumentException(string.Format("The row column pair {0} is not valid", rowColumnPair));
            }
]]></beforeSource>
<source><![CDATA[            return new GridSize(rowIndex, colIndex);]]></source>
<afterSource><![CDATA[        }

        private static IPosition ParseCellPosition(string rowColumnPair, IGridSize gridSize)]]></afterSource>
</frame>
<tag exceptionState="unexpected"><generatedTestRef idref="34baf13b-e0ab-449f-9f90-425f3bbf7897"/>
<generatedTestRef idref="a3814e6e-7f6e-49cf-8339-606c06660ac5"/>
</tag>
<frameNode><frame value="  at UiHelper.GetGridSize(String) in F:\Ajay\Test Projects\GameOfLife\GameOfLife.Console\Helpers\UIHelper.cs(66)" method="UiHelper.GetGridSize(String)" offset="42" file="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Console\Helpers\UIHelper.cs" line="66"><method assemblyName="GameOfLife.Console" name="GetGridSize" static="true" token="600000b"><declaringType assemblyName="GameOfLife.Console" name="UiHelper" token="2000003" namespace="GameOfLife.Helpers"/>
<parameter name="gridRowColumnString" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004c" namespace="System"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IGridSize" token="2000006" namespace="GameOfLife.Contracts"/>
</resultType>
</method>
<beforeSource><![CDATA[            gridRowColumnString = gridRowColumnString.Trim(' ', ColumnSeparator);
            if (gridRowColumnString.Length != 0) //no alive cells
            {]]></beforeSource>
<source><![CDATA[                return ParseGridSize(gridRowColumnString);]]></source>
<afterSource><![CDATA[            }
            return null;
        }]]></afterSource>
</frame>
<tag exceptionState="unexpected"><generatedTestRef idref="34baf13b-e0ab-449f-9f90-425f3bbf7897"/>
<generatedTestRef idref="a3814e6e-7f6e-49cf-8339-606c06660ac5"/>
</tag>
</frameNode>
</frameNode>
</frameNode>
<frameNode><frame value="  at GridSize..ctor(Int32, Int32) in F:\Ajay\Test Projects\GameOfLife\GameOfLife.Models\GridSize.cs(19)" method="GridSize..ctor(Int32, Int32)" offset="55" file="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Models\GridSize.cs" line="19"><method assemblyName="GameOfLife.Models" name=".ctor" token="6000005"><declaringType assemblyName="GameOfLife.Models" name="GridSize" token="2000002" namespace="GameOfLife.Models"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="GameOfLife.Models" name="GridSize" token="2000002" namespace="GameOfLife.Models"/>
</type>
</parameter>
<parameter name="rows" position="1"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000f3" namespace="System"/>
</type>
</parameter>
<parameter name="columns" position="2"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000f3" namespace="System"/>
</type>
</parameter>
</method>
<beforeSource><![CDATA[        public GridSize(int rows, int columns)
        {
            if (rows <= 0) throw new ArgumentOutOfRangeException("rows", "rows value must be > 0");]]></beforeSource>
<source><![CDATA[            if (columns <= 0) throw new ArgumentOutOfRangeException("columns", "columns value must be > 0");]]></source>
<afterSource><![CDATA[            Rows = rows;
            Columns = columns;
        }]]></afterSource>
</frame>
<tag exceptionState="unexpected"><generatedTestRef idref="e9d1049b-b0ee-41d2-9320-c8d91a62d117"/>
</tag>
<frameNode><frame value="  at UiHelper.ParseGridSize(String) in F:\Ajay\Test Projects\GameOfLife\GameOfLife.Console\Helpers\UIHelper.cs(130)" method="UiHelper.ParseGridSize(String)" offset="180" file="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Console\Helpers\UIHelper.cs" line="130"><method assemblyName="GameOfLife.Console" name="ParseGridSize" static="true" token="600000d"><declaringType assemblyName="GameOfLife.Console" name="UiHelper" token="2000003" namespace="GameOfLife.Helpers"/>
<parameter name="rowColumnPair" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004c" namespace="System"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IGridSize" token="2000006" namespace="GameOfLife.Contracts"/>
</resultType>
</method>
<beforeSource><![CDATA[                throw new ArgumentException(string.Format("The row column pair {0} is not valid", rowColumnPair));
            }
]]></beforeSource>
<source><![CDATA[            return new GridSize(rowIndex, colIndex);]]></source>
<afterSource><![CDATA[        }

        private static IPosition ParseCellPosition(string rowColumnPair, IGridSize gridSize)]]></afterSource>
</frame>
<tag exceptionState="unexpected"><generatedTestRef idref="e9d1049b-b0ee-41d2-9320-c8d91a62d117"/>
</tag>
<frameNode><frame value="  at UiHelper.GetGridSize(String) in F:\Ajay\Test Projects\GameOfLife\GameOfLife.Console\Helpers\UIHelper.cs(66)" method="UiHelper.GetGridSize(String)" offset="42" file="F:\Ajay\Test Projects\GameOfLife\GameOfLife.Console\Helpers\UIHelper.cs" line="66"><method assemblyName="GameOfLife.Console" name="GetGridSize" static="true" token="600000b"><declaringType assemblyName="GameOfLife.Console" name="UiHelper" token="2000003" namespace="GameOfLife.Helpers"/>
<parameter name="gridRowColumnString" position="0"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004c" namespace="System"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="GameOfLife.Contracts" name="IGridSize" token="2000006" namespace="GameOfLife.Contracts"/>
</resultType>
</method>
<beforeSource><![CDATA[            gridRowColumnString = gridRowColumnString.Trim(' ', ColumnSeparator);
            if (gridRowColumnString.Length != 0) //no alive cells
            {]]></beforeSource>
<source><![CDATA[                return ParseGridSize(gridRowColumnString);]]></source>
<afterSource><![CDATA[            }
            return null;
        }]]></afterSource>
</frame>
<tag exceptionState="unexpected"><generatedTestRef idref="e9d1049b-b0ee-41d2-9320-c8d91a62d117"/>
</tag>
</frameNode>
</frameNode>
</frameNode>
</frameException>
</frameTree>
